{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-432b8422\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"s-canvas\"\n};\nconst _hoisted_2 = [\"width\", \"height\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", {\n    id: \"s-canvas\",\n    width: $props.contentWidth,\n    height: $props.contentHeight\n  }, null, 8 /* PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","id","width","$props","contentWidth","height","contentHeight"],"sources":["C:\\GitHubWarehouse\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\login\\Identify.vue"],"sourcesContent":["<template>\r\n    <div class=\"s-canvas\">\r\n        <canvas id=\"s-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\r\n    </div>\r\n</template>\r\n \r\n<script>\r\n    export default {\r\n        name: \"SIdentify\",\r\n        props: {\r\n            identifyCode: {\r\n                type: String,\r\n                default: '1234'\r\n            },\r\n            fontSizeMin: {\r\n                type: Number,\r\n                default: 25\r\n            },\r\n            fontSizeMax: {\r\n                type: Number,\r\n                default: 30\r\n            },\r\n            backgroundColorMin: {\r\n                type: Number,\r\n                default: 255\r\n            },\r\n            backgroundColorMax: {\r\n                type: Number,\r\n                default: 255\r\n            },\r\n            colorMin: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            colorMax: {\r\n                type: Number,\r\n                default: 160\r\n            },\r\n            lineColorMin: {\r\n                type: Number,\r\n                default: 100\r\n            },lineColorMax: {\r\n                type: Number,\r\n                default: 255\r\n            },\r\n            dotColorMin: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            dotColorMax: {\r\n                type: Number,\r\n                default: 255\r\n            },\r\n            contentWidth: {\r\n                type: Number,\r\n                default: 112\r\n            },\r\n            contentHeight: {\r\n                type: Number,\r\n                default: 31\r\n            }\r\n        },\r\n        methods: {\r\n            // 生成一个随机数\r\n            randomNum(min, max) {\r\n                return Math.floor(Math.random() * (max - min) + min)\r\n            },\r\n            // 生成一个随机的颜色\r\n            randomColor(min, max) {\r\n                let r = this.randomNum(min, max)\r\n                let g = this.randomNum(min, max)\r\n                let b = this.randomNum(min, max)\r\n                return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n            },\r\n            drawPic() {\r\n                let canvas = document.getElementById('s-canvas')\r\n                let ctx = canvas.getContext('2d')\r\n                ctx.textBaseline = 'bottom'\r\n                // 绘制背景\r\n                ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\r\n                ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\r\n                // 绘制文字\r\n                for (let i = 0; i < this.identifyCode.length; i++) {\r\n                    this.drawText(ctx, this.identifyCode[i], i)\r\n                }\r\n                this.drawLine(ctx)\r\n                this.drawDot(ctx)\r\n            },\r\n            drawText(ctx, txt, i) {\r\n                ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\r\n                ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei'\r\n                let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\r\n                let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\r\n                var deg = this.randomNum(-45, 45)\r\n                // 修改坐标原点和旋转角度\r\n                ctx.translate(x, y)\r\n                ctx.rotate(deg * Math.PI / 180)\r\n                ctx.fillText(txt, 0, 0)\r\n                // 恢复坐标原点和旋转角度\r\n                ctx.rotate(-deg * Math.PI / 180)\r\n                ctx.translate(-x, -y)\r\n            },\r\n            drawLine(ctx) {\r\n                // 绘制干扰线\r\n                for (let i = 0; i < 5; i++) {\r\n                    ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\r\n                    ctx.beginPath()\r\n                    ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n                    ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n                    ctx.stroke()\r\n                }\r\n            },\r\n            drawDot(ctx) {\r\n                // 绘制干扰点\r\n                for (let i = 0; i < 80; i++) {\r\n                    ctx.fillStyle = this.randomColor(0, 255)\r\n                    ctx.beginPath()\r\n                    ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\r\n                    ctx.fill()\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            identifyCode() {\r\n                this.drawPic()\r\n            }\r\n        },\r\n        mounted() {\r\n            this.drawPic()\r\n        }\r\n    }\r\n</script>\r\n \r\n<style scoped>\r\n    .s-canvas {\r\n        height: 38px;\r\n \r\n    }\r\n    .s-canvas canvas{\r\n        margin-top: 1px;\r\n        margin-left: 8px;\r\n    }\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAU;;;uBAArBC,mBAAA,CAEM,OAFNC,UAEM,GADFC,mBAAA,CAA6E;IAArEC,EAAE,EAAC,UAAU;IAAEC,KAAK,EAAEC,MAAA,CAAAC,YAAY;IAAGC,MAAM,EAAEF,MAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}