{"ast":null,"code":"import { onBeforeUnmount, onMounted, watch, shallowRef, computed } from 'vue';\nimport KeyCode from '../../_util/KeyCode';\nimport { addGlobalMousedownEvent, getTargetFromEvent } from '../utils/uiUtil';\nimport raf from '../../_util/raf';\nexport default function usePickerInput(_ref) {\n  let {\n    open,\n    value,\n    isClickOutside,\n    triggerOpen,\n    forwardKeydown,\n    onKeydown,\n    blurToCancel,\n    onSubmit,\n    onCancel,\n    onFocus,\n    onBlur\n  } = _ref;\n  const typing = shallowRef(false);\n  const focused = shallowRef(false);\n  /**\r\n   * We will prevent blur to handle open event when user click outside,\r\n   * since this will repeat trigger `onOpenChange` event.\r\n   */\n  const preventBlurRef = shallowRef(false);\n  const valueChangedRef = shallowRef(false);\n  const preventDefaultRef = shallowRef(false);\n  const inputProps = computed(() => ({\n    onMousedown: () => {\n      typing.value = true;\n      triggerOpen(true);\n    },\n    onKeydown: e => {\n      const preventDefault = () => {\n        preventDefaultRef.value = true;\n      };\n      onKeydown(e, preventDefault);\n      if (preventDefaultRef.value) return;\n      switch (e.which) {\n        case KeyCode.ENTER:\n          {\n            if (!open.value) {\n              triggerOpen(true);\n            } else if (onSubmit() !== false) {\n              typing.value = true;\n            }\n            e.preventDefault();\n            return;\n          }\n        case KeyCode.TAB:\n          {\n            if (typing.value && open.value && !e.shiftKey) {\n              typing.value = false;\n              e.preventDefault();\n            } else if (!typing.value && open.value) {\n              if (!forwardKeydown(e) && e.shiftKey) {\n                typing.value = true;\n                e.preventDefault();\n              }\n            }\n            return;\n          }\n        case KeyCode.ESC:\n          {\n            typing.value = true;\n            onCancel();\n            return;\n          }\n      }\n      if (!open.value && ![KeyCode.SHIFT].includes(e.which)) {\n        triggerOpen(true);\n      } else if (!typing.value) {\n        // Let popup panel handle keyboard\n        forwardKeydown(e);\n      }\n    },\n    onFocus: e => {\n      typing.value = true;\n      focused.value = true;\n      if (onFocus) {\n        onFocus(e);\n      }\n    },\n    onBlur: e => {\n      if (preventBlurRef.value || !isClickOutside(document.activeElement)) {\n        preventBlurRef.value = false;\n        return;\n      }\n      if (blurToCancel.value) {\n        setTimeout(() => {\n          let {\n            activeElement\n          } = document;\n          while (activeElement && activeElement.shadowRoot) {\n            activeElement = activeElement.shadowRoot.activeElement;\n          }\n          if (isClickOutside(activeElement)) {\n            onCancel();\n          }\n        }, 0);\n      } else if (open.value) {\n        triggerOpen(false);\n        if (valueChangedRef.value) {\n          onSubmit();\n        }\n      }\n      focused.value = false;\n      if (onBlur) {\n        onBlur(e);\n      }\n    }\n  }));\n  // check if value changed\n  watch(open, () => {\n    valueChangedRef.value = false;\n  });\n  watch(value, () => {\n    valueChangedRef.value = true;\n  });\n  const globalMousedownEvent = shallowRef();\n  // Global click handler\n  onMounted(() => {\n    globalMousedownEvent.value = addGlobalMousedownEvent(e => {\n      const target = getTargetFromEvent(e);\n      if (open.value) {\n        const clickedOutside = isClickOutside(target);\n        if (!clickedOutside) {\n          preventBlurRef.value = true;\n          // Always set back in case `onBlur` prevented by user\n          raf(() => {\n            preventBlurRef.value = false;\n          });\n        } else if (!focused.value || clickedOutside) {\n          triggerOpen(false);\n        }\n      }\n    });\n  });\n  onBeforeUnmount(() => {\n    globalMousedownEvent.value && globalMousedownEvent.value();\n  });\n  return [inputProps, {\n    focused,\n    typing\n  }];\n}","map":{"version":3,"names":["onBeforeUnmount","onMounted","watch","shallowRef","computed","KeyCode","addGlobalMousedownEvent","getTargetFromEvent","raf","usePickerInput","_ref","open","value","isClickOutside","triggerOpen","forwardKeydown","onKeydown","blurToCancel","onSubmit","onCancel","onFocus","onBlur","typing","focused","preventBlurRef","valueChangedRef","preventDefaultRef","inputProps","onMousedown","e","preventDefault","which","ENTER","TAB","shiftKey","ESC","SHIFT","includes","document","activeElement","setTimeout","shadowRoot","globalMousedownEvent","target","clickedOutside"],"sources":["C:/GitHubWarehouse/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/vc-picker/hooks/usePickerInput.js"],"sourcesContent":["import { onBeforeUnmount, onMounted, watch, shallowRef, computed } from 'vue';\r\nimport KeyCode from '../../_util/KeyCode';\r\nimport { addGlobalMousedownEvent, getTargetFromEvent } from '../utils/uiUtil';\r\nimport raf from '../../_util/raf';\r\nexport default function usePickerInput(_ref) {\r\n  let {\r\n    open,\r\n    value,\r\n    isClickOutside,\r\n    triggerOpen,\r\n    forwardKeydown,\r\n    onKeydown,\r\n    blurToCancel,\r\n    onSubmit,\r\n    onCancel,\r\n    onFocus,\r\n    onBlur\r\n  } = _ref;\r\n  const typing = shallowRef(false);\r\n  const focused = shallowRef(false);\r\n  /**\r\n   * We will prevent blur to handle open event when user click outside,\r\n   * since this will repeat trigger `onOpenChange` event.\r\n   */\r\n  const preventBlurRef = shallowRef(false);\r\n  const valueChangedRef = shallowRef(false);\r\n  const preventDefaultRef = shallowRef(false);\r\n  const inputProps = computed(() => ({\r\n    onMousedown: () => {\r\n      typing.value = true;\r\n      triggerOpen(true);\r\n    },\r\n    onKeydown: e => {\r\n      const preventDefault = () => {\r\n        preventDefaultRef.value = true;\r\n      };\r\n      onKeydown(e, preventDefault);\r\n      if (preventDefaultRef.value) return;\r\n      switch (e.which) {\r\n        case KeyCode.ENTER:\r\n          {\r\n            if (!open.value) {\r\n              triggerOpen(true);\r\n            } else if (onSubmit() !== false) {\r\n              typing.value = true;\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n          }\r\n        case KeyCode.TAB:\r\n          {\r\n            if (typing.value && open.value && !e.shiftKey) {\r\n              typing.value = false;\r\n              e.preventDefault();\r\n            } else if (!typing.value && open.value) {\r\n              if (!forwardKeydown(e) && e.shiftKey) {\r\n                typing.value = true;\r\n                e.preventDefault();\r\n              }\r\n            }\r\n            return;\r\n          }\r\n        case KeyCode.ESC:\r\n          {\r\n            typing.value = true;\r\n            onCancel();\r\n            return;\r\n          }\r\n      }\r\n      if (!open.value && ![KeyCode.SHIFT].includes(e.which)) {\r\n        triggerOpen(true);\r\n      } else if (!typing.value) {\r\n        // Let popup panel handle keyboard\r\n        forwardKeydown(e);\r\n      }\r\n    },\r\n    onFocus: e => {\r\n      typing.value = true;\r\n      focused.value = true;\r\n      if (onFocus) {\r\n        onFocus(e);\r\n      }\r\n    },\r\n    onBlur: e => {\r\n      if (preventBlurRef.value || !isClickOutside(document.activeElement)) {\r\n        preventBlurRef.value = false;\r\n        return;\r\n      }\r\n      if (blurToCancel.value) {\r\n        setTimeout(() => {\r\n          let {\r\n            activeElement\r\n          } = document;\r\n          while (activeElement && activeElement.shadowRoot) {\r\n            activeElement = activeElement.shadowRoot.activeElement;\r\n          }\r\n          if (isClickOutside(activeElement)) {\r\n            onCancel();\r\n          }\r\n        }, 0);\r\n      } else if (open.value) {\r\n        triggerOpen(false);\r\n        if (valueChangedRef.value) {\r\n          onSubmit();\r\n        }\r\n      }\r\n      focused.value = false;\r\n      if (onBlur) {\r\n        onBlur(e);\r\n      }\r\n    }\r\n  }));\r\n  // check if value changed\r\n  watch(open, () => {\r\n    valueChangedRef.value = false;\r\n  });\r\n  watch(value, () => {\r\n    valueChangedRef.value = true;\r\n  });\r\n  const globalMousedownEvent = shallowRef();\r\n  // Global click handler\r\n  onMounted(() => {\r\n    globalMousedownEvent.value = addGlobalMousedownEvent(e => {\r\n      const target = getTargetFromEvent(e);\r\n      if (open.value) {\r\n        const clickedOutside = isClickOutside(target);\r\n        if (!clickedOutside) {\r\n          preventBlurRef.value = true;\r\n          // Always set back in case `onBlur` prevented by user\r\n          raf(() => {\r\n            preventBlurRef.value = false;\r\n          });\r\n        } else if (!focused.value || clickedOutside) {\r\n          triggerOpen(false);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  onBeforeUnmount(() => {\r\n    globalMousedownEvent.value && globalMousedownEvent.value();\r\n  });\r\n  return [inputProps, {\r\n    focused,\r\n    typing\r\n  }];\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}