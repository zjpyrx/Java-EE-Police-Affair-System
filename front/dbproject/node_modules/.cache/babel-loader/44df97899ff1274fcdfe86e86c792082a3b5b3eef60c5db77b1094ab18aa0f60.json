{"ast":null,"code":"import { toRaw, watchEffect, unref, watch, ref } from 'vue';\nexport default function useMergedState(defaultStateValue, option) {\n  const {\n    defaultValue,\n    value = ref()\n  } = option || {};\n  let initValue = typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n  if (value.value !== undefined) {\n    initValue = unref(value);\n  }\n  if (defaultValue !== undefined) {\n    initValue = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n  }\n  const innerValue = ref(initValue);\n  const mergedValue = ref(initValue);\n  watchEffect(() => {\n    let val = value.value !== undefined ? value.value : innerValue.value;\n    if (option.postState) {\n      val = option.postState(val);\n    }\n    mergedValue.value = val;\n  });\n  function triggerChange(newValue) {\n    const preVal = mergedValue.value;\n    innerValue.value = newValue;\n    if (toRaw(mergedValue.value) !== newValue && option.onChange) {\n      option.onChange(newValue, preVal);\n    }\n  }\n  // Effect of reset value to `undefined`\n  watch(value, () => {\n    innerValue.value = value.value;\n  });\n  return [mergedValue, triggerChange];\n}","map":{"version":3,"names":["toRaw","watchEffect","unref","watch","ref","useMergedState","defaultStateValue","option","defaultValue","value","initValue","undefined","innerValue","mergedValue","val","postState","triggerChange","newValue","preVal","onChange"],"sources":["C:/GitHubWarehouse/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/_util/hooks/useMergedState.js"],"sourcesContent":["import { toRaw, watchEffect, unref, watch, ref } from 'vue';\r\nexport default function useMergedState(defaultStateValue, option) {\r\n  const {\r\n    defaultValue,\r\n    value = ref()\r\n  } = option || {};\r\n  let initValue = typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\r\n  if (value.value !== undefined) {\r\n    initValue = unref(value);\r\n  }\r\n  if (defaultValue !== undefined) {\r\n    initValue = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\r\n  }\r\n  const innerValue = ref(initValue);\r\n  const mergedValue = ref(initValue);\r\n  watchEffect(() => {\r\n    let val = value.value !== undefined ? value.value : innerValue.value;\r\n    if (option.postState) {\r\n      val = option.postState(val);\r\n    }\r\n    mergedValue.value = val;\r\n  });\r\n  function triggerChange(newValue) {\r\n    const preVal = mergedValue.value;\r\n    innerValue.value = newValue;\r\n    if (toRaw(mergedValue.value) !== newValue && option.onChange) {\r\n      option.onChange(newValue, preVal);\r\n    }\r\n  }\r\n  // Effect of reset value to `undefined`\r\n  watch(value, () => {\r\n    innerValue.value = value.value;\r\n  });\r\n  return [mergedValue, triggerChange];\r\n}"],"mappings":"AAAA,SAASA,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAEC,KAAK,EAAEC,GAAG,QAAQ,KAAK;AAC3D,eAAe,SAASC,cAAcA,CAACC,iBAAiB,EAAEC,MAAM,EAAE;EAChE,MAAM;IACJC,YAAY;IACZC,KAAK,GAAGL,GAAG,CAAC;EACd,CAAC,GAAGG,MAAM,IAAI,CAAC,CAAC;EAChB,IAAIG,SAAS,GAAG,OAAOJ,iBAAiB,KAAK,UAAU,GAAGA,iBAAiB,CAAC,CAAC,GAAGA,iBAAiB;EACjG,IAAIG,KAAK,CAACA,KAAK,KAAKE,SAAS,EAAE;IAC7BD,SAAS,GAAGR,KAAK,CAACO,KAAK,CAAC;EAC1B;EACA,IAAID,YAAY,KAAKG,SAAS,EAAE;IAC9BD,SAAS,GAAG,OAAOF,YAAY,KAAK,UAAU,GAAGA,YAAY,CAAC,CAAC,GAAGA,YAAY;EAChF;EACA,MAAMI,UAAU,GAAGR,GAAG,CAACM,SAAS,CAAC;EACjC,MAAMG,WAAW,GAAGT,GAAG,CAACM,SAAS,CAAC;EAClCT,WAAW,CAAC,MAAM;IAChB,IAAIa,GAAG,GAAGL,KAAK,CAACA,KAAK,KAAKE,SAAS,GAAGF,KAAK,CAACA,KAAK,GAAGG,UAAU,CAACH,KAAK;IACpE,IAAIF,MAAM,CAACQ,SAAS,EAAE;MACpBD,GAAG,GAAGP,MAAM,CAACQ,SAAS,CAACD,GAAG,CAAC;IAC7B;IACAD,WAAW,CAACJ,KAAK,GAAGK,GAAG;EACzB,CAAC,CAAC;EACF,SAASE,aAAaA,CAACC,QAAQ,EAAE;IAC/B,MAAMC,MAAM,GAAGL,WAAW,CAACJ,KAAK;IAChCG,UAAU,CAACH,KAAK,GAAGQ,QAAQ;IAC3B,IAAIjB,KAAK,CAACa,WAAW,CAACJ,KAAK,CAAC,KAAKQ,QAAQ,IAAIV,MAAM,CAACY,QAAQ,EAAE;MAC5DZ,MAAM,CAACY,QAAQ,CAACF,QAAQ,EAAEC,MAAM,CAAC;IACnC;EACF;EACA;EACAf,KAAK,CAACM,KAAK,EAAE,MAAM;IACjBG,UAAU,CAACH,KAAK,GAAGA,KAAK,CAACA,KAAK;EAChC,CAAC,CAAC;EACF,OAAO,CAACI,WAAW,EAAEG,aAAa,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}