{"ast":null,"code":"import deselectCurrent from './toggle-selection';\nconst clipboardToIE11Formatting = {\n  'text/plain': 'Text',\n  'text/html': 'Url',\n  default: 'Text'\n};\nconst defaultMessage = 'Copy to clipboard: #{key}, Enter';\nfunction format(message) {\n  const copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\nfunction copy(text, options) {\n  let message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  const debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n    mark.addEventListener('copy', function (e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === 'undefined') {\n          // IE 11\n          debug && console.warn('unable to use e.clipboardData');\n          debug && console.warn('trying IE specific stuff');\n          window.clipboardData.clearData();\n          const format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting['default'];\n          window.clipboardData.setData(format, text);\n        } else {\n          // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n    document.body.appendChild(mark);\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n    const successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData(options.format || 'text', text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n  return success;\n}\nexport default copy;","map":{"version":3,"names":["deselectCurrent","clipboardToIE11Formatting","default","defaultMessage","format","message","copyKey","test","navigator","userAgent","replace","copy","text","options","reselectPrevious","range","selection","mark","success","debug","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","successful","execCommand","Error","err","error","prompt","removeRange","removeAllRanges","removeChild"],"sources":["D:/Work/大二下/DB小学期/gitspace11/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/_util/copy-to-clipboard/index.js"],"sourcesContent":["import deselectCurrent from './toggle-selection';\r\nconst clipboardToIE11Formatting = {\r\n  'text/plain': 'Text',\r\n  'text/html': 'Url',\r\n  default: 'Text'\r\n};\r\nconst defaultMessage = 'Copy to clipboard: #{key}, Enter';\r\nfunction format(message) {\r\n  const copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\r\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\r\n}\r\nfunction copy(text, options) {\r\n  let message,\r\n    reselectPrevious,\r\n    range,\r\n    selection,\r\n    mark,\r\n    success = false;\r\n  if (!options) {\r\n    options = {};\r\n  }\r\n  const debug = options.debug || false;\r\n  try {\r\n    reselectPrevious = deselectCurrent();\r\n    range = document.createRange();\r\n    selection = document.getSelection();\r\n    mark = document.createElement('span');\r\n    mark.textContent = text;\r\n    // reset user styles for span element\r\n    mark.style.all = 'unset';\r\n    // prevents scrolling to the end of the page\r\n    mark.style.position = 'fixed';\r\n    mark.style.top = 0;\r\n    mark.style.clip = 'rect(0, 0, 0, 0)';\r\n    // used to preserve spaces and line breaks\r\n    mark.style.whiteSpace = 'pre';\r\n    // do not inherit user-select (it may be `none`)\r\n    mark.style.webkitUserSelect = 'text';\r\n    mark.style.MozUserSelect = 'text';\r\n    mark.style.msUserSelect = 'text';\r\n    mark.style.userSelect = 'text';\r\n    mark.addEventListener('copy', function (e) {\r\n      e.stopPropagation();\r\n      if (options.format) {\r\n        e.preventDefault();\r\n        if (typeof e.clipboardData === 'undefined') {\r\n          // IE 11\r\n          debug && console.warn('unable to use e.clipboardData');\r\n          debug && console.warn('trying IE specific stuff');\r\n          window.clipboardData.clearData();\r\n          const format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting['default'];\r\n          window.clipboardData.setData(format, text);\r\n        } else {\r\n          // all other browsers\r\n          e.clipboardData.clearData();\r\n          e.clipboardData.setData(options.format, text);\r\n        }\r\n      }\r\n      if (options.onCopy) {\r\n        e.preventDefault();\r\n        options.onCopy(e.clipboardData);\r\n      }\r\n    });\r\n    document.body.appendChild(mark);\r\n    range.selectNodeContents(mark);\r\n    selection.addRange(range);\r\n    const successful = document.execCommand('copy');\r\n    if (!successful) {\r\n      throw new Error('copy command was unsuccessful');\r\n    }\r\n    success = true;\r\n  } catch (err) {\r\n    debug && console.error('unable to copy using execCommand: ', err);\r\n    debug && console.warn('trying IE specific stuff');\r\n    try {\r\n      window.clipboardData.setData(options.format || 'text', text);\r\n      options.onCopy && options.onCopy(window.clipboardData);\r\n      success = true;\r\n    } catch (err) {\r\n      debug && console.error('unable to copy using clipboardData: ', err);\r\n      debug && console.error('falling back to prompt');\r\n      message = format('message' in options ? options.message : defaultMessage);\r\n      window.prompt(message, text);\r\n    }\r\n  } finally {\r\n    if (selection) {\r\n      if (typeof selection.removeRange == 'function') {\r\n        selection.removeRange(range);\r\n      } else {\r\n        selection.removeAllRanges();\r\n      }\r\n    }\r\n    if (mark) {\r\n      document.body.removeChild(mark);\r\n    }\r\n    reselectPrevious();\r\n  }\r\n  return success;\r\n}\r\nexport default copy;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}