{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd8dc858\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"  城区和居民管理 > 城市地区管理\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"inputbox\"\n};\nconst _hoisted_4 = {\n  class: \"result-list\"\n};\nconst _hoisted_5 = {\n  class: \"citynametitle\"\n};\nconst _hoisted_6 = {\n  class: \"charts\"\n};\nconst _hoisted_7 = {\n  class: \"top-content\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"案件类型统计饼图\", -1 /* HOISTED */));\nconst _hoisted_9 = [\"id\"];\nconst _hoisted_10 = {\n  class: \"top-content\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"案件时间统计折线图\", -1 /* HOISTED */));\nconst _hoisted_12 = [\"id\"];\nconst _hoisted_13 = {\n  class: \"district-box\"\n};\nconst _hoisted_14 = {\n  class: \"district-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_text = _resolveComponent(\"el-text\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_header, {\n    class: \"sub-header\",\n    onMousemove: $options.handleMouseMove\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onMousemove\"]), _createCommentVNode(\"LHM编写用于呈现区域犯罪信息与人口情况\"), _createElementVNode(\"div\", {\n    class: \"main\",\n    onWheelPassive: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_text, {\n    class: \"noteText\",\n    type: \"primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"城市全称：\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_input, {\n    class: \"inputBox\",\n    modelValue: $data.CityName,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.CityName = $event),\n    placeholder: \"请输入城市全称如:上海市\",\n    \"show-word-limit\": \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.fetchDistrictInfo\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"查询\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.distictResults, result => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: result.districtName\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", null, _toDisplayString(result.districtName), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createCommentVNode(\" 使用v-for迭代distictResults列表，并为每个result调用drawStatusPieChart方法 \"), _createElementVNode(\"div\", {\n      id: 'typePieChart_' + result.districtName,\n      style: {\n        \"width\": \"400px\",\n        \"height\": \"400px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_9)]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createCommentVNode(\" 使用v-for迭代distictResults列表，并为每个result调用drawStatusPieChart方法 \"), _createElementVNode(\"div\", {\n      id: 'timeLineChart_' + result.districtName,\n      style: {\n        \"width\": \"400px\",\n        \"height\": \"400px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_12)])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString(result.districtName), 1 /* TEXT */), _createElementVNode(\"div\", null, \"人口:\" + _toDisplayString(result.population), 1 /* TEXT */), _createElementVNode(\"div\", null, \"犯罪数:\" + _toDisplayString(result.crimeNum), 1 /* TEXT */), _createElementVNode(\"div\", null, \"犯罪率:\" + _toDisplayString($options.crimeRate(result)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 32 /* HYDRATE_EVENTS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","style","_createVNode","_component_el_header","onMousemove","$options","handleMouseMove","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_component_el_text","type","_component_el_input","$data","CityName","$event","placeholder","_component_el_button","onClick","fetchDistrictInfo","_hoisted_4","_createElementBlock","_Fragment","_renderList","distictResults","result","key","districtName","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_hoisted_8","id","_hoisted_10","_hoisted_11","_hoisted_13","_hoisted_14","population","crimeNum","crimeRate"],"sources":["D:\\Work\\大二下\\DB小学期\\gitspace11\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\UrbanResidentmanagement\\UrbanZoningManagement.vue"],"sourcesContent":["<template>\r\n   <el-header class=\"sub-header\" @mousemove=\"handleMouseMove\">\r\n    <div>&nbsp;&nbsp;城区和居民管理&nbsp;>&nbsp;城市地区管理</div>\r\n  </el-header>\r\n  \r\n<!--LHM编写用于呈现区域犯罪信息与人口情况-->\r\n\r\n<div class=\"main\" @wheel.passive.stop>\r\n  <div class=\"content\">\r\n\r\n    <div class=\"inputbox\">\r\n      <el-text class=\"noteText\" type=\"primary\">城市全称：</el-text>\r\n      <el-input class=\"inputBox\" v-model=\"CityName\" placeholder=\"请输入城市全称如:上海市\" show-word-limit />\r\n      <el-button type=\"primary\" @click=\"fetchDistrictInfo\">查询</el-button>\r\n    </div>\r\n\r\n    <div class=\"result-list\">\r\n      <div v-for=\"result in distictResults\" :key=\"result.districtName\">\r\n        <div class=\"citynametitle\"><span>{{ result.districtName }}</span></div>      \r\n        <div class=\"charts\">\r\n          <div class=\"top-content\">\r\n            <h2 style=\"text-align: center\">案件类型统计饼图</h2>\r\n            <!-- 使用v-for迭代distictResults列表，并为每个result调用drawStatusPieChart方法 -->\r\n            <div :id=\"'typePieChart_' + result.districtName\" style=\" width: 400px; height: 400px;\"></div>       \r\n          </div> \r\n          <div class=\"top-content\">\r\n            <h2 style=\"text-align: center\">案件时间统计折线图</h2>\r\n            <!-- 使用v-for迭代distictResults列表，并为每个result调用drawStatusPieChart方法 -->\r\n            <div :id=\"'timeLineChart_' + result.districtName\" style=\" width: 400px; height: 400px;\"></div>       \r\n          </div> \r\n        </div>\r\n        <div class=\"district-box\">\r\n          <div class=\"district-name\">{{ result.districtName }}</div>\r\n          <div>人口:{{ result.population }}</div>\r\n          <div>犯罪数:{{ result.crimeNum }}</div>\r\n          <div>犯罪率:{{ crimeRate(result) }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      CityName: '',\r\n      distictResults: [],\r\n      crimeTypeStatistics: [],\r\n    }\r\n  },\r\n  methods: { \r\n    handleMouseMove(event) {\r\n      const x = event.pageX - event.target.offsetLeft;\r\n      const y = event.pageY - event.target.offsetTop;\r\n      event.target.style.setProperty(\"--x\", `${x}px`);\r\n      event.target.style.setProperty(\"--y\", `${y}px`);\r\n    },\r\n \r\n    // 计算犯罪率，展示为百分数保留两位小数\r\n    crimeRate(result) {\r\n      return (result.crimeNum / result.population * 100).toFixed(2) + '%';\r\n    },\r\n    drawTypePieChart() {\r\n      //对distictResults列表中的每个result进行遍历\r\n      this.distictResults.forEach(result => {\r\n        // 生成每个饼状图容器的唯一id\r\n        const chartId = 'typePieChart_' + result.districtName;\r\n        // 初始化echarts实例，并传入对应的id\r\n        const pieChart = echarts.init(document.getElementById(chartId));\r\n        \r\n        const option = {\r\n          tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          legend: {\r\n            top: '5%',\r\n            left: 'center'\r\n          },\r\n          series: [\r\n            {\r\n              name: 'Access From',\r\n              type: 'pie',\r\n              radius: ['40%', '70%'],\r\n              avoidLabelOverlap: false,\r\n              itemStyle: {\r\n                borderRadius: 10,\r\n                borderColor: '#fff',\r\n                borderWidth: 2\r\n              },\r\n              label: {\r\n                show: false,\r\n                position: 'center'\r\n              },\r\n              emphasis: {\r\n                label: {\r\n                  show: true,\r\n                  fontSize: 20,\r\n                  fontWeight: 'bold'\r\n                }\r\n              },\r\n              labelLine: {\r\n                show: false\r\n              },\r\n              data: [\r\n                { value: result.crimeTypeStatistic[0], name: '强奸' },\r\n                { value: result.crimeTypeStatistic[1], name: '抢劫' },\r\n                { value: result.crimeTypeStatistic[2], name: '故意伤害' },\r\n                { value: result.crimeTypeStatistic[3], name: '盗窃' },\r\n                { value: result.crimeTypeStatistic[4], name: '诈骗' },\r\n                { value: result.crimeTypeStatistic[5], name: '谋杀' }\r\n              ]\r\n            }\r\n          ]\r\n        };\r\n        option && pieChart.setOption(option);\r\n      });\r\n    },\r\n    \r\n    \r\n    drawTimeLineChart() {\r\n   this.distictResults.forEach(result => {   \r\n    console.log(result.districtName); \r\n    const chartId = 'timeLineChart_' + result.districtName;\r\n    \r\n    console.log(chartId); \r\n    const zheChart = echarts.init(document.getElementById(chartId));\r\n    const years = Object.keys(result.districtCrimeTimeStatistic);\r\n    const data = Object.values(result.districtCrimeTimeStatistic);\r\n\r\n    const option = {\r\n      xAxis: {\r\n        type: 'category',\r\n        data: years\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [\r\n        {\r\n          data: data,\r\n          type: 'line'\r\n        }\r\n      ]\r\n    };\r\n    option && zheChart.setOption(option);\r\n   });\r\n  },\r\n\r\n\r\n   \r\n    async fetchDistrictInfo() {\r\n      try {\r\n        if (this.CityName === '') {\r\n          alert('请输入城市名称！');\r\n          return;\r\n        }\r\n        const response = await axios.get(`http://localhost:7078/api/CityCrimeInfo?CityName=${encodeURIComponent(this.CityName)}`);\r\n        console.log(response.data);\r\n        this.distictResults = response.data;  \r\n        await new Promise((resolve) => setTimeout(resolve, 300));\r\n        this.drawTypePieChart();    \r\n        this.drawTimeLineChart();    \r\n        console.log(\"调用结束\");\r\n      } catch (error) {\r\n        console.log(\"fetchDistrictInfo出错！\"+error);\r\n      }\r\n    },\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.bottom-content{\r\n  display:block;\r\n}\r\n.cds-select{\r\n  width:25%;\r\n  height: 35px;\r\n  display:inline-block;\r\n  margin-left:40px;\r\n  background-color: #f0e6cf;\r\n  border: #c0b7a2;\r\n}\r\n.cdsamount{\r\n  margin-top: 10px;\r\n  margin-left:40px\r\n}\r\n  .content {\r\n    min-width: 1000px;\r\n    min-height:800px;\r\n    position: relative;\r\n    box-shadow: 0px 0px 10px 2px rgba(123, 103, 75, 0.427);\r\n    background-color: rgba(255, 255, 255, 0.616); \r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin: 16px;\r\n    padding: 16px;\r\n  \r\n    border-radius: 5px;\r\n    box-shadow: #9a9a9a 0px 0px 6px;\r\n    box-shadow: #777777 0px 0px 3px;\r\n    border-top: #0051ff 3px solid;\r\n    border-top: solid 3px transparent;\r\n  }\r\n  .noteText {\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin-top:20px;\r\n  margin-left:-20px;\r\n  width: 7vw;\r\n  display: inline-block;\r\n}\r\n/*输入框可显示长度为250px*/ \r\n.inputBox {\r\n\r\n  width: 250px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n}\r\n .sub-header {\r\n    overflow: hidden;\r\n    display: flex;\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 199px;\r\n    width: calc(100% - 199px);\r\n    height: 7vh;\r\n    min-height: 40px;\r\n    align-items: center; /* 文字竖直方向居中对齐 */\r\n    background-color: #1f2cdf;\r\n    box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\r\n    color: #ffffff;\r\n    font-size: 28px;\r\n  }\r\n  .sub-header::before {\r\n    --size: 0;\r\n    content: '';\r\n    position: absolute;\r\n    left: var(--x);\r\n    top: var(--y);\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background: radial-gradient(circle closest-side, #5a65ff, transparent);\r\n    transform: translate(-50%, -50%);\r\n    transition: width .2s ease, height .2s ease;\r\n  }\r\n  .sub-header:hover::before {\r\n    --size: 400px;\r\n  }\r\n  /*inputbox中元素横向并列，居中，元素间横向间隔10px */\r\n  .inputbox{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n  }\r\n.main\r\n{\r\n  margin-top: 10vh;\r\n  max-height:120vh;\r\n  overflow: auto;\r\n}\r\n  /* 导航条下方边框阴影*/\r\n  .main ::v-deep .el-tabs__nav-wrap {\r\n    background-color: #bca77690; \r\n    min-width:900px;\r\n    box-shadow: 0px 10px 10px 0px #e6dbc190 ;\r\n  }\r\n   .main ::v-deep .el-tabs__item.is-active{ \r\n      color:#0051ff !important;\r\n      font-size: 20px;\r\n   }\r\n   .main ::v-deep .el-tabs__item{ \r\n    margin-left:20px;  \r\n    color:#ffffff;\r\n    font-size: 20px;\r\n   }\r\n   /*下方条 */\r\n   .main ::v-deep .el-tabs__active-bar{\r\n          background-color: #0051ff !important;\r\n   }\r\n   .district-box{\r\n    margin-top:-20px;\r\n    margin-left:200px;\r\n    font-size:20px;\r\n   }\r\n   .charts{\r\n    display:inline-block;\r\n    margin-top: 20px;\r\n    width:100%;\r\n   }\r\n   .top-content{\r\n    margin-top: 15px;\r\n    width:50%;\r\n    display:inline-block;\r\n  }\r\n  .citynametitle {\r\n    margin-top:50px;\r\n\r\n    width:100%;\r\n    height:40px;\r\n    padding:0 30px;\r\n    line-height: 60px;\r\n    text-align: center;\r\n    position: relative;\r\n    appearance: none;\r\n    background: #51a1ec;\r\n    box-shadow: 0px 10px 8px 0px rgba(209, 209, 209, 0.756);\r\n    border: none;\r\n    color: white;\r\n    font-size: 25px;\r\n    outline: none;\r\n    overflow: hidden;\r\n    border-radius: 0px;\r\n  }\r\n  .citynametitle span {\r\n    position: relative;\r\n    top: -20%;\r\n  }\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAAiD,aAA5C,oBAAsC;;EAMxCC,KAAK,EAAC;AAAS;;EAEbA,KAAK,EAAC;AAAU;;EAMhBA,KAAK,EAAC;AAAa;;EAEfA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAa;gEACtBD,mBAAA,CAA4C;EAAxCE,KAA0B,EAA1B;IAAA;EAAA;AAA0B,GAAC,UAAQ;;;EAIpCD,KAAK,EAAC;AAAa;iEACtBD,mBAAA,CAA6C;EAAzCE,KAA0B,EAA1B;IAAA;EAAA;AAA0B,GAAC,WAAS;;;EAKvCD,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAe;;;;;;6DA/BjCE,YAAA,CAEWC,oBAAA;IAFAH,KAAK,EAAC,YAAY;IAAEI,WAAS,EAAEC,QAAA,CAAAC;;sBACzC,MAAiD,CAAjDC,UAAiD,C;;sCAGrDC,mBAAA,wBAA2B,EAE3BT,mBAAA,CAoCM;IApCDC,KAAK,EAAC,MAAM;6DAAC,QAAmB;MACnCD,mBAAA,CAkCM,OAlCNU,UAkCM,GAhCJV,mBAAA,CAIM,OAJNW,UAIM,GAHJR,YAAA,CAAwDS,kBAAA;IAA/CX,KAAK,EAAC,UAAU;IAACY,IAAI,EAAC;;sBAAU,MAAK,C,iBAAL,OAAK,E;;MAC9CV,YAAA,CAA2FW,mBAAA;IAAjFb,KAAK,EAAC,UAAU;gBAAUc,KAAA,CAAAC,QAAQ;+DAARD,KAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC,cAAc;IAAC,iBAAe,EAAf;2CACzEf,YAAA,CAAmEgB,oBAAA;IAAxDN,IAAI,EAAC,SAAS;IAAEO,OAAK,EAAEd,QAAA,CAAAe;;sBAAmB,MAAE,C,iBAAF,IAAE,E;;oCAGzDrB,mBAAA,CAsBM,OAtBNsB,UAsBM,I,kBArBJC,mBAAA,CAoBMC,SAAA,QAAAC,WAAA,CApBgBV,KAAA,CAAAW,cAAc,EAAxBC,MAAM;yBAAlBJ,mBAAA,CAoBM;MApBiCK,GAAG,EAAED,MAAM,CAACE;QACjD7B,mBAAA,CAAuE,OAAvE8B,UAAuE,GAA5C9B,mBAAA,CAAsC,cAAA+B,gBAAA,CAA7BJ,MAAM,CAACE,YAAY,iB,GACvD7B,mBAAA,CAWM,OAXNgC,UAWM,GAVJhC,mBAAA,CAIM,OAJNiC,UAIM,GAHJC,UAA4C,EAC5CzB,mBAAA,gEAAmE,EACnET,mBAAA,CAA6F;MAAvFmC,EAAE,oBAAoBR,MAAM,CAACE,YAAY;MAAE3B,KAAqC,EAArC;QAAA;QAAA;MAAA;2CAEnDF,mBAAA,CAIM,OAJNoC,WAIM,GAHJC,WAA6C,EAC7C5B,mBAAA,gEAAmE,EACnET,mBAAA,CAA8F;MAAxFmC,EAAE,qBAAqBR,MAAM,CAACE,YAAY;MAAE3B,KAAqC,EAArC;QAAA;QAAA;MAAA;8CAGtDF,mBAAA,CAKM,OALNsC,WAKM,GAJJtC,mBAAA,CAA0D,OAA1DuC,WAA0D,EAAAR,gBAAA,CAA5BJ,MAAM,CAACE,YAAY,kBACjD7B,mBAAA,CAAqC,aAAhC,KAAG,GAAA+B,gBAAA,CAAGJ,MAAM,CAACa,UAAU,kBAC5BxC,mBAAA,CAAoC,aAA/B,MAAI,GAAA+B,gBAAA,CAAGJ,MAAM,CAACc,QAAQ,kBAC3BzC,mBAAA,CAAsC,aAAjC,MAAI,GAAA+B,gBAAA,CAAGzB,QAAA,CAAAoC,SAAS,CAACf,MAAM,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}