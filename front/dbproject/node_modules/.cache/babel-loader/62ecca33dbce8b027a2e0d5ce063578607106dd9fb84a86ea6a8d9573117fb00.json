{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as globalListener from './globalListener.js';\nimport ComponentView from '../../view/Component.js';\nvar AxisPointerView = /** @class */\nfunction (_super) {\n  __extends(AxisPointerView, _super);\n  function AxisPointerView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = AxisPointerView.type;\n    return _this;\n  }\n  AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  };\n  AxisPointerView.prototype.remove = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n  AxisPointerView.prototype.dispose = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n  AxisPointerView.type = 'axisPointer';\n  return AxisPointerView;\n}(ComponentView);\nexport default AxisPointerView;","map":{"version":3,"names":["__extends","globalListener","ComponentView","AxisPointerView","_super","_this","apply","arguments","type","prototype","render","globalAxisPointerModel","ecModel","api","globalTooltipModel","getComponent","triggerOn","get","register","currTrigger","e","dispatchAction","indexOf","x","offsetX","y","offsetY","remove","unregister","dispose"],"sources":["D:/Work/大二下/DB小学期/gitspace11/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/echarts/lib/component/axisPointer/AxisPointerView.js"],"sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as globalListener from './globalListener.js';\r\nimport ComponentView from '../../view/Component.js';\r\n\r\nvar AxisPointerView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(AxisPointerView, _super);\r\n\r\n  function AxisPointerView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = AxisPointerView.type;\r\n    return _this;\r\n  }\r\n\r\n  AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\r\n    var globalTooltipModel = ecModel.getComponent('tooltip');\r\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\r\n    // AxisPointerView to be independent to Tooltip.\r\n\r\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\r\n      // If 'none', it is not controlled by mouse totally.\r\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\r\n        dispatchAction({\r\n          type: 'updateAxisPointer',\r\n          currTrigger: currTrigger,\r\n          x: e && e.offsetX,\r\n          y: e && e.offsetY\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  AxisPointerView.prototype.remove = function (ecModel, api) {\r\n    globalListener.unregister('axisPointer', api);\r\n  };\r\n\r\n  AxisPointerView.prototype.dispose = function (ecModel, api) {\r\n    globalListener.unregister('axisPointer', api);\r\n  };\r\n\r\n  AxisPointerView.type = 'axisPointer';\r\n  return AxisPointerView;\r\n}(ComponentView);\r\n\r\nexport default AxisPointerView;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AACrD,OAAOC,aAAa,MAAM,yBAAyB;AAEnD,IAAIC,eAAe,GACnB;AACA,UAAUC,MAAM,EAAE;EAChBJ,SAAS,CAACG,eAAe,EAAEC,MAAM,CAAC;EAElC,SAASD,eAAeA,CAAA,EAAG;IACzB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IAEpEF,KAAK,CAACG,IAAI,GAAGL,eAAe,CAACK,IAAI;IACjC,OAAOH,KAAK;EACd;EAEAF,eAAe,CAACM,SAAS,CAACC,MAAM,GAAG,UAAUC,sBAAsB,EAAEC,OAAO,EAAEC,GAAG,EAAE;IACjF,IAAIC,kBAAkB,GAAGF,OAAO,CAACG,YAAY,CAAC,SAAS,CAAC;IACxD,IAAIC,SAAS,GAAGL,sBAAsB,CAACM,GAAG,CAAC,WAAW,CAAC,IAAIH,kBAAkB,IAAIA,kBAAkB,CAACG,GAAG,CAAC,WAAW,CAAC,IAAI,iBAAiB,CAAC,CAAC;IAC3I;;IAEAhB,cAAc,CAACiB,QAAQ,CAAC,aAAa,EAAEL,GAAG,EAAE,UAAUM,WAAW,EAAEC,CAAC,EAAEC,cAAc,EAAE;MACpF;MACA,IAAIL,SAAS,KAAK,MAAM,KAAKG,WAAW,KAAK,OAAO,IAAIH,SAAS,CAACM,OAAO,CAACH,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE;QAC5FE,cAAc,CAAC;UACbb,IAAI,EAAE,mBAAmB;UACzBW,WAAW,EAAEA,WAAW;UACxBI,CAAC,EAAEH,CAAC,IAAIA,CAAC,CAACI,OAAO;UACjBC,CAAC,EAAEL,CAAC,IAAIA,CAAC,CAACM;QACZ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAEDvB,eAAe,CAACM,SAAS,CAACkB,MAAM,GAAG,UAAUf,OAAO,EAAEC,GAAG,EAAE;IACzDZ,cAAc,CAAC2B,UAAU,CAAC,aAAa,EAAEf,GAAG,CAAC;EAC/C,CAAC;EAEDV,eAAe,CAACM,SAAS,CAACoB,OAAO,GAAG,UAAUjB,OAAO,EAAEC,GAAG,EAAE;IAC1DZ,cAAc,CAAC2B,UAAU,CAAC,aAAa,EAAEf,GAAG,CAAC;EAC/C,CAAC;EAEDV,eAAe,CAACK,IAAI,GAAG,aAAa;EACpC,OAAOL,eAAe;AACxB,CAAC,CAACD,aAAa,CAAC;AAEhB,eAAeC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}