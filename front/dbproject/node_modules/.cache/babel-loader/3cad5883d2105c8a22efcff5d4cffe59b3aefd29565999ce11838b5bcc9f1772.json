{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { YEAR_DECADE_COUNT } from '.';\nimport useCellClassName from '../../hooks/useCellClassName';\nimport { formatValue, isSameYear } from '../../utils/dateUtil';\nimport { useInjectRange } from '../../RangeContext';\nimport PanelBody from '../PanelBody';\nimport useMergeProps from '../../hooks/useMergeProps';\nexport const YEAR_COL_COUNT = 3;\nconst YEAR_ROW_COUNT = 4;\nfunction YearBody(_props) {\n  const props = useMergeProps(_props);\n  const {\n    prefixCls,\n    value,\n    viewDate,\n    locale,\n    generateConfig\n  } = props;\n  const {\n    rangedValue,\n    hoverRangedValue\n  } = useInjectRange();\n  const yearPrefixCls = `${prefixCls}-cell`;\n  // =============================== Year ===============================\n  const yearNumber = generateConfig.getYear(viewDate);\n  const startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\n  const endYear = startYear + YEAR_DECADE_COUNT - 1;\n  const baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\n  const isInView = date => {\n    const currentYearNumber = generateConfig.getYear(date);\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\n  };\n  const getCellClassName = useCellClassName({\n    cellPrefixCls: yearPrefixCls,\n    value,\n    generateConfig,\n    rangedValue: rangedValue.value,\n    hoverRangedValue: hoverRangedValue.value,\n    isSameCell: (current, target) => isSameYear(generateConfig, current, target),\n    isInView,\n    offsetCell: (date, offset) => generateConfig.addYear(date, offset)\n  });\n  return _createVNode(PanelBody, _objectSpread(_objectSpread({}, props), {}, {\n    \"rowNum\": YEAR_ROW_COUNT,\n    \"colNum\": YEAR_COL_COUNT,\n    \"baseDate\": baseYear,\n    \"getCellText\": generateConfig.getYear,\n    \"getCellClassName\": getCellClassName,\n    \"getCellDate\": generateConfig.addYear,\n    \"titleCell\": date => formatValue(date, {\n      locale,\n      format: 'YYYY',\n      generateConfig\n    })\n  }), null);\n}\nYearBody.displayName = 'YearBody';\nYearBody.inheritAttrs = false;\nexport default YearBody;","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","YEAR_DECADE_COUNT","useCellClassName","formatValue","isSameYear","useInjectRange","PanelBody","useMergeProps","YEAR_COL_COUNT","YEAR_ROW_COUNT","YearBody","_props","props","prefixCls","value","viewDate","locale","generateConfig","rangedValue","hoverRangedValue","yearPrefixCls","yearNumber","getYear","startYear","Math","floor","endYear","baseYear","setYear","ceil","isInView","date","currentYearNumber","getCellClassName","cellPrefixCls","isSameCell","current","target","offsetCell","offset","addYear","format","displayName","inheritAttrs"],"sources":["D:/Work/大二下/DB小学期/gitspace11/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/vc-picker/panels/YearPanel/YearBody.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport { createVNode as _createVNode } from \"vue\";\r\nimport { YEAR_DECADE_COUNT } from '.';\r\nimport useCellClassName from '../../hooks/useCellClassName';\r\nimport { formatValue, isSameYear } from '../../utils/dateUtil';\r\nimport { useInjectRange } from '../../RangeContext';\r\nimport PanelBody from '../PanelBody';\r\nimport useMergeProps from '../../hooks/useMergeProps';\r\nexport const YEAR_COL_COUNT = 3;\r\nconst YEAR_ROW_COUNT = 4;\r\nfunction YearBody(_props) {\r\n  const props = useMergeProps(_props);\r\n  const {\r\n    prefixCls,\r\n    value,\r\n    viewDate,\r\n    locale,\r\n    generateConfig\r\n  } = props;\r\n  const {\r\n    rangedValue,\r\n    hoverRangedValue\r\n  } = useInjectRange();\r\n  const yearPrefixCls = `${prefixCls}-cell`;\r\n  // =============================== Year ===============================\r\n  const yearNumber = generateConfig.getYear(viewDate);\r\n  const startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\r\n  const endYear = startYear + YEAR_DECADE_COUNT - 1;\r\n  const baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\r\n  const isInView = date => {\r\n    const currentYearNumber = generateConfig.getYear(date);\r\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\r\n  };\r\n  const getCellClassName = useCellClassName({\r\n    cellPrefixCls: yearPrefixCls,\r\n    value,\r\n    generateConfig,\r\n    rangedValue: rangedValue.value,\r\n    hoverRangedValue: hoverRangedValue.value,\r\n    isSameCell: (current, target) => isSameYear(generateConfig, current, target),\r\n    isInView,\r\n    offsetCell: (date, offset) => generateConfig.addYear(date, offset)\r\n  });\r\n  return _createVNode(PanelBody, _objectSpread(_objectSpread({}, props), {}, {\r\n    \"rowNum\": YEAR_ROW_COUNT,\r\n    \"colNum\": YEAR_COL_COUNT,\r\n    \"baseDate\": baseYear,\r\n    \"getCellText\": generateConfig.getYear,\r\n    \"getCellClassName\": getCellClassName,\r\n    \"getCellDate\": generateConfig.addYear,\r\n    \"titleCell\": date => formatValue(date, {\r\n      locale,\r\n      format: 'YYYY',\r\n      generateConfig\r\n    })\r\n  }), null);\r\n}\r\nYearBody.displayName = 'YearBody';\r\nYearBody.inheritAttrs = false;\r\nexport default YearBody;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,SAASC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,SAASC,iBAAiB,QAAQ,GAAG;AACrC,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,SAASC,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAC9D,SAASC,cAAc,QAAQ,oBAAoB;AACnD,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC/B,MAAMC,cAAc,GAAG,CAAC;AACxB,SAASC,QAAQA,CAACC,MAAM,EAAE;EACxB,MAAMC,KAAK,GAAGL,aAAa,CAACI,MAAM,CAAC;EACnC,MAAM;IACJE,SAAS;IACTC,KAAK;IACLC,QAAQ;IACRC,MAAM;IACNC;EACF,CAAC,GAAGL,KAAK;EACT,MAAM;IACJM,WAAW;IACXC;EACF,CAAC,GAAGd,cAAc,CAAC,CAAC;EACpB,MAAMe,aAAa,GAAI,GAAEP,SAAU,OAAM;EACzC;EACA,MAAMQ,UAAU,GAAGJ,cAAc,CAACK,OAAO,CAACP,QAAQ,CAAC;EACnD,MAAMQ,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,GAAGpB,iBAAiB,CAAC,GAAGA,iBAAiB;EAChF,MAAMyB,OAAO,GAAGH,SAAS,GAAGtB,iBAAiB,GAAG,CAAC;EACjD,MAAM0B,QAAQ,GAAGV,cAAc,CAACW,OAAO,CAACb,QAAQ,EAAEQ,SAAS,GAAGC,IAAI,CAACK,IAAI,CAAC,CAACrB,cAAc,GAAGC,cAAc,GAAGR,iBAAiB,IAAI,CAAC,CAAC,CAAC;EACnI,MAAM6B,QAAQ,GAAGC,IAAI,IAAI;IACvB,MAAMC,iBAAiB,GAAGf,cAAc,CAACK,OAAO,CAACS,IAAI,CAAC;IACtD,OAAOR,SAAS,IAAIS,iBAAiB,IAAIA,iBAAiB,IAAIN,OAAO;EACvE,CAAC;EACD,MAAMO,gBAAgB,GAAG/B,gBAAgB,CAAC;IACxCgC,aAAa,EAAEd,aAAa;IAC5BN,KAAK;IACLG,cAAc;IACdC,WAAW,EAAEA,WAAW,CAACJ,KAAK;IAC9BK,gBAAgB,EAAEA,gBAAgB,CAACL,KAAK;IACxCqB,UAAU,EAAEA,CAACC,OAAO,EAAEC,MAAM,KAAKjC,UAAU,CAACa,cAAc,EAAEmB,OAAO,EAAEC,MAAM,CAAC;IAC5EP,QAAQ;IACRQ,UAAU,EAAEA,CAACP,IAAI,EAAEQ,MAAM,KAAKtB,cAAc,CAACuB,OAAO,CAACT,IAAI,EAAEQ,MAAM;EACnE,CAAC,CAAC;EACF,OAAOvC,YAAY,CAACM,SAAS,EAAER,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEc,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;IACzE,QAAQ,EAAEH,cAAc;IACxB,QAAQ,EAAED,cAAc;IACxB,UAAU,EAAEmB,QAAQ;IACpB,aAAa,EAAEV,cAAc,CAACK,OAAO;IACrC,kBAAkB,EAAEW,gBAAgB;IACpC,aAAa,EAAEhB,cAAc,CAACuB,OAAO;IACrC,WAAW,EAAET,IAAI,IAAI5B,WAAW,CAAC4B,IAAI,EAAE;MACrCf,MAAM;MACNyB,MAAM,EAAE,MAAM;MACdxB;IACF,CAAC;EACH,CAAC,CAAC,EAAE,IAAI,CAAC;AACX;AACAP,QAAQ,CAACgC,WAAW,GAAG,UAAU;AACjChC,QAAQ,CAACiC,YAAY,GAAG,KAAK;AAC7B,eAAejC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}