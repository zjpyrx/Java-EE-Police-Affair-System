{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0b41a235\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"placeholder\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"graphContainer\"\n};\nconst _hoisted_4 = [\"id\", \"onMouseenter\", \"onMouseleave\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CriminalInfo = _resolveComponent(\"CriminalInfo\");\n  const _component_transitionGroup = _resolveComponent(\"transitionGroup\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" main window \"), _createCommentVNode(\" element:query inputbox and confirm button\"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"queryBox\", {\n      upBox: $data.isGraphContainerVisible\n    }])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputID = $event),\n    placeholder: $data.placeholder,\n    onFocus: _cache[1] || (_cache[1] = (...args) => $options.changeInputStatus && $options.changeInputStatus(...args)),\n    onBlur: _cache[2] || (_cache[2] = (...args) => $options.changeInputStatus && $options.changeInputStatus(...args)),\n    onKeydown: _cache[3] || (_cache[3] = _withKeys((...args) => $options.query && $options.query(...args), [\"enter\"])),\n    class: _normalizeClass([\"inputBox\", {\n      errorAnime: $data.isError\n    }])\n  }, null, 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_2), [[_vModelText, $data.inputID]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.query && $options.query(...args)),\n    class: \"button\"\n  }, \"查询\")], 2 /* CLASS */), _createCommentVNode(\" element:family graph container \"), _createCommentVNode(\" graph is where criminal info is shown \"), $data.readyToRenderGraph ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" this part is for info render,\\r\\n     step1: calc position and sequential for each info\\r\\n     step2: render by sequential \"), _createVNode(_component_transitionGroup, {\n    name: \"fade\",\n    tag: \"ul\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.infoList, (item, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"imgCtrl\",\n        style: _normalizeStyle($options.getPos(index)),\n        key: index,\n        id: index,\n        onMouseenter: $event => $options.setLineObvious(index),\n        onMouseleave: $event => $options.setLineDefault(index),\n        onClick: $event => $options.restart(index)\n      }, [_createVNode(_component_CriminalInfo, {\n        imgUrl: $data.imageUrl,\n        content: item\n      }, null, 8 /* PROPS */, [\"imgUrl\", \"content\"])], 44 /* STYLE, PROPS, HYDRATE_EVENTS */, _hoisted_4);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_normalizeClass","upBox","$data","isGraphContainerVisible","type","inputID","$event","placeholder","onFocus","_cache","args","$options","changeInputStatus","onBlur","onKeydown","_withKeys","query","errorAnime","isError","onClick","readyToRenderGraph","_hoisted_3","_createVNode","_component_transitionGroup","name","tag","_Fragment","_renderList","infoList","item","index","style","_normalizeStyle","getPos","key","id","onMouseenter","setLineObvious","onMouseleave","setLineDefault","restart","_component_CriminalInfo","imgUrl","imageUrl","content"],"sources":["D:\\Work\\大二下\\DB小学期\\gitspace11\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\UrbanResidentmanagement\\FamilybgCheck.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"container\">\r\n    <!-- main window -->\r\n    <!-- element:query inputbox and confirm button-->\r\n    <div\r\n      class=\"queryBox\"\r\n      :class=\"{ upBox: isGraphContainerVisible}\"\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"inputID\"\r\n        :placeholder=\"placeholder\"\r\n        @focus=\"changeInputStatus\"\r\n        @blur=\"changeInputStatus\"\r\n        @keydown.enter=\"query\"\r\n        class=\"inputBox\"\r\n        :class=\"{ errorAnime: isError }\"\r\n      />\r\n      <button\r\n        @click=\"query\"\r\n        class=\"button\"\r\n      >查询</button>\r\n    </div>\r\n    <!-- element:family graph container -->\r\n    <!-- graph is where criminal info is shown -->\r\n    <div\r\n      v-if=\"readyToRenderGraph\"\r\n      class=\"graphContainer\"\r\n    >\r\n      <!-- this part is for info render,\r\n     step1: calc position and sequential for each info\r\n     step2: render by sequential -->\r\n      <transitionGroup\r\n        name=\"fade\"\r\n        tag=\"ul\"\r\n      >\r\n        <div\r\n          class=\"imgCtrl\"\r\n          v-for=\"(item, index) in this.infoList\"\r\n          :style=\"getPos(index)\"\r\n          :key=\"index\"\r\n          :id=\"index\"\r\n          @mouseenter=\"setLineObvious(index)\"\r\n          @mouseleave=\"setLineDefault(index)\"\r\n          @click=\"restart(index)\"\r\n        >\r\n          <CriminalInfo\r\n            :imgUrl=\"imageUrl\"\r\n            :content=\"item\"\r\n          />\r\n        </div>\r\n      </transitionGroup>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CriminalInfo from \"./CriminalInfo.vue\";\r\nimport axios from \"axios\";\r\nimport LeaderLine from \"leader-line\";\r\nexport default {\r\n  components: {\r\n    CriminalInfo,\r\n  },\r\n  data() {\r\n    return {\r\n      inputID: \"\",\r\n      content: [],\r\n      imageUrl: require(\"@/assets/criminal.png\"),\r\n      placeholder: \"请输入居民身份证号\",\r\n      isGraphContainerVisible: false,\r\n      readyToRenderGraph: false,\r\n      isError: false, // 控制错误动画\r\n      // 以下为渲染信息相关\r\n      curInfo: 0, // 当前加载位置\r\n      infoList: [], // 用于存储渲染的信息\r\n      lineList: [], // 用于渲染线条\r\n    };\r\n  },\r\n  watch: {\r\n    content: {\r\n      handler() {\r\n        this.infoList = [];\r\n        this.lineList = [];\r\n        this.curInfo = 0;\r\n        setTimeout(() => {\r\n          this.readyToRenderGraph = true;\r\n        }, 500);\r\n        // 设置infoList\r\n        setInterval(() => {\r\n          if (this.curInfo < this.content.people.length) {\r\n            this.infoList.push(this.content.people[this.curInfo]);\r\n            this.curInfo++;\r\n          } else if (this.lineList.length === 0) {\r\n            // 此时人物已全部添加\r\n            for (\r\n              var index = 1;\r\n              index < this.infoList.length && index <= 2;\r\n              index++\r\n            )\r\n              this.lineList.push(\r\n                new LeaderLine(\r\n                  document.getElementById(\"\" + 0),\r\n                  document.getElementById(\"\" + index),\r\n                  {\r\n                    startSocket: \"top\",\r\n                    endSocket: \"bottom\",\r\n                    path: \"magnet\",\r\n                    size:3,\r\n                    dash:{animation:false},\r\n                    gradient: {\r\n                      startColor: \"#2e17c3\",\r\n                      endColor: \"#1df3f9\",\r\n                      animation:\"true\"\r\n                    },\r\n                    endPlugColor:\"#1df3f9\"\r\n                  }\r\n                )\r\n              );\r\n            for (\r\n              var childIndex = 3;\r\n              childIndex < this.infoList.length;\r\n              childIndex++\r\n            )\r\n              this.lineList.push(\r\n                new LeaderLine(\r\n                  document.getElementById(\"\" + 0),\r\n                  document.getElementById(\"\" + childIndex),\r\n                  {\r\n                    startSocket: \"bottom\",\r\n                    endSocket: \"top\",\r\n                    path: \"magnet\",\r\n                    size:3,\r\n                    dash:{animation:false},\r\n                    gradient: {\r\n                      startColor: \"#2e17c3\",\r\n                      endColor: \"#1df3f9\",\r\n                    },\r\n                    endPlugColor:\"#1df3f9\"\r\n                  }\r\n                )\r\n              );\r\n          }\r\n        }, 400);\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    restart(index){\r\n      if (index==0 || this.infoList[index].name==\"\")\r\n        return;\r\n      // 换中心人物的处理函数\r\n      /* 准备工作区 */\r\n      this.flushLine(); // 清空指示线\r\n      this.inputID=this.infoList[index].id;\r\n\r\n      /*************/\r\n      /* 重置工作区 */\r\n      this.query();\r\n      /*************/\r\n    },\r\n    getPos(index) {\r\n      let width = this.$el.offsetWidth;\r\n      let height = this.$el.offsetHeight;\r\n      let top = \"0%\";\r\n      let left = \"0%\";\r\n      if (index == 0) {\r\n        // 中心人物\r\n        top = `${(height / 4) * 2 - 100}px`;\r\n        left = `${width / 2 - 250}px`;\r\n      } else if (index == 1 || index == 2) {\r\n        // 父母\r\n        top = `${height / 4 - 100 - 50}px`;\r\n        left = `${(width / 100) * index * 30 - 200}px`;\r\n      } else {\r\n        // 孩子关系\r\n        let leftChild = this.content.people.length - 3;\r\n        top = `${(height / 4) * 3 - 80}px`;\r\n        left = `${(width / (leftChild + 1)) * (index - 2) - 200}px`;\r\n      }\r\n      return {\r\n        top,\r\n        left,\r\n      };\r\n    },\r\n    startErrorAnime() {\r\n      this.isError = true;\r\n      // 重置显示已有的输入内容为空\r\n      this.inputID = \"\";\r\n      this.placeholder = \"不存在此犯人，请重新输入\";\r\n      setTimeout(() => {\r\n        this.isError = false;\r\n        this.inputID = \"\";\r\n        this.placeholder = \"\";\r\n      }, 500);\r\n    },\r\n    query() {\r\n      axios\r\n        .post(\"http://localhost:7078/api/FamilybgCheck\", {\r\n          InputText: this.inputID,\r\n        })\r\n        .then((response) => {\r\n          if (response.data.people.length !== 0) {\r\n            // 有数据\r\n            this.content = response.data;\r\n            this.isGraphContainerVisible = true;\r\n            this.isError = false;\r\n          } else {\r\n            this.startErrorAnime();\r\n            this.flushLine();\r\n            this.readyToRenderGraph = false;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(\"网络错误，请重试\");\r\n        });\r\n    },\r\n    changeInputStatus() {\r\n      if (this.placeholder === \"\") {\r\n        this.placeholder = \"请输入居民身份证号\";\r\n      } else {\r\n        this.placeholder = \"\";\r\n      }\r\n    },\r\n    flushLine() {\r\n      for (let i = 0; i < this.lineList.length; i++) this.lineList[i].remove();\r\n      this.lineList = [];\r\n    },\r\n    setLineObvious(id){\r\n      if (id>this.lineList.length || id==0)\r\n        return;\r\n      this.lineList[id-1].setOptions({size:6,dash:{animation:true}});\r\n    },\r\n    setLineDefault(id){\r\n      if (id>this.lineList.length || id==0)\r\n        return;\r\n      this.lineList[id-1].setOptions({size:3,dash:{animation:false}});\r\n    }\r\n  },\r\n  beforeRouteLeave(){\r\n    this.lineList.forEach(line => line.remove());\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .sub-header {\r\n    overflow: hidden;\r\n    display: flex;\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 199px;\r\n    width: calc(100% - 199px);\r\n    height: 7vh;\r\n    min-height: 40px;\r\n    align-items: center; /* 文字竖直方向居中对齐 */\r\n    background-color: #1f2cdf;\r\n    box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\r\n    color: #ffffff;\r\n    font-size: 28px;\r\n  }\r\n  .sub-header::before {\r\n    --size: 0;\r\n    content: '';\r\n    position: absolute;\r\n    left: var(--x);\r\n    top: var(--y);\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background: radial-gradient(circle closest-side, #5a65ff, transparent);\r\n    transform: translate(-50%, -50%);\r\n    transition: width .2s ease, height .2s ease;\r\n  }\r\n  .sub-header:hover::before {\r\n    --size: 400px;\r\n  }\r\n  .ssqtitletest {\r\n    margin:10px auto;\r\n    min-width:1000px;\r\n    height:40px;\r\n    padding:0 30px;\r\n    line-height: 60px;\r\n    text-align: center;\r\n    position: relative;\r\n    appearance: none;\r\n    background: #e6dbc1;\r\n    box-shadow: inset -500px 0px 100px 0px rgb(204, 186, 144);\r\n    border: none;\r\n    color: white;\r\n    font-size: 25px;\r\n    outline: none;\r\n    overflow: hidden;\r\n    border-radius: 0px;\r\n  }\r\n  .ssqtitletest span {\r\n    position: relative;\r\n    top: -20%;\r\n  }\r\n.queryBox {\r\n  width: 100%;\r\n  height: 100px;\r\n  position: relative;\r\n  top: 40vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.upBox {\r\n  transform: translateY(-40vh);\r\n}\r\n.container {\r\n  background: #ffffff;\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n.inputBox {\r\n  width: 250px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-radius: 16px;\r\n  font-size: 16px;\r\n  background: #ffffff;\r\n  padding: 3px;\r\n}\r\n.inputBox:focus {\r\n  outline: none;\r\n  border: 3px rgba(25, 167, 255, 0.644) solid;\r\n  box-shadow: 0 0 6px rgba(25, 167, 255, 0.644);\r\n}\r\n.inputBox:not(:focus) {\r\n  outline: none;\r\n  border: 1px rgba(158, 158, 158, 0.943) solid;\r\n  box-shadow: 0 0 0px rgba(158, 158, 158, 0.943);\r\n}\r\n.inputBox:hover:not(:focus) {\r\n  outline: none;\r\n  border: 1px rgba(158, 158, 158, 0.943) solid;\r\n  box-shadow: 0 0 5px rgba(214, 214, 214, 0.943);\r\n}\r\n.button {\r\n  width: 70px;\r\n  height: 55px;\r\n  text-align: center;\r\n  margin-left: 12px;\r\n  border-radius: 16px;\r\n  font-size: 16px;\r\n  color: #ffffff;\r\n  background: #00aeff;\r\n}\r\n.imgCtrl {\r\n  width: 400px;\r\n  height: 160px;\r\n  position: absolute;\r\n}\r\n.graphContainer {\r\n  width: 100%;\r\n  /* 高度：填满剩余屏幕 */\r\n  height: calc(100% - 100px);\r\n  position: relative; /* 子元素相对于父元素绝对位置 */\r\n  top: 9px;\r\n  overflow: hidden;\r\n}\r\n\r\n.imgAnime-enter-active {\r\n  transition: opacity 0.5s ease, transform 0.5s ease, width 0.5s ease,\r\n    height 0.5s ease; /* 添加宽度和高度的过渡效果 */\r\n}\r\n.imgAnime-leave-active {\r\n  transition: opacity 0.5s ease, transform 0.5s ease, width 0.5s ease,\r\n    height 0.5s ease; /* 添加宽度和高度的过渡效果 */\r\n}\r\n.imgAnime-enter {\r\n  opacity: 0;\r\n  transform: translateY(100%) scale(0); /* 添加初始的缩放效果 */\r\n}\r\n.imgAnime-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(100%) scale(0); /* 添加最终的缩放效果 */\r\n}\r\n\r\n/* animation for shaking */\r\n.errorAnime {\r\n  outline: none;\r\n  border: 3px rgba(255, 56, 56, 0.943) solid !important;\r\n  animation: shake 0.2s infinite;\r\n}\r\n@keyframes shake {\r\n  0% {\r\n    transform: translateX(0);\r\n  }\r\n  25% {\r\n    transform: translateX(-5px);\r\n  }\r\n  50% {\r\n    transform: translateX(0);\r\n  }\r\n  75% {\r\n    transform: translateX(5px);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n/* animation for info show */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: all 0.4s ease;\r\n}\r\n\r\n/* 2. 声明进入和离开的状态 */\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n  transform: scaleY(0.01) translate(30px, 0);\r\n}\r\n\r\n.slash {\r\n  width: 0;\r\n  height: 0;\r\n  border-top: 50px solid transparent;\r\n  border-bottom: 50px solid transparent;\r\n  border-left: 100px solid black;\r\n}\r\n</style>"],"mappings":";;;EAEOA,KAAK,EAAC;AAAW;;;;EA0BlBA,KAAK,EAAC;;;;;;uBA1BVC,mBAAA,CAqDM,OArDNC,UAqDM,GApDJC,mBAAA,iBAAoB,EACpBA,mBAAA,8CAAiD,EACjDC,mBAAA,CAkBM;IAjBJJ,KAAK,EAAAK,eAAA,EAAC,UAAU;MAAAC,KAAA,EACCC,KAAA,CAAAC;IAAuB;sBAExCJ,mBAAA,CASE;IARAK,IAAI,EAAC,MAAM;+DACFF,KAAA,CAAAG,OAAO,GAAAC,MAAA;IACfC,WAAW,EAAEL,KAAA,CAAAK,WAAW;IACxBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;IACxBG,MAAI,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;IACvBI,SAAO,EAAAL,MAAA,QAAAA,MAAA,MAAAM,SAAA,KAAAL,IAAA,KAAQC,QAAA,CAAAK,KAAA,IAAAL,QAAA,CAAAK,KAAA,IAAAN,IAAA,CAAK;IACrBf,KAAK,EAAAK,eAAA,EAAC,UAAU;MAAAiB,UAAA,EACMf,KAAA,CAAAgB;IAAO;8EANpBhB,KAAA,CAAAG,OAAO,E,GAQlBN,mBAAA,CAGY;IAFToB,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAK,KAAA,IAAAL,QAAA,CAAAK,KAAA,IAAAN,IAAA,CAAK;IACbf,KAAK,EAAC;KACP,IAAE,E,kBAELG,mBAAA,oCAAuC,EACvCA,mBAAA,2CAA8C,EAEtCI,KAAA,CAAAkB,kBAAkB,I,cAD1BxB,mBAAA,CA4BM,OA5BNyB,UA4BM,GAxBJvB,mBAAA,iIAE8B,EAC9BwB,YAAA,CAmBkBC,0BAAA;IAlBhBC,IAAI,EAAC,MAAM;IACXC,GAAG,EAAC;;sBAIF,MAAsC,E,kBAFxC7B,mBAAA,CAcM8B,SAAA,QAAAC,WAAA,MAZyBC,QAAQ,GAA7BC,IAAI,EAAEC,KAAK;2BAFrBlC,mBAAA,CAcM;QAbJD,KAAK,EAAC,SAAS;QAEdoC,KAAK,EAAAC,eAAA,CAAErB,QAAA,CAAAsB,MAAM,CAACH,KAAK;QACnBI,GAAG,EAAEJ,KAAK;QACVK,EAAE,EAAEL,KAAK;QACTM,YAAU,EAAA9B,MAAA,IAAEK,QAAA,CAAA0B,cAAc,CAACP,KAAK;QAChCQ,YAAU,EAAAhC,MAAA,IAAEK,QAAA,CAAA4B,cAAc,CAACT,KAAK;QAChCX,OAAK,EAAAb,MAAA,IAAEK,QAAA,CAAA6B,OAAO,CAACV,KAAK;UAErBR,YAAA,CAGEmB,uBAAA;QAFCC,MAAM,EAAExC,KAAA,CAAAyC,QAAQ;QAChBC,OAAO,EAAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}