{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      anv: \"1\",\n      numCases: 0,\n      statusStatistics: \"默认\",\n      typeStatistics: \"默认\",\n      cityStatistics: \"默认\",\n      cityTypeStatistics: \"默认\",\n      cityYearStatistics: \"默认\",\n      cityName: \"默认\",\n      selectedCity1: \"全部\",\n      selectedYear1: \"全部\",\n      selectedMonth1: \"全部\",\n      selectedCity2: \"全部\",\n      selectedYear2: \"全部\",\n      selectedMonth2: \"全部\",\n      selectedCity3: \"全部\",\n      selectedYear3: \"全部\",\n      cityDateStatistics: \"默认\",\n      years: [],\n      selectedMethod: \"年份\"\n    };\n  },\n  methods: {\n    handleMouseMove(event) {\n      const x = event.pageX - event.target.offsetLeft;\n      const y = event.pageY - event.target.offsetTop;\n      event.target.style.setProperty(\"--x\", `${x}px`);\n      event.target.style.setProperty(\"--y\", `${y}px`);\n    },\n    async getCityStatistics() {\n      try {\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/caseCityStatistics\");\n        this.cityStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getCityStatistics出错！\");\n      }\n    },\n    async getCityDateStatistics() {\n      try {\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/cityDateStatistics\", {\n          params: {\n            city: this.selectedCity3\n          }\n        });\n        this.cityDateStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getCityDateStatistics出错！\");\n      }\n    },\n    async getStatusCityDateStatistics() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/statusCityDateStatistics?city=${encodeURIComponent(this.selectedCity1)}&year=${encodeURIComponent(this.selectedYear1)}&month=${encodeURIComponent(this.selectedMonth1)}`);\n        this.statusStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getStatusCityDateStatistics出错！\");\n      }\n    },\n    async getCityTypeStatistics() {\n      try {\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/cityTypeStatistics\");\n        this.cityTypeStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getCityTypeStatistics出错！\");\n      }\n    },\n    async getTypeCityDateStatistics() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/typeCityDateStatistics?city=${encodeURIComponent(this.selectedCity2)}&year=${encodeURIComponent(this.selectedYear2)}&month=${encodeURIComponent(this.selectedMonth2)}`);\n        this.typeStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getTypeCityDateStatistics出错！\");\n      }\n    },\n    drawStatusPieChart() {\n      const pieChart = echarts.init(document.getElementById('statusPieChart'));\n      const option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          // orient: 'vertical',\n          top: '5%',\n          left: 'center'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 20,\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [{\n            value: this.statusStatistics['立案'],\n            name: '立案'\n          }, {\n            value: this.statusStatistics['调查'],\n            name: '调查'\n          }, {\n            value: this.statusStatistics['结案'],\n            name: '结案'\n          }]\n        }]\n      };\n      option && pieChart.setOption(option);\n    },\n    drawTypePieChart() {\n      const pieChart = echarts.init(document.getElementById('typePieChart'));\n      const option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 20,\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [{\n            value: this.typeStatistics['强奸'],\n            name: '强奸'\n          }, {\n            value: this.typeStatistics['抢劫'],\n            name: '抢劫'\n          }, {\n            value: this.typeStatistics['故意伤害'],\n            name: '故意伤害'\n          }, {\n            value: this.typeStatistics['盗窃'],\n            name: '盗窃'\n          }, {\n            value: this.typeStatistics['诈骗'],\n            name: '诈骗'\n          }, {\n            value: this.typeStatistics['谋杀'],\n            name: '谋杀'\n          }]\n        }]\n      };\n      option && pieChart.setOption(option);\n    },\n    drawYearZheChart() {\n      var result = {}; // 保存结果的对象\n      for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\n        let sum = 0;\n        for (const value of Object.values(yearData)) {\n          sum += value;\n        }\n        result[year] = sum;\n      }\n      result = Object.values(result); // result: [6, 6, 7, 4, 5, 4, 78]\n\n      const zheChart = echarts.init(document.getElementById('zheChart'));\n      const option = {\n        xAxis: {\n          type: 'category',\n          data: this.years\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: result,\n          type: 'line'\n        }]\n      };\n      option && zheChart.setOption(option);\n    },\n    drawMonthZheChart() {\n      const zheChart = echarts.init(document.getElementById('zheChart'));\n      var option;\n      if (this.selectedYear3 !== \"全部\") {\n        option = {\n          xAxis: {\n            type: 'category',\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: [this.cityDateStatistics[this.selectedYear3][\"1\"], this.cityDateStatistics[this.selectedYear3][\"2\"], this.cityDateStatistics[this.selectedYear3][\"3\"], this.cityDateStatistics[this.selectedYear3][\"4\"], this.cityDateStatistics[this.selectedYear3][\"5\"], this.cityDateStatistics[this.selectedYear3][\"6\"], this.cityDateStatistics[this.selectedYear3][\"7\"], this.cityDateStatistics[this.selectedYear3][\"8\"], this.cityDateStatistics[this.selectedYear3][\"9\"], this.cityDateStatistics[this.selectedYear3][\"10\"], this.cityDateStatistics[this.selectedYear3][\"11\"], this.cityDateStatistics[this.selectedYear3][\"12\"]],\n            type: 'line'\n          }]\n        };\n      } else {\n        var result = {}; // 保存结果的对象\n\n        for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\n          year; // 为了取消year未使用的报错\n          for (const [month, value] of Object.entries(yearData)) {\n            if (!result[month]) {\n              result[month] = value;\n            } else {\n              result[month] += value;\n            }\n          }\n        }\n        result = Object.values(result);\n        option = {\n          xAxis: {\n            type: 'category',\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: [result[\"1\"], result[\"2\"], result[\"3\"], result[\"4\"], result[\"5\"], result[\"6\"], result[\"7\"], result[\"8\"], result[\"9\"], result[\"10\"], result[\"11\"], result[\"12\"]],\n            type: 'line'\n          }]\n        };\n      }\n      option && zheChart.setOption(option);\n    },\n    drawZheChart() {\n      if (this.selectedMethod === \"年份\") {\n        this.drawYearZheChart();\n      } else {\n        this.drawMonthZheChart();\n      }\n    },\n    drawTypeZhuChart() {\n      var cityType = {\n        numRape: [],\n        numRobbery: [],\n        numInjury: [],\n        numTheft: [],\n        numFraud: [],\n        numMurder: []\n      };\n      for (const city in this.cityTypeStatistics) {\n        if (Object.prototype.hasOwnProperty.call(this.cityTypeStatistics, city)) {\n          const crimeCounts = this.cityTypeStatistics[city];\n          // 将对应的值添加到转换后的对象中的数组中\n          cityType.numRape.push(crimeCounts[0]);\n          cityType.numRobbery.push(crimeCounts[1]);\n          cityType.numInjury.push(crimeCounts[2]);\n          cityType.numTheft.push(crimeCounts[3]);\n          cityType.numFraud.push(crimeCounts[4]);\n          cityType.numMurder.push(crimeCounts[5]);\n        }\n      }\n      const values = Object.values(this.cityTypeStatistics);\n      const flattenedValues = values.reduce((acc, val) => acc.concat(val), []);\n      var max = Math.max(...flattenedValues);\n\n      // console.log(cityType);\n      const zhuChart = echarts.init(document.getElementById('zhuChart'));\n      const option = {\n        title: {\n          text: '城市案件统计直方图'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['强奸', '抢劫', '故意伤害', '盗窃', '诈骗', '谋杀']\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: ['line', 'bar']\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        calculable: true,\n        dataZoom: [\n        //1.横向使用滚动条\n        {\n          type: 'slider',\n          //有单独的滑动条，用户在滑动条上进行缩放或漫游。inside是直接可以是在内部拖动显示\n          show: false,\n          //是否显示 组件。如果设置为 false，不会显示，但是数据过滤的功能还存在。\n          start: 0,\n          //数据窗口范围的起始百分比0-100\n          end: 50,\n          //数据窗口范围的结束百分比0-100\n          xAxisIndex: [0] // 此处表示控制第一个xAxis，设置 dataZoom-slider 组件控制的 x轴 可是已数组[0,2]表示控制第一，三个；xAxisIndex: 2 ，表示控制第二个。yAxisIndex属性同理\n        },\n        //2.在内部可以横向拖动\n        {\n          type: 'inside',\n          // 内置于坐标系中\n          start: 0,\n          end: 30,\n          xAxisIndex: [0],\n          zoomOnMouseWheel: false,\n          // 关闭滚轮缩放\n          moveOnMouseWheel: true,\n          moveOnMouseMove: false\n        }],\n        xAxis: [{\n          type: 'category',\n          // prettier-ignore\n          data: Object.keys(this.cityTypeStatistics)\n        }],\n        yAxis: [{\n          max: max,\n          min: 0,\n          type: 'value'\n        }],\n        series: [{\n          name: '强奸',\n          type: 'bar',\n          data: cityType.numRape,\n          barWidth: '10%'\n          // barCategoryGap: '33%',\n          // barGap: '30%',\n        }, {\n          name: '抢劫',\n          type: 'bar',\n          data: cityType.numRobbery,\n          barWidth: '10%'\n          // barCategoryGap: '33%',\n          // barGap: '30%',\n        }, {\n          name: '故意伤害',\n          type: 'bar',\n          data: cityType.numInjury,\n          barWidth: '10%'\n          // barCategoryGap: '33%',\n          // barGap: '30%',\n        }, {\n          name: '盗窃',\n          type: 'bar',\n          data: cityType.numTheft,\n          barWidth: '10%'\n          // barCategoryGap: '33%',\n          // barGap: '30%',\n        }, {\n          name: '诈骗',\n          type: 'bar',\n          data: cityType.numFraud,\n          barWidth: '10%'\n          // barCategoryGap: '33%',\n          // barGap: '30%',\n        }, {\n          name: '谋杀',\n          type: 'bar',\n          data: cityType.numMurder,\n          barWidth: '10%'\n          // barCategoryGap: '33%',\n          // barGap: '30%',\n        }]\n      };\n\n      option && zhuChart.setOption(option);\n    }\n  },\n  watch: {\n    async selectedCity1() {\n      await this.getStatusCityDateStatistics();\n      this.drawStatusPieChart();\n    },\n    async selectedYear1() {\n      await this.getStatusCityDateStatistics();\n      this.drawStatusPieChart();\n    },\n    async selectedMonth1() {\n      await this.getStatusCityDateStatistics();\n      this.drawStatusPieChart();\n    },\n    async selectedCity2() {\n      await this.getTypeCityDateStatistics();\n      this.drawTypePieChart();\n    },\n    async selectedYear2() {\n      await this.getTypeCityDateStatistics();\n      this.drawTypePieChart();\n    },\n    async selectedMonth2() {\n      await this.getTypeCityDateStatistics();\n      this.drawTypePieChart();\n    },\n    selectedYear3() {\n      this.drawZheChart();\n    },\n    async selectedCity3() {\n      await this.getCityDateStatistics();\n      this.drawZheChart();\n    },\n    async selectedMethod() {\n      if (this.selectedMethod === \"年份\") {\n        this.drawZheChart();\n      } else {\n        await this.getCityDateStatistics();\n        this.drawZheChart();\n      }\n    },\n    async anv() {\n      if (this.anv == \"1\") {\n        await this.getStatusCityDateStatistics();\n        this.drawStatusPieChart();\n      } else if (this.anv == \"2\") {\n        await this.getTypeCityDateStatistics();\n        this.drawTypePieChart();\n      } else if (this.anv == \"3\") {\n        await this.getCityTypeStatistics();\n        this.drawTypeZhuChart();\n      } else if (this.anv == \"4\") {\n        await this.getCityDateStatistics();\n        if (this.selectedMethod === \"年份\") {\n          this.drawZheChart();\n        } else {\n          await this.getCityDateStatistics();\n          this.drawZheChart();\n        }\n      }\n    }\n  },\n  async created() {\n    await this.getCityStatistics(); // 获取城市及其总的案件数，其内接口返回数据形如{\"西安\":10,\"上海\":20,...}\n    await this.getStatusCityDateStatistics(); // 获取指定城市指定年月的案件状态，其内接口返回数据形如{\"立案\":10,\"状态\":20,...}\n    await this.getTypeCityDateStatistics(); // 获取指定城市指定年月的案件类型，其内接口返回数据形如{\"抢劫\":10,\"谋杀\":20,...}\n    await this.getCityDateStatistics(); // 获取指定城市指定年月的案件数目，其内接口返回数据形如{\"2017\":{\"1\":3,\"2\":5,...},...}\n    this.years = Object.keys(this.cityDateStatistics); // 获取年份范围,形如[\"2017\",\"2018\",...]\n    this.cityName = Object.keys(this.cityStatistics); // 获取年份范围,形如[\"西安\",\"上海\",...]\n\n    // 获取案件总数\n    this.numCases = this.statusStatistics[\"立案\"] + this.statusStatistics[\"调查\"] + this.statusStatistics[\"结案\"];\n    this.drawStatusPieChart(); // 画总案件状态圆饼图\n    console.log(11111);\n    // this.drawTypePieChart(); // 画总案件类型圆饼图\n    // this.drawZheChart(); // 画折线图\n\n    await this.getCityTypeStatistics();\n    // this.drawTypeZhuChart();\n  }\n};","map":{"version":3,"names":["axios","echarts","data","anv","numCases","statusStatistics","typeStatistics","cityStatistics","cityTypeStatistics","cityYearStatistics","cityName","selectedCity1","selectedYear1","selectedMonth1","selectedCity2","selectedYear2","selectedMonth2","selectedCity3","selectedYear3","cityDateStatistics","years","selectedMethod","methods","handleMouseMove","event","x","pageX","target","offsetLeft","y","pageY","offsetTop","style","setProperty","getCityStatistics","response","get","error","alert","console","log","getCityDateStatistics","params","city","getStatusCityDateStatistics","encodeURIComponent","getCityTypeStatistics","getTypeCityDateStatistics","drawStatusPieChart","pieChart","init","document","getElementById","option","tooltip","trigger","legend","top","left","series","name","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontSize","fontWeight","labelLine","value","setOption","drawTypePieChart","drawYearZheChart","result","year","yearData","Object","entries","sum","values","zheChart","xAxis","yAxis","drawMonthZheChart","month","drawZheChart","drawTypeZhuChart","cityType","numRape","numRobbery","numInjury","numTheft","numFraud","numMurder","prototype","hasOwnProperty","call","crimeCounts","push","flattenedValues","reduce","acc","val","concat","max","Math","zhuChart","title","text","toolbox","feature","dataView","readOnly","magicType","restore","saveAsImage","calculable","dataZoom","start","end","xAxisIndex","zoomOnMouseWheel","moveOnMouseWheel","moveOnMouseMove","keys","min","barWidth","watch","created"],"sources":["C:\\GitHubWarehouse\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\CaseManagement\\CrimeDataStatistics.vue"],"sourcesContent":["<!-- zyh -->\r\n<template>\r\n  <el-header class=\"sub-header\"  @mousemove=\"handleMouseMove\">\r\n    <div>&nbsp;&nbsp;案件管理&nbsp;>&nbsp;犯罪数据统计</div>\r\n  </el-header>\r\n\r\n  <div class=\"main\">\r\n    <el-tabs v-model=\"anv\" class=\"demo-tabs\">\r\n      <el-tab-pane label=\"案件状态统计饼图\" name=\"1\">\r\n        <h4>案件总数：{{ numCases }}</h4>\r\n        <h2 style=\"text-align: center\">案件状态统计饼图</h2>\r\n        <select v-model=\"selectedCity1\">\r\n          <option value=\"全部\" selected>全部城市</option>\r\n          <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">{{ city }}</option>\r\n        </select>\r\n        <select v-model=\"selectedYear1\">\r\n          <option selected value=\"全部\">全部年份</option>\r\n          <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n        </select>\r\n        <select v-model=\"selectedMonth1\">\r\n          <option selected value=\"全部\">全部月份</option>\r\n          <option v-for=\"i in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\" :value=\"i\" :key=\"i\">{{ i }}\r\n          </option>\r\n        </select>\r\n        <div id=\"statusPieChart\" style=\"width: 400px; height: 400px; margin-left: auto; margin-right: auto\"></div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"案件类型统计饼图\" name=\"2\">\r\n        <h4>案件总数：{{ numCases }}</h4>\r\n        <h2 style=\"text-align: center\">案件类型统计饼图</h2>\r\n        <select v-model=\"selectedCity2\">\r\n          <option value=\"全部\" selected>全部城市</option>\r\n          <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">{{ city }}</option>\r\n        </select>\r\n        <select v-model=\"selectedYear2\">\r\n          <option selected value=\"全部\">全部年份</option>\r\n          <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n        </select>\r\n        <select v-model=\"selectedMonth2\">\r\n          <option selected value=\"全部\">全部月份</option>\r\n          <option v-for=\"i in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\" :value=\"i\" :key=\"i\">{{ i }}\r\n          </option>\r\n        </select>\r\n        <div id=\"typePieChart\" style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"></div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"案发地区统计直方图\" name=\"3\">\r\n        <h4>案件总数：{{ numCases }}</h4>\r\n        <div id=\"zhuChart\" style=\"width: 800px; height: 500px; margin-left: auto; margin-right: auto\"></div>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"案件时间统计折线图\" name=\"4\">\r\n        <h4>案件总数：{{ numCases }}</h4>\r\n        <h2 style=\"text-align: center\">案件时间统计折线图</h2>\r\n        <select v-model=\"selectedCity3\">\r\n          <option value=\"全部\" selected>全部城市</option>\r\n          <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">{{ city }}</option>\r\n        </select>\r\n        <select v-model=\"selectedMethod\">\r\n          <option selected value=\"年份\">年份统计</option>\r\n          <option selected value=\"月份\">月份统计</option>\r\n        </select>\r\n        <select v-if=\"selectedMethod === '月份'\" v-model=\"selectedYear3\">\r\n          <option selected value=\"全部\">全部年份</option>\r\n          <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n        </select>\r\n        <div id=\"zheChart\" style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"></div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      anv: \"1\",\r\n      numCases: 0,\r\n      statusStatistics: \"默认\",\r\n      typeStatistics: \"默认\",\r\n      cityStatistics: \"默认\",\r\n      cityTypeStatistics: \"默认\",\r\n      cityYearStatistics: \"默认\",\r\n      cityName: \"默认\",\r\n      selectedCity1: \"全部\",\r\n      selectedYear1: \"全部\",\r\n      selectedMonth1: \"全部\",\r\n      selectedCity2: \"全部\",\r\n      selectedYear2: \"全部\",\r\n      selectedMonth2: \"全部\",\r\n      selectedCity3: \"全部\",\r\n      selectedYear3: \"全部\",\r\n      cityDateStatistics: \"默认\",\r\n      years: [],\r\n      selectedMethod: \"年份\",\r\n    };\r\n  },\r\n  methods: {\r\n    handleMouseMove(event) {\r\n      const x = event.pageX - event.target.offsetLeft;\r\n      const y = event.pageY - event.target.offsetTop;\r\n\r\n      event.target.style.setProperty(\"--x\", `${x}px`);\r\n      event.target.style.setProperty(\"--y\", `${y}px`);\r\n    },\r\n    async getCityStatistics() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/caseCityStatistics\");\r\n        this.cityStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityStatistics出错！\");\r\n      }\r\n    },\r\n    async getCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/cityDateStatistics\", { params: { city: this.selectedCity3 } });\r\n        this.cityDateStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getStatusCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/statusCityDateStatistics?city=${encodeURIComponent(this.selectedCity1)}&year=${encodeURIComponent(this.selectedYear1)}&month=${encodeURIComponent(this.selectedMonth1)}`);\r\n        this.statusStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getStatusCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getCityTypeStatistics() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/cityTypeStatistics\");\r\n        this.cityTypeStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityTypeStatistics出错！\");\r\n      }\r\n    },\r\n    async getTypeCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/typeCityDateStatistics?city=${encodeURIComponent(this.selectedCity2)}&year=${encodeURIComponent(this.selectedYear2)}&month=${encodeURIComponent(this.selectedMonth2)}`);\r\n        this.typeStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getTypeCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    drawStatusPieChart() {\r\n      const pieChart = echarts.init(document.getElementById('statusPieChart'));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          // orient: 'vertical',\r\n          top: '5%',\r\n          left: 'center'\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Access From',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: this.statusStatistics['立案'], name: '立案' },\r\n              { value: this.statusStatistics['调查'], name: '调查' },\r\n              { value: this.statusStatistics['结案'], name: '结案' }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawTypePieChart() {\r\n      const pieChart = echarts.init(document.getElementById('typePieChart'));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          top: '5%',\r\n          left: 'center'\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Access From',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: this.typeStatistics['强奸'], name: '强奸' },\r\n              { value: this.typeStatistics['抢劫'], name: '抢劫' },\r\n              { value: this.typeStatistics['故意伤害'], name: '故意伤害' },\r\n              { value: this.typeStatistics['盗窃'], name: '盗窃' },\r\n              { value: this.typeStatistics['诈骗'], name: '诈骗' },\r\n              { value: this.typeStatistics['谋杀'], name: '谋杀' }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawYearZheChart() {\r\n      var result = {}; // 保存结果的对象\r\n      for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\r\n        let sum = 0;\r\n        for (const value of Object.values(yearData)) {\r\n          sum += value;\r\n        }\r\n        result[year] = sum;\r\n      }\r\n      result = Object.values(result); // result: [6, 6, 7, 4, 5, 4, 78]\r\n\r\n      const zheChart = echarts.init(document.getElementById('zheChart'));\r\n\r\n      const option = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.years\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: result,\r\n            type: 'line'\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawMonthZheChart() {\r\n      const zheChart = echarts.init(document.getElementById('zheChart'));\r\n      var option;\r\n\r\n      if (this.selectedYear3 !== \"全部\") {\r\n\r\n        option = {\r\n          xAxis: {\r\n            type: 'category',\r\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              data: [this.cityDateStatistics[this.selectedYear3][\"1\"], this.cityDateStatistics[this.selectedYear3][\"2\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"3\"], this.cityDateStatistics[this.selectedYear3][\"4\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"5\"], this.cityDateStatistics[this.selectedYear3][\"6\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"7\"], this.cityDateStatistics[this.selectedYear3][\"8\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"9\"], this.cityDateStatistics[this.selectedYear3][\"10\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"11\"], this.cityDateStatistics[this.selectedYear3][\"12\"]],\r\n              type: 'line'\r\n            }\r\n          ]\r\n        };\r\n      }\r\n      else {\r\n        var result = {}; // 保存结果的对象\r\n\r\n        for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\r\n          year; // 为了取消year未使用的报错\r\n          for (const [month, value] of Object.entries(yearData)) {\r\n            if (!result[month]) {\r\n              result[month] = value;\r\n            } else {\r\n              result[month] += value;\r\n            }\r\n          }\r\n        }\r\n        result = Object.values(result);\r\n\r\n        option = {\r\n          xAxis: {\r\n            type: 'category',\r\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              data: [result[\"1\"], result[\"2\"],\r\n              result[\"3\"], result[\"4\"],\r\n              result[\"5\"], result[\"6\"],\r\n              result[\"7\"], result[\"8\"],\r\n              result[\"9\"], result[\"10\"],\r\n              result[\"11\"], result[\"12\"]],\r\n              type: 'line'\r\n            }\r\n          ]\r\n        };\r\n      }\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawZheChart() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawYearZheChart();\r\n      }\r\n      else {\r\n        this.drawMonthZheChart();\r\n      }\r\n    },\r\n    drawTypeZhuChart() {\r\n      var cityType = {\r\n        numRape: [],\r\n        numRobbery: [],\r\n        numInjury: [],\r\n        numTheft: [],\r\n        numFraud: [],\r\n        numMurder: []\r\n      };\r\n      for (const city in this.cityTypeStatistics) {\r\n        if (Object.prototype.hasOwnProperty.call(this.cityTypeStatistics, city)) {\r\n          const crimeCounts = this.cityTypeStatistics[city];\r\n          // 将对应的值添加到转换后的对象中的数组中\r\n          cityType.numRape.push(crimeCounts[0]);\r\n          cityType.numRobbery.push(crimeCounts[1]);\r\n          cityType.numInjury.push(crimeCounts[2]);\r\n          cityType.numTheft.push(crimeCounts[3]);\r\n          cityType.numFraud.push(crimeCounts[4]);\r\n          cityType.numMurder.push(crimeCounts[5]);\r\n        }\r\n      }\r\n\r\n      const values = Object.values(this.cityTypeStatistics);\r\n      const flattenedValues = values.reduce((acc, val) => acc.concat(val), []);\r\n      var max = Math.max(...flattenedValues);\r\n\r\n      // console.log(cityType);\r\n      const zhuChart = echarts.init(document.getElementById('zhuChart'));\r\n\r\n      const option = {\r\n        title: {\r\n          text: '城市案件统计直方图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['强奸', '抢劫', '故意伤害', '盗窃', '诈骗', '谋杀']\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            dataView: { show: true, readOnly: false },\r\n            magicType: { show: true, type: ['line', 'bar'] },\r\n            restore: { show: true },\r\n            saveAsImage: { show: true }\r\n          }\r\n        },\r\n        calculable: true,\r\n        dataZoom: [\r\n          //1.横向使用滚动条\r\n          {\r\n            type: 'slider',//有单独的滑动条，用户在滑动条上进行缩放或漫游。inside是直接可以是在内部拖动显示\r\n            show: false,//是否显示 组件。如果设置为 false，不会显示，但是数据过滤的功能还存在。\r\n            start: 0,//数据窗口范围的起始百分比0-100\r\n            end: 50,//数据窗口范围的结束百分比0-100\r\n            xAxisIndex: [0],// 此处表示控制第一个xAxis，设置 dataZoom-slider 组件控制的 x轴 可是已数组[0,2]表示控制第一，三个；xAxisIndex: 2 ，表示控制第二个。yAxisIndex属性同理\r\n          },\r\n          //2.在内部可以横向拖动\r\n          {\r\n            type: 'inside',// 内置于坐标系中\r\n            start: 0,\r\n            end: 30,\r\n            xAxisIndex: [0],\r\n            zoomOnMouseWheel: false, // 关闭滚轮缩放\r\n            moveOnMouseWheel: true,\r\n            moveOnMouseMove: false,\r\n          }\r\n        ],\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            // prettier-ignore\r\n            data: Object.keys(this.cityTypeStatistics)\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            max: max,\r\n            min: 0,\r\n            type: 'value'\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '强奸',\r\n            type: 'bar',\r\n            data: cityType.numRape,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '抢劫',\r\n            type: 'bar',\r\n            data: cityType.numRobbery,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '故意伤害',\r\n            type: 'bar',\r\n            data: cityType.numInjury,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '盗窃',\r\n            type: 'bar',\r\n            data: cityType.numTheft,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '诈骗',\r\n            type: 'bar',\r\n            data: cityType.numFraud,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '谋杀',\r\n            type: 'bar',\r\n            data: cityType.numMurder,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && zhuChart.setOption(option);\r\n    },\r\n  },\r\n  watch: {\r\n    async selectedCity1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedYear1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedMonth1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedCity2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedYear2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedMonth2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    selectedYear3() {\r\n      this.drawZheChart();\r\n    },\r\n    async selectedCity3() {\r\n      await this.getCityDateStatistics();\r\n      this.drawZheChart();\r\n    },\r\n    async selectedMethod() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawZheChart();\r\n      }\r\n      else {\r\n        await this.getCityDateStatistics();\r\n        this.drawZheChart();\r\n      }\r\n    },\r\n    async anv() {\r\n      if (this.anv == \"1\") {\r\n        await this.getStatusCityDateStatistics();\r\n        this.drawStatusPieChart();\r\n      }\r\n      else if (this.anv == \"2\") {\r\n        await this.getTypeCityDateStatistics();\r\n        this.drawTypePieChart();\r\n      }\r\n      else if (this.anv == \"3\") {\r\n        await this.getCityTypeStatistics();\r\n        this.drawTypeZhuChart();\r\n      }\r\n      else if (this.anv == \"4\") {\r\n        await this.getCityDateStatistics();\r\n        if (this.selectedMethod === \"年份\") {\r\n          this.drawZheChart();\r\n        }\r\n        else {\r\n          await this.getCityDateStatistics();\r\n          this.drawZheChart();\r\n        }\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    await this.getCityStatistics();           // 获取城市及其总的案件数，其内接口返回数据形如{\"西安\":10,\"上海\":20,...}\r\n    await this.getStatusCityDateStatistics(); // 获取指定城市指定年月的案件状态，其内接口返回数据形如{\"立案\":10,\"状态\":20,...}\r\n    await this.getTypeCityDateStatistics();   // 获取指定城市指定年月的案件类型，其内接口返回数据形如{\"抢劫\":10,\"谋杀\":20,...}\r\n    await this.getCityDateStatistics();       // 获取指定城市指定年月的案件数目，其内接口返回数据形如{\"2017\":{\"1\":3,\"2\":5,...},...}\r\n    this.years = Object.keys(this.cityDateStatistics); // 获取年份范围,形如[\"2017\",\"2018\",...]\r\n    this.cityName = Object.keys(this.cityStatistics);  // 获取年份范围,形如[\"西安\",\"上海\",...]\r\n\r\n    // 获取案件总数\r\n    this.numCases = this.statusStatistics[\"立案\"] + this.statusStatistics[\"调查\"] + this.statusStatistics[\"结案\"];\r\n    this.drawStatusPieChart(); // 画总案件状态圆饼图\r\n    console.log(11111);\r\n    // this.drawTypePieChart(); // 画总案件类型圆饼图\r\n    // this.drawZheChart(); // 画折线图\r\n\r\n    await this.getCityTypeStatistics();\r\n    // this.drawTypeZhuChart();\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n .sub-header {\r\n    overflow: hidden;\r\n    display: flex;\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 199px;\r\n    width: calc(100% - 199px);\r\n    height: 7vh;\r\n    min-height: 40px;\r\n    align-items: center; /* 文字竖直方向居中对齐 */\r\n    background-color: #1f2cdf;\r\n    box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\r\n    color: #ffffff;\r\n    font-size: 28px;\r\n  }\r\n  .sub-header::before {\r\n    --size: 0;\r\n    content: '';\r\n    position: absolute;\r\n    left: var(--x);\r\n    top: var(--y);\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background: radial-gradient(circle closest-side, #5a65ff, transparent);\r\n    transform: translate(-50%, -50%);\r\n    transition: width .2s ease, height .2s ease;\r\n  }\r\n  .sub-header:hover::before {\r\n    --size: 400px;\r\n  }\r\n.main\r\n{\r\n  margin-top: 10vh;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}