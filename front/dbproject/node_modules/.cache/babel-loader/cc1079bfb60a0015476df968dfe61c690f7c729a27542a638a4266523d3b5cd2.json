{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"padding\": \"10px\",\n    \"margin-bottom\": \"50px\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"padding-bottom\": \"10px\",\n    \"border-bottom\": \"1px solid #ccc\"\n  }\n}, [/*#__PURE__*/_createTextVNode(\"在线用户\"), /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-size\": \"12px\"\n  }\n}, \"（点击聊天气泡开始聊天）\")], -1 /* HOISTED */);\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"font-size\": \"12px\",\n    \"color\": \"limegreen\",\n    \"margin-left\": \"5px\"\n  }\n};\nconst _hoisted_5 = {\n  style: {\n    \"width\": \"800px\",\n    \"margin\": \"0 auto\",\n    \"background-color\": \"white\",\n    \"border-radius\": \"5px\",\n    \"box-shadow\": \"0 0 10px #ccc\"\n  }\n};\nconst _hoisted_6 = {\n  style: {\n    \"text-align\": \"center\",\n    \"line-height\": \"50px\"\n  }\n};\nconst _hoisted_7 = [\"innerHTML\"];\nconst _hoisted_8 = {\n  style: {\n    \"height\": \"200px\"\n  }\n};\nconst _hoisted_9 = {\n  style: {\n    \"text-align\": \"right\",\n    \"padding-right\": \"10px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        style: {\n          \"width\": \"100%\",\n          \"min-height\": \"300px\",\n          \"color\": \"#333\"\n        }\n      }, {\n        default: _withCtx(() => [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            style: {\n              \"padding\": \"10px 0\"\n            },\n            key: user.username\n          }, [_createElementVNode(\"span\", null, _toDisplayString(user.username), 1 /* TEXT */), _createElementVNode(\"i\", {\n            class: \"el-icon-chat-dot-round\",\n            style: {\n              \"margin-left\": \"10px\",\n              \"font-size\": \"16px\",\n              \"cursor\": \"pointer\"\n            },\n            onClick: $event => $data.chatUser = user.username\n          }, null, 8 /* PROPS */, _hoisted_3), user.username === $data.chatUser ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"chatting...\")) : _createCommentVNode(\"v-if\", true)]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 16\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, \" 行动消息(\" + _toDisplayString($data.chatUser) + \") \", 1 /* TEXT */), _createElementVNode(\"div\", {\n        style: {\n          \"height\": \"350px\",\n          \"overflow\": \"auto\",\n          \"border-top\": \"1px solid #ccc\"\n        },\n        innerHTML: $data.content\n      }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"textarea\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.text = $event),\n        style: {\n          \"height\": \"160px\",\n          \"width\": \"100%\",\n          \"padding\": \"20px\",\n          \"border\": \"none\",\n          \"border-top\": \"1px solid #ccc\",\n          \"border-bottom\": \"1px solid #ccc\",\n          \"outline\": \"none\"\n        }\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.text]]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"mini\",\n        onClick: $options.send\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"发送\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])])])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["style","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","_component_el_col","span","_component_el_card","_hoisted_2","_Fragment","_renderList","$data","users","user","key","username","_toDisplayString","class","onClick","$event","chatUser","_hoisted_4","_hoisted_5","_hoisted_6","innerHTML","content","_hoisted_8","text","_hoisted_9","_component_el_button","type","size","$options","send"],"sources":["D:\\JavaProject\\Java-EE-Police-Affair-System\\front\\dbproject\\src\\components\\SecretChat.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px; margin-bottom: 50px\">\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-card style=\"width: 100%; min-height: 300px; color: #333\">\r\n         <div style=\"padding-bottom: 10px; border-bottom: 1px solid #ccc\">在线用户<span style=\"font-size: 12px\">（点击聊天气泡开始聊天）</span></div>\r\n          <div style=\"padding: 10px 0\" v-for=\"user in users\" :key=\"user.username\">\r\n            <span>{{ user.username }}</span>\r\n            <i class=\"el-icon-chat-dot-round\" style=\"margin-left: 10px; font-size: 16px; cursor: pointer\"\r\n               @click=\"chatUser = user.username\"></i>\r\n            <span style=\"font-size: 12px;color: limegreen; margin-left: 5px\" v-if=\"user.username === chatUser\">chatting...</span>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"16\">\r\n        <div style=\"width: 800px; margin: 0 auto; background-color: white;\r\n                    border-radius: 5px; box-shadow: 0 0 10px #ccc\">\r\n          <div style=\"text-align: center; line-height: 50px;\">\r\n            行动消息({{ chatUser }})\r\n          </div>\r\n          <div style=\"height: 350px; overflow:auto; border-top: 1px solid #ccc\" v-html=\"content\"></div>\r\n          <div style=\"height: 200px\">\r\n            <textarea v-model=\"text\" style=\"height: 160px; width: 100%; padding: 20px; border: none; border-top: 1px solid #ccc;\r\n             border-bottom: 1px solid #ccc; outline: none\"></textarea>\r\n            <div style=\"text-align: right; padding-right: 10px\">\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"send\">发送</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nlet socket;\r\nexport default {\r\n  name: \"Im\",\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      user: {},\r\n      isCollapse: false,\r\n      users: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    send() {\r\n      if (!this.chatUser) {\r\n        this.$message({type: 'warning', message: \"请选择交流对象\"})\r\n        return;\r\n      }\r\n      if (!this.text) {\r\n        this.$message({type: 'warning', message: \"请输入内容\"})\r\n      } else {\r\n        if (typeof (WebSocket) == \"undefined\") {\r\n          console.log(\"您的浏览器不支持WebSocket\");\r\n        } else {\r\n          console.log(\"您的浏览器支持WebSocket\");\r\n          // 组装待发送的消息 json\r\n          // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n          let message = {from: this.user.username, to: this.chatUser, text: this.text}\r\n          socket.send(JSON.stringify(message));  // 将组装好的json发送给服务端，由服务端进行转发\r\n          this.messages.push({user: this.user.username, text: this.text})\r\n          // 构建消息内容，本人消息\r\n          this.createContent(null, this.user.username, this.text)\r\n          this.text = '';\r\n        }\r\n      }\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip left\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip right\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      console.log(html)\r\n      this.content += html;\r\n    },\r\n    init() {\r\n      //this.user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n      this.user={username:'zhang'}\r\n      let username = this.user.username;\r\n      let _this = this;\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        let socketUrl = \"ws://localhost:7078/imserver/\" + username;\r\n        if (socket != null) {\r\n          socket.close();\r\n          socket = null;\r\n        }\r\n        // 开启一个websocket服务\r\n        socket = new WebSocket(socketUrl);\r\n        //打开事件\r\n        socket.onopen = function () {\r\n          console.log(\"websocket已打开\");\r\n        };\r\n        //  浏览器端收消息，获得从服务端发送过来的文本消息\r\n        socket.onmessage = function (msg) {\r\n          let data = JSON.parse(msg.data)  // 对收到的json数据进行解析， 类似这样的： {\"users\": [{\"username\": \"zhang\"},{ \"username\": \"admin\"}]}\r\n          if (data.users) {  // 获取在线人员信息\r\n            _this.users = data.users.filter(user => user.username !== username)  // 获取当前连接的所有用户信息，并且排除自身，自己不会出现在自己的聊天列表里\r\n          } else {\r\n            // 如果服务器端发送过来的json数据 不包含 users 这个key，那么发送过来的就是聊天文本json数据\r\n            //  // {\"from\": \"zhang\", \"text\": \"hello\"}\r\n            if (data.from === _this.chatUser) {\r\n              _this.messages.push(data)\r\n              // 构建消息内容\r\n              _this.createContent(data.from, null, data.text)\r\n            }\r\n          }\r\n        };\r\n        //关闭事件\r\n        socket.onclose = function () {\r\n          console.log(\"websocket已关闭\");\r\n        };\r\n        //发生了错误事件\r\n        socket.onerror = function () {\r\n          console.log(\"websocket发生了错误\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.tip {\r\n  color: white;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  font-family: sans-serif;\r\n  padding: 10px;\r\n  width:auto;\r\n  display:inline-block !important;\r\n  display:inline;\r\n}\r\n.right {\r\n  background-color: deepskyblue;\r\n}\r\n.left {\r\n  background-color: forestgreen;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;gCAIxCC,mBAAA,CAA4H;EAAvHD,KAA2D,EAA3D;IAAA;IAAA;EAAA;AAA2D,I,8BAAC,MAAI,G,aAAAC,mBAAA,CAAiD;EAA3CD,KAAuB,EAAvB;IAAA;EAAA;AAAuB,GAAC,cAAY,E;;;;EAKtGA,KAA0D,EAA1D;IAAA;IAAA;IAAA;EAAA;;;EAKLA,KACqD,EADrD;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AACqD;;EACnDA,KAA8C,EAA9C;IAAA;IAAA;EAAA;AAA8C;;;EAI9CA,KAAqB,EAArB;IAAA;EAAA;AAAqB;;EAGnBA,KAA8C,EAA9C;IAAA;IAAA;EAAA;AAA8C;;;;;;uBAvB7DE,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJC,YAAA,CA4BSC,iBAAA;sBA3BP,MAUS,CAVTD,YAAA,CAUSE,iBAAA;MAVAC,IAAI,EAAE;IAAC;wBACd,MAQU,CARVH,YAAA,CAQUI,kBAAA;QARDR,KAAmD,EAAnD;UAAA;UAAA;UAAA;QAAA;MAAmD;0BAC3D,MAA4H,CAA5HS,UAA4H,G,kBAC3HP,mBAAA,CAKMQ,SAAA,QAAAC,WAAA,CALsCC,KAAA,CAAAC,KAAK,EAAbC,IAAI;+BAAxCZ,mBAAA,CAKM;YALDF,KAAuB,EAAvB;cAAA;YAAA,CAAuB;YAAwBe,GAAG,EAAED,IAAI,CAACE;cAC5Df,mBAAA,CAAgC,cAAAgB,gBAAA,CAAvBH,IAAI,CAACE,QAAQ,kBACtBf,mBAAA,CACyC;YADtCiB,KAAK,EAAC,wBAAwB;YAAClB,KAA2D,EAA3D;cAAA;cAAA;cAAA;YAAA,CAA2D;YACzFmB,OAAK,EAAAC,MAAA,IAAER,KAAA,CAAAS,QAAQ,GAAGP,IAAI,CAACE;+CAC4CF,IAAI,CAACE,QAAQ,KAAKJ,KAAA,CAAAS,QAAQ,I,cAAjGnB,mBAAA,CAAqH,QAArHoB,UAAqH,EAAlB,aAAW,K;;;;;;;QAIpHlB,YAAA,CAeSE,iBAAA;MAfAC,IAAI,EAAE;IAAE;wBACf,MAaM,CAbNN,mBAAA,CAaM,OAbNsB,UAaM,GAXJtB,mBAAA,CAEM,OAFNuB,UAEM,EAF8C,QAC7C,GAAAP,gBAAA,CAAGL,KAAA,CAAAS,QAAQ,IAAG,IACrB,iBACApB,mBAAA,CAA6F;QAAxFD,KAAgE,EAAhE;UAAA;UAAA;UAAA;QAAA,CAAgE;QAACyB,SAAgB,EAARb,KAAA,CAAAc;2CAC9EzB,mBAAA,CAMM,OANN0B,UAMM,G,gBALJ1B,mBAAA,CAC0D;mEADvCW,KAAA,CAAAgB,IAAI,GAAAR,MAAA;QAAEpB,KACqB,EADrB;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA;qDAANY,KAAA,CAAAgB,IAAI,E,GAEvB3B,mBAAA,CAEM,OAFN4B,UAEM,GADJzB,YAAA,CAAkE0B,oBAAA;QAAvDC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC,MAAM;QAAEb,OAAK,EAAEc,QAAA,CAAAC;;0BAAM,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}