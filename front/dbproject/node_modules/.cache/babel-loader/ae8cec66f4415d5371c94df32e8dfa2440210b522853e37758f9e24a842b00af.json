{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      CityName: '',\n      distictResults: [],\n      crimeTypeStatistics: []\n    };\n  },\n  methods: {\n    handleMouseMove(event) {\n      const x = event.pageX - event.target.offsetLeft;\n      const y = event.pageY - event.target.offsetTop;\n      event.target.style.setProperty(\"--x\", `${x}px`);\n      event.target.style.setProperty(\"--y\", `${y}px`);\n    },\n    // 计算犯罪率，展示为百分数保留两位小数\n    crimeRate(result) {\n      return (result.crimeNum / result.population * 100).toFixed(2) + '%';\n    },\n    drawTypePieChart() {\n      //对distictResults列表中的每个result进行遍历\n      this.distictResults.forEach(result => {\n        // 生成每个饼状图容器的唯一id\n        const chartId = 'typePieChart_' + result.districtName;\n        // 初始化echarts实例，并传入对应的id\n        const pieChart = echarts.init(document.getElementById(chartId));\n        const option = {\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            top: '5%',\n            left: 'center'\n          },\n          series: [{\n            name: 'Access From',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              borderRadius: 10,\n              borderColor: '#fff',\n              borderWidth: 2\n            },\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 20,\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: [{\n              value: result.crimeTypeStatistic[0],\n              name: '强奸'\n            }, {\n              value: result.crimeTypeStatistic[1],\n              name: '抢劫'\n            }, {\n              value: result.crimeTypeStatistic[2],\n              name: '故意伤害'\n            }, {\n              value: result.crimeTypeStatistic[3],\n              name: '盗窃'\n            }, {\n              value: result.crimeTypeStatistic[4],\n              name: '诈骗'\n            }, {\n              value: result.crimeTypeStatistic[5],\n              name: '谋杀'\n            }]\n          }]\n        };\n        option && pieChart.setOption(option);\n      });\n    },\n    drawTimeLineChart() {\n      this.distictResults.forEach(result => {\n        console.log(result.districtName);\n        const chartId = 'timeLineChart_' + result.districtName;\n        console.log(chartId);\n        const zheChart = echarts.init(document.getElementById(chartId));\n        const years = Object.keys(result.districtCrimeTimeStatistic);\n        const data = Object.values(result.districtCrimeTimeStatistic);\n        const option = {\n          xAxis: {\n            type: 'category',\n            data: years\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: data,\n            type: 'line'\n          }]\n        };\n        option && zheChart.setOption(option);\n      });\n    },\n    async fetchDistrictInfo() {\n      try {\n        if (this.CityName === '') {\n          alert('请输入城市名称！');\n          return;\n        }\n        const response = await axios.get(`http://localhost:7078/api/CityCrimeInfo?CityName=${encodeURIComponent(this.CityName)}`);\n        console.log(response.data);\n        this.distictResults = response.data;\n        await new Promise(resolve => setTimeout(resolve, 300));\n        this.drawTypePieChart();\n        this.drawTimeLineChart();\n        console.log(\"调用结束\");\n      } catch (error) {\n        console.log(\"fetchDistrictInfo出错！\" + error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","echarts","data","CityName","distictResults","crimeTypeStatistics","methods","handleMouseMove","event","x","pageX","target","offsetLeft","y","pageY","offsetTop","style","setProperty","crimeRate","result","crimeNum","population","toFixed","drawTypePieChart","forEach","chartId","districtName","pieChart","init","document","getElementById","option","tooltip","trigger","legend","top","left","series","name","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontSize","fontWeight","labelLine","value","crimeTypeStatistic","setOption","drawTimeLineChart","console","log","zheChart","years","Object","keys","districtCrimeTimeStatistic","values","xAxis","yAxis","fetchDistrictInfo","alert","response","get","encodeURIComponent","Promise","resolve","setTimeout","error"],"sources":["D:\\Work\\大二下\\DB小学期\\gitspace11\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\UrbanResidentmanagement\\UrbanZoningManagement.vue"],"sourcesContent":["<template>\r\n   <el-header class=\"sub-header\" @mousemove=\"handleMouseMove\">\r\n    <div>&nbsp;&nbsp;城区和居民管理&nbsp;>&nbsp;城市地区管理</div>\r\n  </el-header>\r\n  \r\n<!--LHM编写用于呈现区域犯罪信息与人口情况-->\r\n\r\n<div class=\"main\" @wheel.passive.stop>\r\n  <div class=\"content\">\r\n\r\n    <div class=\"inputbox\">\r\n      <el-text class=\"noteText\" type=\"primary\">城市全称：</el-text>\r\n      <el-input class=\"inputBox\" v-model=\"CityName\" placeholder=\"请输入城市全称如:上海市\" show-word-limit />\r\n      <el-button type=\"primary\" @click=\"fetchDistrictInfo\">查询</el-button>\r\n    </div>\r\n\r\n    <div class=\"result-list\">\r\n      <div v-for=\"result in distictResults\" :key=\"result.districtName\">\r\n        <div class=\"citynametitle\"><span>{{ result.districtName }}</span></div>      \r\n        <div class=\"charts\">\r\n          <div class=\"top-content\">\r\n            <h2 style=\"text-align: center\">案件类型统计饼图</h2>\r\n            <!-- 使用v-for迭代distictResults列表，并为每个result调用drawStatusPieChart方法 -->\r\n            <div :id=\"'typePieChart_' + result.districtName\" style=\" width: 400px; height: 400px;\"></div>       \r\n          </div> \r\n          <div class=\"top-content\">\r\n            <h2 style=\"text-align: center\">案件时间统计折线图</h2>\r\n            <!-- 使用v-for迭代distictResults列表，并为每个result调用drawStatusPieChart方法 -->\r\n            <div :id=\"'timeLineChart_' + result.districtName\" style=\" width: 400px; height: 400px;\"></div>       \r\n          </div> \r\n        </div>\r\n        <div class=\"district-box\">\r\n          <div>人口:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ result.population }}</div>\r\n          <div>犯罪数:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ result.crimeNum }}</div>\r\n          <div>犯罪率:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ crimeRate(result) }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      CityName: '',\r\n      distictResults: [],\r\n      crimeTypeStatistics: [],\r\n    }\r\n  },\r\n  methods: { \r\n    handleMouseMove(event) {\r\n      const x = event.pageX - event.target.offsetLeft;\r\n      const y = event.pageY - event.target.offsetTop;\r\n      event.target.style.setProperty(\"--x\", `${x}px`);\r\n      event.target.style.setProperty(\"--y\", `${y}px`);\r\n    },\r\n \r\n    // 计算犯罪率，展示为百分数保留两位小数\r\n    crimeRate(result) {\r\n      return (result.crimeNum / result.population * 100).toFixed(2) + '%';\r\n    },\r\n    drawTypePieChart() {\r\n      //对distictResults列表中的每个result进行遍历\r\n      this.distictResults.forEach(result => {\r\n        // 生成每个饼状图容器的唯一id\r\n        const chartId = 'typePieChart_' + result.districtName;\r\n        // 初始化echarts实例，并传入对应的id\r\n        const pieChart = echarts.init(document.getElementById(chartId));\r\n        \r\n        const option = {\r\n          tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          legend: {\r\n            top: '5%',\r\n            left: 'center'\r\n          },\r\n          series: [\r\n            {\r\n              name: 'Access From',\r\n              type: 'pie',\r\n              radius: ['40%', '70%'],\r\n              avoidLabelOverlap: false,\r\n              itemStyle: {\r\n                borderRadius: 10,\r\n                borderColor: '#fff',\r\n                borderWidth: 2\r\n              },\r\n              label: {\r\n                show: false,\r\n                position: 'center'\r\n              },\r\n              emphasis: {\r\n                label: {\r\n                  show: true,\r\n                  fontSize: 20,\r\n                  fontWeight: 'bold'\r\n                }\r\n              },\r\n              labelLine: {\r\n                show: false\r\n              },\r\n              data: [\r\n                { value: result.crimeTypeStatistic[0], name: '强奸' },\r\n                { value: result.crimeTypeStatistic[1], name: '抢劫' },\r\n                { value: result.crimeTypeStatistic[2], name: '故意伤害' },\r\n                { value: result.crimeTypeStatistic[3], name: '盗窃' },\r\n                { value: result.crimeTypeStatistic[4], name: '诈骗' },\r\n                { value: result.crimeTypeStatistic[5], name: '谋杀' }\r\n              ]\r\n            }\r\n          ]\r\n        };\r\n        option && pieChart.setOption(option);\r\n      });\r\n    },\r\n    \r\n    \r\n    drawTimeLineChart() {\r\n   this.distictResults.forEach(result => {   \r\n    console.log(result.districtName); \r\n    const chartId = 'timeLineChart_' + result.districtName;\r\n    \r\n    console.log(chartId); \r\n    const zheChart = echarts.init(document.getElementById(chartId));\r\n    const years = Object.keys(result.districtCrimeTimeStatistic);\r\n    const data = Object.values(result.districtCrimeTimeStatistic);\r\n\r\n    const option = {\r\n      xAxis: {\r\n        type: 'category',\r\n        data: years\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [\r\n        {\r\n          data: data,\r\n          type: 'line'\r\n        }\r\n      ]\r\n    };\r\n    option && zheChart.setOption(option);\r\n   });\r\n  },\r\n\r\n\r\n   \r\n    async fetchDistrictInfo() {\r\n      try {\r\n        if (this.CityName === '') {\r\n          alert('请输入城市名称！');\r\n          return;\r\n        }\r\n        const response = await axios.get(`http://localhost:7078/api/CityCrimeInfo?CityName=${encodeURIComponent(this.CityName)}`);\r\n        console.log(response.data);\r\n        this.distictResults = response.data;  \r\n        await new Promise((resolve) => setTimeout(resolve, 300));\r\n        this.drawTypePieChart();    \r\n        this.drawTimeLineChart();    \r\n        console.log(\"调用结束\");\r\n      } catch (error) {\r\n        console.log(\"fetchDistrictInfo出错！\"+error);\r\n      }\r\n    },\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.bottom-content{\r\n  display:block;\r\n}\r\n.cds-select{\r\n  width:25%;\r\n  height: 35px;\r\n  display:inline-block;\r\n  margin-left:40px;\r\n  background-color: #f0e6cf;\r\n  border: #c0b7a2;\r\n}\r\n.cdsamount{\r\n  margin-top: 10px;\r\n  margin-left:40px\r\n}\r\n  .content {\r\n    min-width: 1000px;\r\n    min-height:800px;\r\n    position: relative;\r\n    box-shadow: 0px 0px 10px 2px rgba(123, 103, 75, 0.427);\r\n    background-color: rgba(255, 255, 255, 0.616); \r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    margin: 16px;\r\n    padding: 16px;\r\n  \r\n    border-radius: 5px;\r\n    box-shadow: #9a9a9a 0px 0px 6px;\r\n    box-shadow: #777777 0px 0px 3px;\r\n    border-top: #0051ff 3px solid;\r\n    border-top: solid 3px transparent;\r\n  }\r\n  .noteText {\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin-left:-40px;\r\n  min-width:250px;\r\n  width: 7vw;\r\n  display: inline-block;\r\n}\r\n/*输入框可显示长度为250px*/ \r\n.inputBox {\r\n  width: 250px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n}\r\n .sub-header {\r\n    overflow: hidden;\r\n    display: flex;\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 199px;\r\n    width: calc(100% - 199px);\r\n    height: 7vh;\r\n    min-height: 40px;\r\n    align-items: center; /* 文字竖直方向居中对齐 */\r\n    background-color: #1f2cdf;\r\n    box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\r\n    color: #ffffff;\r\n    font-size: 28px;\r\n  }\r\n  .sub-header::before {\r\n    --size: 0;\r\n    content: '';\r\n    position: absolute;\r\n    left: var(--x);\r\n    top: var(--y);\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background: radial-gradient(circle closest-side, #5a65ff, transparent);\r\n    transform: translate(-50%, -50%);\r\n    transition: width .2s ease, height .2s ease;\r\n  }\r\n  .sub-header:hover::before {\r\n    --size: 400px;\r\n  }\r\n  /*inputbox中元素横向并列，居中，元素间横向间隔10px */\r\n  .inputbox{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n  }\r\n.main\r\n{\r\n  margin-top: 10vh;\r\n  max-height:120vh;\r\n  overflow: auto;\r\n}\r\n  /* 导航条下方边框阴影*/\r\n  .main ::v-deep .el-tabs__nav-wrap {\r\n    background-color: #bca77690; \r\n    min-width:900px;\r\n    box-shadow: 0px 10px 10px 0px #e6dbc190 ;\r\n  }\r\n   .main ::v-deep .el-tabs__item.is-active{ \r\n      color:#0051ff !important;\r\n      font-size: 20px;\r\n   }\r\n   .main ::v-deep .el-tabs__item{ \r\n    margin-left:20px;  \r\n    color:#ffffff;\r\n    font-size: 20px;\r\n   }\r\n   /*下方条 */\r\n   .main ::v-deep .el-tabs__active-bar{\r\n          background-color: #0051ff !important;\r\n   }\r\n   .district-box{\r\n    margin-top:-20px;\r\n    margin-left:200px;\r\n    font-size:20px;\r\n   }\r\n   .charts{\r\n    display:inline-block;\r\n    margin-top: 20px;\r\n    width:100%;\r\n   }\r\n   .top-content{\r\n    margin-top: 15px;\r\n    width:50%;\r\n    display:inline-block;\r\n  }\r\n  .citynametitle {\r\n    margin-top:50px;\r\n\r\n    width:100%;\r\n    height:40px;\r\n    padding:0 30px;\r\n    line-height: 60px;\r\n    text-align: center;\r\n    position: relative;\r\n    appearance: none;\r\n    background: #51a1ec;\r\n    box-shadow: 0px 10px 8px 0px rgba(209, 209, 209, 0.756);\r\n    border: none;\r\n    color: white;\r\n    font-size: 25px;\r\n    outline: none;\r\n    overflow: hidden;\r\n    border-radius: 0px;\r\n  }\r\n  .citynametitle span {\r\n    position: relative;\r\n    top: -20%;\r\n  }\r\n</style>"],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAO,KAAKC,OAAM,MAAO,SAAS;AAGlC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE,EAAE;MAClBC,mBAAmB,EAAE;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,KAAK,EAAE;MACrB,MAAMC,CAAA,GAAID,KAAK,CAACE,KAAI,GAAIF,KAAK,CAACG,MAAM,CAACC,UAAU;MAC/C,MAAMC,CAAA,GAAIL,KAAK,CAACM,KAAI,GAAIN,KAAK,CAACG,MAAM,CAACI,SAAS;MAC9CP,KAAK,CAACG,MAAM,CAACK,KAAK,CAACC,WAAW,CAAC,KAAK,EAAG,GAAER,CAAE,IAAG,CAAC;MAC/CD,KAAK,CAACG,MAAM,CAACK,KAAK,CAACC,WAAW,CAAC,KAAK,EAAG,GAAEJ,CAAE,IAAG,CAAC;IACjD,CAAC;IAED;IACAK,SAASA,CAACC,MAAM,EAAE;MAChB,OAAO,CAACA,MAAM,CAACC,QAAO,GAAID,MAAM,CAACE,UAAS,GAAI,GAAG,EAAEC,OAAO,CAAC,CAAC,IAAI,GAAG;IACrE,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB;MACA,IAAI,CAACnB,cAAc,CAACoB,OAAO,CAACL,MAAK,IAAK;QACpC;QACA,MAAMM,OAAM,GAAI,eAAc,GAAIN,MAAM,CAACO,YAAY;QACrD;QACA,MAAMC,QAAO,GAAI1B,OAAO,CAAC2B,IAAI,CAACC,QAAQ,CAACC,cAAc,CAACL,OAAO,CAAC,CAAC;QAE/D,MAAMM,MAAK,GAAI;UACbC,OAAO,EAAE;YACPC,OAAO,EAAE;UACX,CAAC;UACDC,MAAM,EAAE;YACNC,GAAG,EAAE,IAAI;YACTC,IAAI,EAAE;UACR,CAAC;UACDC,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,aAAa;YACnBC,IAAI,EAAE,KAAK;YACXC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;YACtBC,iBAAiB,EAAE,KAAK;YACxBC,SAAS,EAAE;cACTC,YAAY,EAAE,EAAE;cAChBC,WAAW,EAAE,MAAM;cACnBC,WAAW,EAAE;YACf,CAAC;YACDC,KAAK,EAAE;cACLC,IAAI,EAAE,KAAK;cACXC,QAAQ,EAAE;YACZ,CAAC;YACDC,QAAQ,EAAE;cACRH,KAAK,EAAE;gBACLC,IAAI,EAAE,IAAI;gBACVG,QAAQ,EAAE,EAAE;gBACZC,UAAU,EAAE;cACd;YACF,CAAC;YACDC,SAAS,EAAE;cACTL,IAAI,EAAE;YACR,CAAC;YACD7C,IAAI,EAAE,CACJ;cAAEmD,KAAK,EAAElC,MAAM,CAACmC,kBAAkB,CAAC,CAAC,CAAC;cAAEhB,IAAI,EAAE;YAAK,CAAC,EACnD;cAAEe,KAAK,EAAElC,MAAM,CAACmC,kBAAkB,CAAC,CAAC,CAAC;cAAEhB,IAAI,EAAE;YAAK,CAAC,EACnD;cAAEe,KAAK,EAAElC,MAAM,CAACmC,kBAAkB,CAAC,CAAC,CAAC;cAAEhB,IAAI,EAAE;YAAO,CAAC,EACrD;cAAEe,KAAK,EAAElC,MAAM,CAACmC,kBAAkB,CAAC,CAAC,CAAC;cAAEhB,IAAI,EAAE;YAAK,CAAC,EACnD;cAAEe,KAAK,EAAElC,MAAM,CAACmC,kBAAkB,CAAC,CAAC,CAAC;cAAEhB,IAAI,EAAE;YAAK,CAAC,EACnD;cAAEe,KAAK,EAAElC,MAAM,CAACmC,kBAAkB,CAAC,CAAC,CAAC;cAAEhB,IAAI,EAAE;YAAK;UAEtD;QAEJ,CAAC;QACDP,MAAK,IAAKJ,QAAQ,CAAC4B,SAAS,CAACxB,MAAM,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC;IAGDyB,iBAAiBA,CAAA,EAAG;MACrB,IAAI,CAACpD,cAAc,CAACoB,OAAO,CAACL,MAAK,IAAK;QACrCsC,OAAO,CAACC,GAAG,CAACvC,MAAM,CAACO,YAAY,CAAC;QAChC,MAAMD,OAAM,GAAI,gBAAe,GAAIN,MAAM,CAACO,YAAY;QAEtD+B,OAAO,CAACC,GAAG,CAACjC,OAAO,CAAC;QACpB,MAAMkC,QAAO,GAAI1D,OAAO,CAAC2B,IAAI,CAACC,QAAQ,CAACC,cAAc,CAACL,OAAO,CAAC,CAAC;QAC/D,MAAMmC,KAAI,GAAIC,MAAM,CAACC,IAAI,CAAC3C,MAAM,CAAC4C,0BAA0B,CAAC;QAC5D,MAAM7D,IAAG,GAAI2D,MAAM,CAACG,MAAM,CAAC7C,MAAM,CAAC4C,0BAA0B,CAAC;QAE7D,MAAMhC,MAAK,GAAI;UACbkC,KAAK,EAAE;YACL1B,IAAI,EAAE,UAAU;YAChBrC,IAAI,EAAE0D;UACR,CAAC;UACDM,KAAK,EAAE;YACL3B,IAAI,EAAE;UACR,CAAC;UACDF,MAAM,EAAE,CACN;YACEnC,IAAI,EAAEA,IAAI;YACVqC,IAAI,EAAE;UACR;QAEJ,CAAC;QACDR,MAAK,IAAK4B,QAAQ,CAACJ,SAAS,CAACxB,MAAM,CAAC;MACrC,CAAC,CAAC;IACH,CAAC;IAIC,MAAMoC,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,IAAI,IAAI,CAAChE,QAAO,KAAM,EAAE,EAAE;UACxBiE,KAAK,CAAC,UAAU,CAAC;UACjB;QACF;QACA,MAAMC,QAAO,GAAI,MAAMrE,KAAK,CAACsE,GAAG,CAAE,oDAAmDC,kBAAkB,CAAC,IAAI,CAACpE,QAAQ,CAAE,EAAC,CAAC;QACzHsD,OAAO,CAACC,GAAG,CAACW,QAAQ,CAACnE,IAAI,CAAC;QAC1B,IAAI,CAACE,cAAa,GAAIiE,QAAQ,CAACnE,IAAI;QACnC,MAAM,IAAIsE,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;QACxD,IAAI,CAAClD,gBAAgB,CAAC,CAAC;QACvB,IAAI,CAACiC,iBAAiB,CAAC,CAAC;QACxBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACrB,EAAE,OAAOiB,KAAK,EAAE;QACdlB,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAACiB,KAAK,CAAC;MAC3C;IACF;EAGF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}