{"ast":null,"code":"import { stringType, arrayType, someType, booleanType, objectType, functionType } from '../../_util/type';\nconst DataPickerPlacements = ['bottomLeft', 'bottomRight', 'topLeft', 'topRight'];\nfunction commonProps() {\n  return {\n    id: String,\n    /**\r\n     * @deprecated `dropdownClassName` is deprecated which will be removed in next major\r\n     *   version.Please use `popupClassName` instead.\r\n     */\n    dropdownClassName: String,\n    popupClassName: String,\n    popupStyle: objectType(),\n    transitionName: String,\n    placeholder: String,\n    allowClear: booleanType(),\n    autofocus: booleanType(),\n    disabled: booleanType(),\n    tabindex: Number,\n    open: booleanType(),\n    defaultOpen: booleanType(),\n    /** Make input readOnly to avoid popup keyboard in mobile */\n    inputReadOnly: booleanType(),\n    format: someType([String, Function, Array]),\n    // Value\n    // format:  string | CustomFormat<DateType> | (string | CustomFormat<DateType>)[];\n    // Render\n    // suffixIcon?: VueNode;\n    // clearIcon?: VueNode;\n    // prevIcon?: VueNode;\n    // nextIcon?: VueNode;\n    // superPrevIcon?: VueNode;\n    // superNextIcon?: VueNode;\n    getPopupContainer: functionType(),\n    panelRender: functionType(),\n    // // Events\n    onChange: functionType(),\n    'onUpdate:value': functionType(),\n    onOk: functionType(),\n    onOpenChange: functionType(),\n    'onUpdate:open': functionType(),\n    onFocus: functionType(),\n    onBlur: functionType(),\n    onMousedown: functionType(),\n    onMouseup: functionType(),\n    onMouseenter: functionType(),\n    onMouseleave: functionType(),\n    onClick: functionType(),\n    onContextmenu: functionType(),\n    onKeydown: functionType(),\n    // WAI-ARIA\n    role: String,\n    name: String,\n    autocomplete: String,\n    direction: stringType(),\n    showToday: booleanType(),\n    showTime: someType([Boolean, Object]),\n    locale: objectType(),\n    size: stringType(),\n    bordered: booleanType(),\n    dateRender: functionType(),\n    disabledDate: functionType(),\n    mode: stringType(),\n    picker: stringType(),\n    valueFormat: String,\n    placement: stringType(),\n    status: stringType(),\n    /** @deprecated Please use `disabledTime` instead. */\n    disabledHours: functionType(),\n    /** @deprecated Please use `disabledTime` instead. */\n    disabledMinutes: functionType(),\n    /** @deprecated Please use `disabledTime` instead. */\n    disabledSeconds: functionType()\n  };\n}\nfunction datePickerProps() {\n  return {\n    defaultPickerValue: someType([Object, String]),\n    defaultValue: someType([Object, String]),\n    value: someType([Object, String]),\n    presets: arrayType(),\n    disabledTime: functionType(),\n    renderExtraFooter: functionType(),\n    showNow: booleanType(),\n    monthCellRender: functionType(),\n    // deprecated  Please use `monthCellRender\"` instead.',\n    monthCellContentRender: functionType()\n  };\n}\nfunction rangePickerProps() {\n  return {\n    allowEmpty: arrayType(),\n    dateRender: functionType(),\n    defaultPickerValue: arrayType(),\n    defaultValue: arrayType(),\n    value: arrayType(),\n    presets: arrayType(),\n    disabledTime: functionType(),\n    disabled: someType([Boolean, Array]),\n    renderExtraFooter: functionType(),\n    separator: {\n      type: String\n    },\n    showTime: someType([Boolean, Object]),\n    ranges: objectType(),\n    placeholder: arrayType(),\n    mode: arrayType(),\n    onChange: functionType(),\n    'onUpdate:value': functionType(),\n    onCalendarChange: functionType(),\n    onPanelChange: functionType(),\n    onOk: functionType()\n  };\n}\nexport { commonProps, datePickerProps, rangePickerProps };","map":{"version":3,"names":["stringType","arrayType","someType","booleanType","objectType","functionType","DataPickerPlacements","commonProps","id","String","dropdownClassName","popupClassName","popupStyle","transitionName","placeholder","allowClear","autofocus","disabled","tabindex","Number","open","defaultOpen","inputReadOnly","format","Function","Array","getPopupContainer","panelRender","onChange","onOk","onOpenChange","onFocus","onBlur","onMousedown","onMouseup","onMouseenter","onMouseleave","onClick","onContextmenu","onKeydown","role","name","autocomplete","direction","showToday","showTime","Boolean","Object","locale","size","bordered","dateRender","disabledDate","mode","picker","valueFormat","placement","status","disabledHours","disabledMinutes","disabledSeconds","datePickerProps","defaultPickerValue","defaultValue","value","presets","disabledTime","renderExtraFooter","showNow","monthCellRender","monthCellContentRender","rangePickerProps","allowEmpty","separator","type","ranges","onCalendarChange","onPanelChange"],"sources":["C:/GitHubWarehouse/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/date-picker/generatePicker/props.js"],"sourcesContent":["import { stringType, arrayType, someType, booleanType, objectType, functionType } from '../../_util/type';\r\nconst DataPickerPlacements = ['bottomLeft', 'bottomRight', 'topLeft', 'topRight'];\r\nfunction commonProps() {\r\n  return {\r\n    id: String,\r\n    /**\r\n     * @deprecated `dropdownClassName` is deprecated which will be removed in next major\r\n     *   version.Please use `popupClassName` instead.\r\n     */\r\n    dropdownClassName: String,\r\n    popupClassName: String,\r\n    popupStyle: objectType(),\r\n    transitionName: String,\r\n    placeholder: String,\r\n    allowClear: booleanType(),\r\n    autofocus: booleanType(),\r\n    disabled: booleanType(),\r\n    tabindex: Number,\r\n    open: booleanType(),\r\n    defaultOpen: booleanType(),\r\n    /** Make input readOnly to avoid popup keyboard in mobile */\r\n    inputReadOnly: booleanType(),\r\n    format: someType([String, Function, Array]),\r\n    // Value\r\n    // format:  string | CustomFormat<DateType> | (string | CustomFormat<DateType>)[];\r\n    // Render\r\n    // suffixIcon?: VueNode;\r\n    // clearIcon?: VueNode;\r\n    // prevIcon?: VueNode;\r\n    // nextIcon?: VueNode;\r\n    // superPrevIcon?: VueNode;\r\n    // superNextIcon?: VueNode;\r\n    getPopupContainer: functionType(),\r\n    panelRender: functionType(),\r\n    // // Events\r\n    onChange: functionType(),\r\n    'onUpdate:value': functionType(),\r\n    onOk: functionType(),\r\n    onOpenChange: functionType(),\r\n    'onUpdate:open': functionType(),\r\n    onFocus: functionType(),\r\n    onBlur: functionType(),\r\n    onMousedown: functionType(),\r\n    onMouseup: functionType(),\r\n    onMouseenter: functionType(),\r\n    onMouseleave: functionType(),\r\n    onClick: functionType(),\r\n    onContextmenu: functionType(),\r\n    onKeydown: functionType(),\r\n    // WAI-ARIA\r\n    role: String,\r\n    name: String,\r\n    autocomplete: String,\r\n    direction: stringType(),\r\n    showToday: booleanType(),\r\n    showTime: someType([Boolean, Object]),\r\n    locale: objectType(),\r\n    size: stringType(),\r\n    bordered: booleanType(),\r\n    dateRender: functionType(),\r\n    disabledDate: functionType(),\r\n    mode: stringType(),\r\n    picker: stringType(),\r\n    valueFormat: String,\r\n    placement: stringType(),\r\n    status: stringType(),\r\n    /** @deprecated Please use `disabledTime` instead. */\r\n    disabledHours: functionType(),\r\n    /** @deprecated Please use `disabledTime` instead. */\r\n    disabledMinutes: functionType(),\r\n    /** @deprecated Please use `disabledTime` instead. */\r\n    disabledSeconds: functionType()\r\n  };\r\n}\r\nfunction datePickerProps() {\r\n  return {\r\n    defaultPickerValue: someType([Object, String]),\r\n    defaultValue: someType([Object, String]),\r\n    value: someType([Object, String]),\r\n    presets: arrayType(),\r\n    disabledTime: functionType(),\r\n    renderExtraFooter: functionType(),\r\n    showNow: booleanType(),\r\n    monthCellRender: functionType(),\r\n    // deprecated  Please use `monthCellRender\"` instead.',\r\n    monthCellContentRender: functionType()\r\n  };\r\n}\r\nfunction rangePickerProps() {\r\n  return {\r\n    allowEmpty: arrayType(),\r\n    dateRender: functionType(),\r\n    defaultPickerValue: arrayType(),\r\n    defaultValue: arrayType(),\r\n    value: arrayType(),\r\n    presets: arrayType(),\r\n    disabledTime: functionType(),\r\n    disabled: someType([Boolean, Array]),\r\n    renderExtraFooter: functionType(),\r\n    separator: {\r\n      type: String\r\n    },\r\n    showTime: someType([Boolean, Object]),\r\n    ranges: objectType(),\r\n    placeholder: arrayType(),\r\n    mode: arrayType(),\r\n    onChange: functionType(),\r\n    'onUpdate:value': functionType(),\r\n    onCalendarChange: functionType(),\r\n    onPanelChange: functionType(),\r\n    onOk: functionType()\r\n  };\r\n}\r\nexport { commonProps, datePickerProps, rangePickerProps };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}