{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"roomStyle\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"VueTest\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createTextVNode(\"欢迎使用\"), _hoisted_3, _createTextVNode(\"极简聊天室：\"), _hoisted_4, _hoisted_5, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"content\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.content = $event),\n    cols: \"60\",\n    rows: \"30\",\n    readonly: \"readonly\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]]), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.sendMsg())\n  }, \"发送消息\"), _hoisted_7, _hoisted_8, _createTextVNode(\" 用户：\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.user = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.joinRoom())\n  }, \"加入群聊\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.exitRoom())\n  }, \"退出群聊\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","id","$data","content","$event","cols","rows","readonly","_hoisted_6","type","message","onClick","_cache","$options","sendMsg","_hoisted_7","_hoisted_8","user","joinRoom","exitRoom"],"sources":["D:\\Work\\大三上\\java\\endOfTermProj\\Java-EE-Police-Affair-System\\front\\dbproject\\src\\components\\SecretChat.vue"],"sourcesContent":["<template>\n    <div class=\"roomStyle\">\n    <br>欢迎使用<strong>VueTest</strong>极简聊天室：<br/><br/>\n    <textarea id=\"content\" v-model=\"content\" cols=\"60\" rows=\"30\" readonly=\"readonly\"></textarea><br>\n    <input type=\"text\" v-model=\"message\">\n    <button type=\"button\" @click=\"sendMsg()\">发送消息</button>\n    <br/><br/>\n    用户：<input type=\"text\" v-model=\"user\">\n    <button @click=\"joinRoom()\">加入群聊</button>\n    <button @click=\"exitRoom()\">退出群聊</button>\n</div>\n</template>\n<script>\nimport WebSocket from 'ws';\nexport default {\n  data() {\n    return {\n      url: 'ws://localhost:7078/Room/',\n      ws: null,\n      user: '',\n      message: '',\n      content: '',\n    }\n  },\n  created(){\n  },\n  methods: {\n    async joinRoom(){\n      if(this.ws) {\n        alert(\"你已经再聊天室\");\n        return;\n      }\n      let url = this.url;\n      let username = this.user;\n      this.ws = new WebSocket('wss://localhost:7078/Room/' + username);  // 后端的启动端口\n      this.ws.onopen = this.webscoketonopen;\n      this.ws.onmessage =  this.webscoketonmessage;\n      //发生错误触发\n      this.ws.onerror = function (event) {\n        console.log(\"连接错误\"+event)\n      };\n      //正常关闭触发\n      this.ws.onclose = function () {\n        console.log(\"连接关闭\");\n      };\n    }, \n    webscoketonopen(){\n      console.log(\"与服务器成功建立连接\");\n    },\n    webscoketonmessage(value){\n      console.log(value);\n      this.content += (value.data + '\\r\\n') ;\n    },\n    exitRoom(){\n      this.closeWebSocket();\n    },\n    sendMsg(){\n      if(!this.ws) {\n        alert('你已经掉线，请重新加入');\n        return;\n      }\n      if(this.ws.readyState === 1){\n        this.ws.send(this.message);\n        this.message = '';\n      } else {\n        alert('发送失败');\n      }\n    },\n    closeWebSocket(){\n      if(this.ws) {\n        this.ws.close();\n        this.ws = null;\n      }\n    },\n    talking(content) {\n      console.log(content);\n    }\n  }\n}\n</script>\n<style>\n.roomStyle{\n  text-align: center;\n  background-color: rgba(15, 161, 230, 0.35);\n  margin: 0 auto;\n  border: 1px solid #000;\n  width: 600px;\n  height: 650px\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;gCACtBC,mBAAA,CAAI;gCAAIA,mBAAA,CAAwB,gBAAhB,SAAO;gCAAeA,mBAAA,CAAK;gCAAAA,mBAAA,CAAK;gCAC4CA,mBAAA,CAAI;gCAGhGA,mBAAA,CAAK;gCAAAA,mBAAA,CAAK;;;uBALVC,mBAAA,CASE,OATFC,UASE,GARFC,UAAI,E,iBAAA,MAAI,GAAAC,UAAwB,E,iBAAA,QAAM,GAAAC,UAAK,EAAAC,UAAK,E,gBAChDN,mBAAA,CAA4F;IAAlFO,EAAE,EAAC,SAAS;+DAAUC,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC,IAAI;IAACC,QAAQ,EAAC;iDAAtCL,KAAA,CAAAC,OAAO,E,GAAqDK,UAAI,E,gBAChGd,mBAAA,CAAqC;IAA9Be,IAAI,EAAC,MAAM;+DAAUP,KAAA,CAAAQ,OAAO,GAAAN,MAAA;iDAAPF,KAAA,CAAAQ,OAAO,E,GACnChB,mBAAA,CAAsD;IAA9Ce,IAAI,EAAC,QAAQ;IAAEE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAAES,QAAA,CAAAC,OAAO;KAAI,MAAI,GAC7CC,UAAK,EAAAC,UAAK,E,iBAAA,MACP,G,gBAAAtB,mBAAA,CAAkC;IAA3Be,IAAI,EAAC,MAAM;+DAAUP,KAAA,CAAAe,IAAI,GAAAb,MAAA;iDAAJF,KAAA,CAAAe,IAAI,E,GACnCvB,mBAAA,CAAyC;IAAhCiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAAES,QAAA,CAAAK,QAAQ;KAAI,MAAI,GAChCxB,mBAAA,CAAyC;IAAhCiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAAES,QAAA,CAAAM,QAAQ;KAAI,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}