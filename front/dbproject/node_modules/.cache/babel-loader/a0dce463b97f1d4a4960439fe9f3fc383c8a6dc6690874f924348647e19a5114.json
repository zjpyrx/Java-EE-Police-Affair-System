{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0c7c73da\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"  案件管理 > 犯罪数据统计\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"main\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"案件状态统计\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"全部\",\n  selected: \"\"\n}, \"全部城市\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部年份\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部月份\", -1 /* HOISTED */));\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"statusPieChart\",\n  style: {\n    \"width\": \"400px\",\n    \"height\": \"400px\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\",\n    \"margin-top\": \"120px\"\n  }\n}, \"案件类型统计\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"全部\",\n  selected: \"\"\n}, \"全部城市\", -1 /* HOISTED */));\nconst _hoisted_13 = [\"value\"];\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部年份\", -1 /* HOISTED */));\nconst _hoisted_15 = [\"value\"];\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部月份\", -1 /* HOISTED */));\nconst _hoisted_17 = [\"value\"];\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"typePieChart\",\n  style: {\n    \"width\": \"600px\",\n    \"height\": \"400px\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\",\n    \"margin-top\": \"100px\"\n  }\n}, \"城市案件统计\", -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"zhuChart\",\n  style: {\n    \"width\": \"800px\",\n    \"height\": \"500px\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\",\n    \"margin-top\": \"100px\"\n  }\n}, \"分时间和城市的案件统计\", -1 /* HOISTED */));\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"全部\",\n  selected: \"\"\n}, \"全部城市\", -1 /* HOISTED */));\nconst _hoisted_23 = [\"value\"];\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"年份\"\n}, \"年份统计\", -1 /* HOISTED */));\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"月份\"\n}, \"月份统计\", -1 /* HOISTED */));\nconst _hoisted_26 = [_hoisted_24, _hoisted_25];\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部年份\", -1 /* HOISTED */));\nconst _hoisted_28 = [\"value\"];\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"zheChart\",\n  style: {\n    \"width\": \"600px\",\n    \"height\": \"400px\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_header = _resolveComponent(\"el-header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_header, {\n    class: \"sub-header\",\n    onMousemove: _ctx.handleMouseMove\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onMousemove\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h4\", null, \"案件总数：\" + _toDisplayString($data.numCases), 1 /* TEXT */), _hoisted_3, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedCity1 = $event)\n  }, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityName, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: city,\n      key: city\n    }, _toDisplayString(city), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCity1]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedYear1 = $event)\n  }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, i => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedYear1]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedMonth1 = $event)\n  }, [_hoisted_8, (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'], i => {\n    return _createElementVNode(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 64 /* STABLE_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedMonth1]]), _hoisted_10, _hoisted_11, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.selectedCity2 = $event)\n  }, [_hoisted_12, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityName, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: city,\n      key: city\n    }, _toDisplayString(city), 9 /* TEXT, PROPS */, _hoisted_13);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCity2]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.selectedYear2 = $event)\n  }, [_hoisted_14, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, i => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedYear2]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.selectedMonth2 = $event)\n  }, [_hoisted_16, (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'], i => {\n    return _createElementVNode(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_17);\n  }), 64 /* STABLE_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedMonth2]]), _hoisted_18, _hoisted_19, _hoisted_20, _createCommentVNode(\" <div>{{ cityTypeStatistics }}</div> \"), _hoisted_21, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.selectedCity3 = $event)\n  }, [_hoisted_22, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityName, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: city,\n      key: city\n    }, _toDisplayString(city), 9 /* TEXT, PROPS */, _hoisted_23);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCity3]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.selectedMethod = $event)\n  }, _hoisted_26, 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedMethod]]), $data.selectedMethod === '月份' ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.selectedYear3 = $event)\n  }, [_hoisted_27, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, i => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_28);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vModelSelect, $data.selectedYear3]]) : _createCommentVNode(\"v-if\", true), _hoisted_29, _createCommentVNode(\" <button @click=\\\"getCityDateStatistics\\\">基于城市的时间统计</button> \"), _createCommentVNode(\" <div>{{ cityDateStatistics }}</div> \")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","style","value","selected","id","_hoisted_24","_hoisted_25","_createVNode","_component_el_header","onMousemove","_ctx","handleMouseMove","_hoisted_1","_hoisted_2","_toDisplayString","$data","numCases","_hoisted_3","selectedCity1","$event","_hoisted_4","_createElementBlock","_Fragment","_renderList","cityName","city","key","_hoisted_5","selectedYear1","_hoisted_6","years","i","_hoisted_7","selectedMonth1","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","selectedCity2","_hoisted_12","_hoisted_13","selectedYear2","_hoisted_14","_hoisted_15","selectedMonth2","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_createCommentVNode","_hoisted_21","selectedCity3","_hoisted_22","_hoisted_23","selectedMethod","selectedYear3","_hoisted_27","_hoisted_28","_hoisted_29"],"sources":["C:\\GitHubWarehouse\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\CaseManagement\\CrimeDataStatistics.vue"],"sourcesContent":["<!-- zyh -->\r\n<template>\r\n<el-header class=\"sub-header\"  @mousemove=\"handleMouseMove\">\r\n    <div>&nbsp;&nbsp;案件管理&nbsp;>&nbsp;犯罪数据统计</div>\r\n  </el-header>\r\n\r\n  <div class=\"main\">\r\n    <h4>案件总数：{{ numCases }}</h4>\r\n\r\n    <h2 style=\"text-align: center\">案件状态统计</h2>\r\n    <select v-model=\"selectedCity1\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">{{ city }}</option>\r\n    </select>\r\n    <select v-model=\"selectedYear1\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <select v-model=\"selectedMonth1\">\r\n      <option selected value=\"全部\">全部月份</option>\r\n      <option v-for=\"i in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\" :value=\"i\" :key=\"i\">{{ i }}\r\n      </option>\r\n    </select>\r\n    <div id=\"statusPieChart\" style=\"width: 400px; height: 400px; margin-left: auto; margin-right: auto\"></div>\r\n\r\n    <h2 style=\"text-align: center; margin-top: 120px\">案件类型统计</h2>\r\n    <select v-model=\"selectedCity2\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">{{ city }}</option>\r\n    </select>\r\n    <select v-model=\"selectedYear2\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <select v-model=\"selectedMonth2\">\r\n      <option selected value=\"全部\">全部月份</option>\r\n      <option v-for=\"i in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\" :value=\"i\" :key=\"i\">{{ i }}\r\n      </option>\r\n    </select>\r\n    <div id=\"typePieChart\" style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"></div>\r\n\r\n    <h2 style=\"text-align: center; margin-top: 100px\">城市案件统计</h2>\r\n    <div id=\"zhuChart\" style=\"width: 800px; height: 500px; margin-left: auto; margin-right: auto\"></div>\r\n    <!-- <div>{{ cityTypeStatistics }}</div> -->\r\n\r\n    <h2 style=\"text-align: center; margin-top: 100px\">分时间和城市的案件统计</h2>\r\n    <select v-model=\"selectedCity3\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">{{ city }}</option>\r\n    </select>\r\n    <select v-model=\"selectedMethod\">\r\n      <option selected value=\"年份\">年份统计</option>\r\n      <option selected value=\"月份\">月份统计</option>\r\n    </select>\r\n    <select v-if=\"selectedMethod === '月份'\" v-model=\"selectedYear3\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <div id=\"zheChart\" style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"></div>\r\n\r\n\r\n    <!-- <button @click=\"getCityDateStatistics\">基于城市的时间统计</button> -->\r\n    <!-- <div>{{ cityDateStatistics }}</div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      numCases: 0,\r\n      statusStatistics: \"默认\",\r\n      typeStatistics: \"默认\",\r\n      cityStatistics: \"默认\",\r\n      cityTypeStatistics: \"默认\",\r\n      cityYearStatistics: \"默认\",\r\n      cityName: \"默认\",\r\n      selectedCity1: \"全部\",\r\n      selectedYear1: \"全部\",\r\n      selectedMonth1: \"全部\",\r\n      selectedCity2: \"全部\",\r\n      selectedYear2: \"全部\",\r\n      selectedMonth2: \"全部\",\r\n      selectedCity3: \"全部\",\r\n      selectedYear3: \"全部\",\r\n      cityDateStatistics: \"默认\",\r\n      years: [],\r\n      selectedMethod: \"年份\",\r\n    };\r\n  },\r\n  methods: {\r\n    async getCityStatistics() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/caseCityStatistics\");\r\n        this.cityStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityStatistics出错！\");\r\n      }\r\n    },\r\n    async getCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/cityDateStatistics\", { params: { city: this.selectedCity3 } });\r\n        this.cityDateStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getStatusCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/statusCityDateStatistics?city=${encodeURIComponent(this.selectedCity1)}&year=${encodeURIComponent(this.selectedYear1)}&month=${encodeURIComponent(this.selectedMonth1)}`);\r\n        this.statusStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getStatusCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getCityTypeStatistics() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/cityTypeStatistics\");\r\n        this.cityTypeStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityTypeStatistics出错！\");\r\n      }\r\n    },\r\n    async getTypeCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/typeCityDateStatistics?city=${encodeURIComponent(this.selectedCity2)}&year=${encodeURIComponent(this.selectedYear2)}&month=${encodeURIComponent(this.selectedMonth2)}`);\r\n        this.typeStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getTypeCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    drawStatusPieChart() {\r\n      const pieChart = echarts.init(document.getElementById('statusPieChart'));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          top: '5%',\r\n          left: 'center'\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Access From',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: this.statusStatistics['立案'], name: '立案' },\r\n              { value: this.statusStatistics['调查'], name: '调查' },\r\n              { value: this.statusStatistics['结案'], name: '结案' }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawTypePieChart() {\r\n      const pieChart = echarts.init(document.getElementById('typePieChart'));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          top: '5%',\r\n          left: 'center'\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Access From',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: this.typeStatistics['强奸'], name: '强奸' },\r\n              { value: this.typeStatistics['抢劫'], name: '抢劫' },\r\n              { value: this.typeStatistics['故意伤害'], name: '故意伤害' },\r\n              { value: this.typeStatistics['盗窃'], name: '盗窃' },\r\n              { value: this.typeStatistics['诈骗'], name: '诈骗' },\r\n              { value: this.typeStatistics['谋杀'], name: '谋杀' }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawYearZheChart() {\r\n      var result = {}; // 保存结果的对象\r\n      for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\r\n        let sum = 0;\r\n        for (const value of Object.values(yearData)) {\r\n          sum += value;\r\n        }\r\n        result[year] = sum;\r\n      }\r\n      result = Object.values(result); // result: [6, 6, 7, 4, 5, 4, 78]\r\n\r\n      const zheChart = echarts.init(document.getElementById('zheChart'));\r\n\r\n      const option = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: this.years\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: result,\r\n            type: 'line'\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawMonthZheChart() {\r\n      const zheChart = echarts.init(document.getElementById('zheChart'));\r\n      var option;\r\n\r\n      if (this.selectedYear3 !== \"全部\") {\r\n\r\n        option = {\r\n          xAxis: {\r\n            type: 'category',\r\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              data: [this.cityDateStatistics[this.selectedYear3][\"1\"], this.cityDateStatistics[this.selectedYear3][\"2\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"3\"], this.cityDateStatistics[this.selectedYear3][\"4\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"5\"], this.cityDateStatistics[this.selectedYear3][\"6\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"7\"], this.cityDateStatistics[this.selectedYear3][\"8\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"9\"], this.cityDateStatistics[this.selectedYear3][\"10\"],\r\n              this.cityDateStatistics[this.selectedYear3][\"11\"], this.cityDateStatistics[this.selectedYear3][\"12\"]],\r\n              type: 'line'\r\n            }\r\n          ]\r\n        };\r\n      }\r\n      else {\r\n        var result = {}; // 保存结果的对象\r\n\r\n        for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\r\n          year; // 为了取消year未使用的报错\r\n          for (const [month, value] of Object.entries(yearData)) {\r\n            if (!result[month]) {\r\n              result[month] = value;\r\n            } else {\r\n              result[month] += value;\r\n            }\r\n          }\r\n        }\r\n        result = Object.values(result);\r\n\r\n        option = {\r\n          xAxis: {\r\n            type: 'category',\r\n            data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              data: [result[\"1\"], result[\"2\"],\r\n              result[\"3\"], result[\"4\"],\r\n              result[\"5\"], result[\"6\"],\r\n              result[\"7\"], result[\"8\"],\r\n              result[\"9\"], result[\"10\"],\r\n              result[\"11\"], result[\"12\"]],\r\n              type: 'line'\r\n            }\r\n          ]\r\n        };\r\n      }\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawZheChart() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawYearZheChart();\r\n      }\r\n      else {\r\n        this.drawMonthZheChart();\r\n      }\r\n    },\r\n    drawTypeZhuChart() {\r\n      var cityType = {\r\n        numRape: [],\r\n        numRobbery: [],\r\n        numInjury: [],\r\n        numTheft: [],\r\n        numFraud: [],\r\n        numMurder: []\r\n      };\r\n      for (const city in this.cityTypeStatistics) {\r\n        if (Object.prototype.hasOwnProperty.call(this.cityTypeStatistics, city)) {\r\n          const crimeCounts = this.cityTypeStatistics[city];\r\n          // 将对应的值添加到转换后的对象中的数组中\r\n          cityType.numRape.push(crimeCounts[0]);\r\n          cityType.numRobbery.push(crimeCounts[1]);\r\n          cityType.numInjury.push(crimeCounts[2]);\r\n          cityType.numTheft.push(crimeCounts[3]);\r\n          cityType.numFraud.push(crimeCounts[4]);\r\n          cityType.numMurder.push(crimeCounts[5]);\r\n        }\r\n      }\r\n\r\n      const values = Object.values(this.cityTypeStatistics);\r\n      const flattenedValues = values.reduce((acc, val) => acc.concat(val), []);\r\n      var max = Math.max(...flattenedValues);\r\n\r\n      // console.log(cityType);\r\n      const zhuChart = echarts.init(document.getElementById('zhuChart'));\r\n\r\n      const option = {\r\n        title: {\r\n          text: '城市案件统计直方图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['强奸', '抢劫', '故意伤害', '盗窃', '诈骗', '谋杀']\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            dataView: { show: true, readOnly: false },\r\n            magicType: { show: true, type: ['line', 'bar'] },\r\n            restore: { show: true },\r\n            saveAsImage: { show: true }\r\n          }\r\n        },\r\n        calculable: true,\r\n        dataZoom: [\r\n          //1.横向使用滚动条\r\n          {\r\n            type: 'slider',//有单独的滑动条，用户在滑动条上进行缩放或漫游。inside是直接可以是在内部拖动显示\r\n            show: false,//是否显示 组件。如果设置为 false，不会显示，但是数据过滤的功能还存在。\r\n            start: 0,//数据窗口范围的起始百分比0-100\r\n            end: 50,//数据窗口范围的结束百分比0-100\r\n            xAxisIndex: [0],// 此处表示控制第一个xAxis，设置 dataZoom-slider 组件控制的 x轴 可是已数组[0,2]表示控制第一，三个；xAxisIndex: 2 ，表示控制第二个。yAxisIndex属性同理\r\n          },\r\n          //2.在内部可以横向拖动\r\n          {\r\n            type: 'inside',// 内置于坐标系中\r\n            start: 0,\r\n            end: 30,\r\n            xAxisIndex: [0],\r\n            zoomOnMouseWheel: false, // 关闭滚轮缩放\r\n            moveOnMouseWheel: true,\r\n            moveOnMouseMove: false,\r\n          }\r\n        ],\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            // prettier-ignore\r\n            data: Object.keys(this.cityTypeStatistics)\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            max: max,\r\n            min: 0,\r\n            type: 'value'\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '强奸',\r\n            type: 'bar',\r\n            data: cityType.numRape,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '抢劫',\r\n            type: 'bar',\r\n            data: cityType.numRobbery,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '故意伤害',\r\n            type: 'bar',\r\n            data: cityType.numInjury,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '盗窃',\r\n            type: 'bar',\r\n            data: cityType.numTheft,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '诈骗',\r\n            type: 'bar',\r\n            data: cityType.numFraud,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          },\r\n          {\r\n            name: '谋杀',\r\n            type: 'bar',\r\n            data: cityType.numMurder,\r\n            barWidth: '10%'\r\n            // barCategoryGap: '33%',\r\n            // barGap: '30%',\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && zhuChart.setOption(option);\r\n    },\r\n  },\r\n  watch: {\r\n    async selectedCity1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedYear1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedMonth1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedCity2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedYear2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedMonth2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    selectedYear3() {\r\n      this.drawZheChart();\r\n    },\r\n    async selectedCity3() {\r\n      await this.getCityDateStatistics();\r\n      this.drawZheChart();\r\n    },\r\n    async selectedMethod() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawZheChart();\r\n      }\r\n      else {\r\n        await this.getCityDateStatistics();\r\n        this.drawZheChart();\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    await this.getCityStatistics();           // 获取城市及其总的案件数，其内接口返回数据形如{\"西安\":10,\"上海\":20,...}\r\n    await this.getStatusCityDateStatistics(); // 获取指定城市指定年月的案件状态，其内接口返回数据形如{\"立案\":10,\"状态\":20,...}\r\n    await this.getTypeCityDateStatistics();   // 获取指定城市指定年月的案件类型，其内接口返回数据形如{\"抢劫\":10,\"谋杀\":20,...}\r\n    await this.getCityDateStatistics();       // 获取指定城市指定年月的案件数目，其内接口返回数据形如{\"2017\":{\"1\":3,\"2\":5,...},...}\r\n    this.years = Object.keys(this.cityDateStatistics); // 获取年份范围,形如[\"2017\",\"2018\",...]\r\n    this.cityName = Object.keys(this.cityStatistics);  // 获取年份范围,形如[\"西安\",\"上海\",...]\r\n\r\n    // 获取案件总数\r\n    this.numCases = this.statusStatistics[\"立案\"] + this.statusStatistics[\"调查\"] + this.statusStatistics[\"结案\"];\r\n\r\n    this.drawStatusPieChart(); // 画总案件状态圆饼图\r\n    this.drawTypePieChart(); // 画总案件类型圆饼图\r\n    this.drawZheChart(); // 画折线图\r\n\r\n    await this.getCityTypeStatistics();\r\n    this.drawTypeZhuChart();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n .sub-header {\r\n    overflow: hidden;\r\n    display: flex;\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 199px;\r\n    width: calc(100% - 199px);\r\n    height: 7vh;\r\n    min-height: 40px;\r\n    align-items: center; /* 文字竖直方向居中对齐 */\r\n    background-color: #1f2cdf;\r\n    box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\r\n    color: #ffffff;\r\n    font-size: 28px;\r\n  }\r\n  .sub-header::before {\r\n    --size: 0;\r\n    content: '';\r\n    position: absolute;\r\n    left: var(--x);\r\n    top: var(--y);\r\n    width: var(--size);\r\n    height: var(--size);\r\n    background: radial-gradient(circle closest-side, #5a65ff, transparent);\r\n    transform: translate(-50%, -50%);\r\n    transition: width .2s ease, height .2s ease;\r\n  }\r\n  .sub-header:hover::before {\r\n    --size: 400px;\r\n  }\r\n.main\r\n{\r\n  margin-top: 10vh;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}