{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { mergeToken, genComponentStyleHook } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: _extends(_extends({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired`]: {\n          color: token.QRCodeExpiredTextColor\n        }\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport default genComponentStyleHook('QRCode', token => genQRCodeStyle(mergeToken(token, {\n  QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n  QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n})));","map":{"version":3,"names":["_extends","mergeToken","genComponentStyleHook","resetComponent","genQRCodeStyle","token","componentCls","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","lineWidth","lineType","colorSplit","position","width","height","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeExpiredTextColor","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor"],"sources":["C:/GitHubWarehouse/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/qrcode/style/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { mergeToken, genComponentStyleHook } from '../../theme/internal';\r\nimport { resetComponent } from '../../style';\r\nconst genQRCodeStyle = token => {\r\n  const {\r\n    componentCls\r\n  } = token;\r\n  return {\r\n    [componentCls]: _extends(_extends({}, resetComponent(token)), {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: token.paddingSM,\r\n      backgroundColor: token.colorWhite,\r\n      borderRadius: token.borderRadiusLG,\r\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\r\n      position: 'relative',\r\n      width: '100%',\r\n      height: '100%',\r\n      overflow: 'hidden',\r\n      [`& > ${componentCls}-mask`]: {\r\n        position: 'absolute',\r\n        insetBlockStart: 0,\r\n        insetInlineStart: 0,\r\n        zIndex: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        color: token.colorText,\r\n        lineHeight: token.lineHeight,\r\n        background: token.QRCodeMaskBackgroundColor,\r\n        textAlign: 'center',\r\n        [`& > ${componentCls}-expired`]: {\r\n          color: token.QRCodeExpiredTextColor\r\n        }\r\n      },\r\n      '&-icon': {\r\n        marginBlockEnd: token.marginXS,\r\n        fontSize: token.controlHeight\r\n      }\r\n    }),\r\n    [`${componentCls}-borderless`]: {\r\n      borderColor: 'transparent'\r\n    }\r\n  };\r\n};\r\nexport default genComponentStyleHook('QRCode', token => genQRCodeStyle(mergeToken(token, {\r\n  QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\r\n  QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\r\n})));"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,UAAU,EAAEC,qBAAqB,QAAQ,sBAAsB;AACxE,SAASC,cAAc,QAAQ,aAAa;AAC5C,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAC9B,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,OAAO;IACL,CAACC,YAAY,GAAGN,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEG,cAAc,CAACE,KAAK,CAAC,CAAC,EAAE;MAC5DE,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAEL,KAAK,CAACM,SAAS;MACxBC,eAAe,EAAEP,KAAK,CAACQ,UAAU;MACjCC,YAAY,EAAET,KAAK,CAACU,cAAc;MAClCC,MAAM,EAAG,GAAEX,KAAK,CAACY,SAAU,MAAKZ,KAAK,CAACa,QAAS,IAAGb,KAAK,CAACc,UAAW,EAAC;MACpEC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,QAAQ;MAClB,CAAE,OAAMjB,YAAa,OAAM,GAAG;QAC5Bc,QAAQ,EAAE,UAAU;QACpBI,eAAe,EAAE,CAAC;QAClBC,gBAAgB,EAAE,CAAC;QACnBC,MAAM,EAAE,EAAE;QACVnB,OAAO,EAAE,MAAM;QACfoB,aAAa,EAAE,QAAQ;QACvBnB,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBY,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdM,KAAK,EAAEvB,KAAK,CAACwB,SAAS;QACtBC,UAAU,EAAEzB,KAAK,CAACyB,UAAU;QAC5BC,UAAU,EAAE1B,KAAK,CAAC2B,yBAAyB;QAC3CC,SAAS,EAAE,QAAQ;QACnB,CAAE,OAAM3B,YAAa,UAAS,GAAG;UAC/BsB,KAAK,EAAEvB,KAAK,CAAC6B;QACf;MACF,CAAC;MACD,QAAQ,EAAE;QACRC,cAAc,EAAE9B,KAAK,CAAC+B,QAAQ;QAC9BC,QAAQ,EAAEhC,KAAK,CAACiC;MAClB;IACF,CAAC,CAAC;IACF,CAAE,GAAEhC,YAAa,aAAY,GAAG;MAC9BiC,WAAW,EAAE;IACf;EACF,CAAC;AACH,CAAC;AACD,eAAerC,qBAAqB,CAAC,QAAQ,EAAEG,KAAK,IAAID,cAAc,CAACH,UAAU,CAACI,KAAK,EAAE;EACvF6B,sBAAsB,EAAE,qBAAqB;EAC7CF,yBAAyB,EAAE;AAC7B,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}