{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"  警员管理 > 警员权限修改\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"案件状态统计\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"全部\",\n  selected: \"\"\n}, \"全部城市\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部年份\", -1 /* HOISTED */);\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部月份\", -1 /* HOISTED */);\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"statusPieChart\",\n  style: {\n    \"width\": \"400px\",\n    \"height\": \"400px\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"案件类型统计\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"全部\",\n  selected: \"\"\n}, \"全部城市\", -1 /* HOISTED */);\nconst _hoisted_12 = [\"value\"];\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部年份\", -1 /* HOISTED */);\nconst _hoisted_14 = [\"value\"];\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部月份\", -1 /* HOISTED */);\nconst _hoisted_16 = [\"value\"];\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"typePieChart\",\n  style: {\n    \"width\": \"600px\",\n    \"height\": \"400px\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"城市案件统计\", -1 /* HOISTED */);\nconst _hoisted_19 = {\n  border: \"1px solid black\",\n  style: {\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"城市\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"数量\")])], -1 /* HOISTED */);\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, \"分时间和城市的案件统计\", -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"全部\",\n  selected: \"\"\n}, \"全部城市\", -1 /* HOISTED */);\nconst _hoisted_23 = [\"value\"];\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"年份\"\n}, \"年份统计\", -1 /* HOISTED */);\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"月份\"\n}, \"月份统计\", -1 /* HOISTED */);\nconst _hoisted_26 = [_hoisted_24, _hoisted_25];\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"全部\"\n}, \"全部年份\", -1 /* HOISTED */);\nconst _hoisted_28 = [\"value\"];\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"zheChart\",\n  style: {\n    \"width\": \"600px\",\n    \"height\": \"400px\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\"\n  }\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_header = _resolveComponent(\"el-header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_header, {\n    class: \"sub-header\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, \"案件总数：\" + _toDisplayString($data.numCases), 1 /* TEXT */), _hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedCity1 = $event)\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityName, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: city,\n      key: city\n    }, _toDisplayString(city), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCity1]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedYear1 = $event)\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, i => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedYear1]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedMonth1 = $event)\n  }, [_hoisted_7, (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'], i => {\n    return _createElementVNode(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 64 /* STABLE_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedMonth1]]), _hoisted_9, _hoisted_10, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.selectedCity2 = $event)\n  }, [_hoisted_11, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityName, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: city,\n      key: city\n    }, _toDisplayString(city), 9 /* TEXT, PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCity2]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.selectedYear2 = $event)\n  }, [_hoisted_13, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, i => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_14);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedYear2]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.selectedMonth2 = $event)\n  }, [_hoisted_15, (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'], i => {\n    return _createElementVNode(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_16);\n  }), 64 /* STABLE_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedMonth2]]), _hoisted_17, _hoisted_18, _createElementVNode(\"table\", _hoisted_19, [_hoisted_20, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityStatistics, (count_, city_) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: city_\n    }, [_createElementVNode(\"td\", null, _toDisplayString(city_), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(count_), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _hoisted_21, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.selectedCity3 = $event)\n  }, [_hoisted_22, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cityName, city => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: city,\n      key: city\n    }, _toDisplayString(city), 9 /* TEXT, PROPS */, _hoisted_23);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCity3]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.selectedMethod = $event)\n  }, _hoisted_26, 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedMethod]]), $data.selectedMethod === '月份' ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.selectedYear3 = $event)\n  }, [_hoisted_27, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.years, i => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: i,\n      key: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_28);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vModelSelect, $data.selectedYear3]]) : _createCommentVNode(\"v-if\", true), _hoisted_29, _createCommentVNode(\" <button @click=\\\"getCityDateStatistics\\\">基于城市的时间统计</button> \"), _createCommentVNode(\" <div>{{ cityDateStatistics }}</div> \")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","style","value","selected","id","border","_hoisted_24","_hoisted_25","_createVNode","_component_el_header","class","_hoisted_1","_toDisplayString","$data","numCases","_hoisted_2","selectedCity1","$event","_hoisted_3","_createElementBlock","_Fragment","_renderList","cityName","city","key","_hoisted_4","selectedYear1","_hoisted_5","years","i","_hoisted_6","selectedMonth1","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","selectedCity2","_hoisted_11","_hoisted_12","selectedYear2","_hoisted_13","_hoisted_14","selectedMonth2","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","cityStatistics","count_","city_","_hoisted_21","selectedCity3","_hoisted_22","_hoisted_23","selectedMethod","selectedYear3","_hoisted_27","_hoisted_28","_hoisted_29","_createCommentVNode"],"sources":["C:\\GitHubWarehouse\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\CaseManagement\\CrimeDataStatistics.vue"],"sourcesContent":["<!-- zyh -->\r\n<template>\r\n<el-header class=\"sub-header\">\r\n    <div>&nbsp;&nbsp;警员管理&nbsp;>&nbsp;警员权限修改</div>\r\n  </el-header>\r\n  \r\n  <div>\r\n    <h4>案件总数：{{ numCases }}</h4>\r\n\r\n    <h2 style=\"text-align: center\">案件状态统计</h2>\r\n    <select v-model=\"selectedCity1\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">\r\n        {{ city }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"selectedYear1\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <select v-model=\"selectedMonth1\">\r\n      <option selected value=\"全部\">全部月份</option>\r\n      <option\r\n        v-for=\"i in [\r\n          '1',\r\n          '2',\r\n          '3',\r\n          '4',\r\n          '5',\r\n          '6',\r\n          '7',\r\n          '8',\r\n          '9',\r\n          '10',\r\n          '11',\r\n          '12',\r\n        ]\"\r\n        :value=\"i\"\r\n        :key=\"i\"\r\n      >\r\n        {{ i }}\r\n      </option>\r\n    </select>\r\n    <div\r\n      id=\"statusPieChart\"\r\n      style=\"width: 400px; height: 400px; margin-left: auto; margin-right: auto\"\r\n    ></div>\r\n\r\n    <h2 style=\"text-align: center\">案件类型统计</h2>\r\n    <select v-model=\"selectedCity2\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">\r\n        {{ city }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"selectedYear2\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <select v-model=\"selectedMonth2\">\r\n      <option selected value=\"全部\">全部月份</option>\r\n      <option\r\n        v-for=\"i in [\r\n          '1',\r\n          '2',\r\n          '3',\r\n          '4',\r\n          '5',\r\n          '6',\r\n          '7',\r\n          '8',\r\n          '9',\r\n          '10',\r\n          '11',\r\n          '12',\r\n        ]\"\r\n        :value=\"i\"\r\n        :key=\"i\"\r\n      >\r\n        {{ i }}\r\n      </option>\r\n    </select>\r\n    <div\r\n      id=\"typePieChart\"\r\n      style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"\r\n    ></div>\r\n\r\n    <h2 style=\"text-align: center\">城市案件统计</h2>\r\n    <table\r\n      border=\"1px solid black\"\r\n      style=\"margin-left: auto; margin-right: auto; text-align: center\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>城市</th>\r\n          <th>数量</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(count_, city_) in cityStatistics\" :key=\"city_\">\r\n          <td>{{ city_ }}</td>\r\n          <td>{{ count_ }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <h2 style=\"text-align: center\">分时间和城市的案件统计</h2>\r\n    <select v-model=\"selectedCity3\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">\r\n        {{ city }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"selectedMethod\">\r\n      <option selected value=\"年份\">年份统计</option>\r\n      <option selected value=\"月份\">月份统计</option>\r\n    </select>\r\n    <select v-if=\"selectedMethod === '月份'\" v-model=\"selectedYear3\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <div\r\n      id=\"zheChart\"\r\n      style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"\r\n    ></div>\r\n\r\n    <!-- <button @click=\"getCityDateStatistics\">基于城市的时间统计</button> -->\r\n    <!-- <div>{{ cityDateStatistics }}</div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      numCases: 0,\r\n      statusStatistics: \"默认\",\r\n      typeStatistics: \"默认\",\r\n      cityStatistics: \"默认\",\r\n      cityName: \"默认\",\r\n      selectedCity1: \"全部\",\r\n      selectedYear1: \"全部\",\r\n      selectedMonth1: \"全部\",\r\n      selectedCity2: \"全部\",\r\n      selectedYear2: \"全部\",\r\n      selectedMonth2: \"全部\",\r\n      selectedCity3: \"全部\",\r\n      selectedYear3: \"全部\",\r\n      cityDateStatistics: \"默认\",\r\n      years: [],\r\n      selectedMethod: \"年份\",\r\n    };\r\n  },\r\n  methods: {\r\n    async getCityStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:7078/api/crimeDataStatistics/caseCityStatistics\"\r\n        );\r\n        this.cityStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityStatistics出错！\");\r\n      }\r\n    },\r\n    async getCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:7078/api/crimeDataStatistics/cityDateStatistics\",\r\n          { params: { city: this.selectedCity3 } }\r\n        );\r\n        this.cityDateStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getStatusCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:7078/api/crimeDataStatistics/statusCityDateStatistics?city=${encodeURIComponent(\r\n            this.selectedCity1\r\n          )}&year=${encodeURIComponent(\r\n            this.selectedYear1\r\n          )}&month=${encodeURIComponent(this.selectedMonth1)}`\r\n        );\r\n        this.statusStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getStatusCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getTypeCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:7078/api/crimeDataStatistics/typeCityDateStatistics?city=${encodeURIComponent(\r\n            this.selectedCity2\r\n          )}&year=${encodeURIComponent(\r\n            this.selectedYear2\r\n          )}&month=${encodeURIComponent(this.selectedMonth2)}`\r\n        );\r\n        this.typeStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getTypeCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    drawStatusPieChart() {\r\n      const pieChart = echarts.init(document.getElementById(\"statusPieChart\"));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        legend: {\r\n          top: \"5%\",\r\n          left: \"center\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Access From\",\r\n            type: \"pie\",\r\n            radius: [\"40%\", \"70%\"],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 2,\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: \"center\",\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n            labelLine: {\r\n              show: false,\r\n            },\r\n            data: [\r\n              { value: this.statusStatistics[\"立案\"], name: \"立案\" },\r\n              { value: this.statusStatistics[\"调查\"], name: \"调查\" },\r\n              { value: this.statusStatistics[\"结案\"], name: \"结案\" },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawTypePieChart() {\r\n      const pieChart = echarts.init(document.getElementById(\"typePieChart\"));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        legend: {\r\n          top: \"5%\",\r\n          left: \"center\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Access From\",\r\n            type: \"pie\",\r\n            radius: [\"40%\", \"70%\"],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 2,\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: \"center\",\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n            labelLine: {\r\n              show: false,\r\n            },\r\n            data: [\r\n              { value: this.typeStatistics[\"强奸\"], name: \"强奸\" },\r\n              { value: this.typeStatistics[\"抢劫\"], name: \"抢劫\" },\r\n              { value: this.typeStatistics[\"故意伤害\"], name: \"故意伤害\" },\r\n              { value: this.typeStatistics[\"盗窃\"], name: \"盗窃\" },\r\n              { value: this.typeStatistics[\"诈骗\"], name: \"诈骗\" },\r\n              { value: this.typeStatistics[\"谋杀\"], name: \"谋杀\" },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawYearZheChart() {\r\n      var result = {}; // 保存结果的对象\r\n      for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\r\n        let sum = 0;\r\n        for (const value of Object.values(yearData)) {\r\n          sum += value;\r\n        }\r\n        result[year] = sum;\r\n      }\r\n      result = Object.values(result); // result: [6, 6, 7, 4, 5, 4, 78]\r\n\r\n      const zheChart = echarts.init(document.getElementById(\"zheChart\"));\r\n\r\n      const option = {\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: this.years,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            data: result,\r\n            type: \"line\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawMonthZheChart() {\r\n      const zheChart = echarts.init(document.getElementById(\"zheChart\"));\r\n      var option;\r\n\r\n      if (this.selectedYear3 !== \"全部\") {\r\n        option = {\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: [\r\n              \"Jan\",\r\n              \"Feb\",\r\n              \"Mar\",\r\n              \"Apr\",\r\n              \"May\",\r\n              \"Jun\",\r\n              \"Jul\",\r\n              \"Aug\",\r\n              \"Sep\",\r\n              \"Oct\",\r\n              \"Nov\",\r\n              \"Dec\",\r\n            ],\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n          },\r\n          series: [\r\n            {\r\n              data: [\r\n                this.cityDateStatistics[this.selectedYear3][\"1\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"2\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"3\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"4\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"5\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"6\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"7\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"8\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"9\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"10\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"11\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"12\"],\r\n              ],\r\n              type: \"line\",\r\n            },\r\n          ],\r\n        };\r\n      } else {\r\n        var result = {}; // 保存结果的对象\r\n\r\n        for (const [year, yearData] of Object.entries(\r\n          this.cityDateStatistics\r\n        )) {\r\n          year; // 为了取消year未使用的报错\r\n          for (const [month, value] of Object.entries(yearData)) {\r\n            if (!result[month]) {\r\n              result[month] = value;\r\n            } else {\r\n              result[month] += value;\r\n            }\r\n          }\r\n        }\r\n        result = Object.values(result);\r\n\r\n        option = {\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: [\r\n              \"Jan\",\r\n              \"Feb\",\r\n              \"Mar\",\r\n              \"Apr\",\r\n              \"May\",\r\n              \"Jun\",\r\n              \"Jul\",\r\n              \"Aug\",\r\n              \"Sep\",\r\n              \"Oct\",\r\n              \"Nov\",\r\n              \"Dec\",\r\n            ],\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n          },\r\n          series: [\r\n            {\r\n              data: [\r\n                result[\"1\"],\r\n                result[\"2\"],\r\n                result[\"3\"],\r\n                result[\"4\"],\r\n                result[\"5\"],\r\n                result[\"6\"],\r\n                result[\"7\"],\r\n                result[\"8\"],\r\n                result[\"9\"],\r\n                result[\"10\"],\r\n                result[\"11\"],\r\n                result[\"12\"],\r\n              ],\r\n              type: \"line\",\r\n            },\r\n          ],\r\n        };\r\n      }\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawZheChart() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawYearZheChart();\r\n      } else {\r\n        this.drawMonthZheChart();\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    async selectedCity1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedYear1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedMonth1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedCity2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedYear2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedMonth2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    selectedYear3() {\r\n      this.drawZheChart();\r\n    },\r\n    async selectedCity3() {\r\n      await this.getCityDateStatistics();\r\n      this.drawZheChart();\r\n    },\r\n    async selectedMethod() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawZheChart();\r\n      } else {\r\n        await this.getCityDateStatistics();\r\n        this.drawZheChart();\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    await this.getCityStatistics(); // 获取城市及其总的案件数，其内接口返回数据形如{\"西安\":10,\"上海\":20,...}\r\n    await this.getStatusCityDateStatistics(); // 获取指定城市指定年月的案件状态，其内接口返回数据形如{\"立案\":10,\"状态\":20,...}\r\n    await this.getTypeCityDateStatistics(); // 获取指定城市指定年月的案件类型，其内接口返回数据形如{\"抢劫\":10,\"谋杀\":20,...}\r\n    await this.getCityDateStatistics(); // 获取指定城市指定年月的案件数目，其内接口返回数据形如{\"2017\":{\"1\":3,\"2\":5,...},...}\r\n    this.years = Object.keys(this.cityDateStatistics); // 获取年份范围,形如[\"2017\",\"2018\",...]\r\n    this.cityName = Object.keys(this.cityStatistics); // 获取年份范围,形如[\"西安\",\"上海\",...]\r\n\r\n    // 获取案件总数\r\n    this.numCases =\r\n      this.statusStatistics[\"立案\"] +\r\n      this.statusStatistics[\"调查\"] +\r\n      this.statusStatistics[\"结案\"];\r\n\r\n    this.drawStatusPieChart(); // 画总案件状态圆饼图\r\n    this.drawTypePieChart(); // 画总案件类型圆饼图\r\n    this.drawZheChart(); // 画折线图\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}