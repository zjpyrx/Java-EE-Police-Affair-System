{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport PickerTrigger from './PickerTrigger';\nimport PickerPanel from './PickerPanel';\nimport usePickerInput from './hooks/usePickerInput';\nimport PresetPanel from './PresetPanel';\nimport getDataOrAriaProps, { toArray, getValue, updateValues } from './utils/miscUtil';\nimport { getDefaultFormat, getInputSize, elementsContains } from './utils/uiUtil';\nimport { useProvidePanel } from './PanelContext';\nimport { isEqual, getClosingViewDate, isSameDate, isSameWeek, isSameQuarter, formatValue, parseValue } from './utils/dateUtil';\nimport useValueTexts from './hooks/useValueTexts';\nimport useTextValueMapping from './hooks/useTextValueMapping';\nimport usePresets from './hooks/usePresets';\nimport { RangeContextProvider } from './RangeContext';\nimport useRangeDisabled from './hooks/useRangeDisabled';\nimport getExtraFooter from './utils/getExtraFooter';\nimport getRanges from './utils/getRanges';\nimport useRangeViewDates from './hooks/useRangeViewDates';\nimport useHoverValue from './hooks/useHoverValue';\nimport { computed, defineComponent, ref, toRef, watch, watchEffect } from 'vue';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport { warning } from '../vc-util/warning';\nimport useState from '../_util/hooks/useState';\nimport classNames from '../_util/classNames';\nimport { legacyPropsWarning } from './utils/warnUtil';\nimport { useElementSize } from '../_util/hooks/_vueuse/useElementSize';\nfunction reorderValues(values, generateConfig) {\n  if (values && values[0] && values[1] && generateConfig.isAfter(values[0], values[1])) {\n    return [values[1], values[0]];\n  }\n  return values;\n}\nfunction canValueTrigger(value, index, disabled, allowEmpty) {\n  if (value) {\n    return true;\n  }\n  if (allowEmpty && allowEmpty[index]) {\n    return true;\n  }\n  if (disabled[(index + 1) % 2]) {\n    return true;\n  }\n  return false;\n}\nfunction RangerPicker() {\n  return defineComponent({\n    name: 'RangerPicker',\n    inheritAttrs: false,\n    props: ['prefixCls', 'id', 'popupStyle', 'dropdownClassName', 'transitionName', 'dropdownAlign', 'getPopupContainer', 'generateConfig', 'locale', 'placeholder', 'autofocus', 'disabled', 'format', 'picker', 'showTime', 'showNow', 'showHour', 'showMinute', 'showSecond', 'use12Hours', 'separator', 'value', 'defaultValue', 'defaultPickerValue', 'open', 'defaultOpen', 'disabledDate', 'disabledTime', 'dateRender', 'panelRender', 'ranges', 'allowEmpty', 'allowClear', 'suffixIcon', 'clearIcon', 'pickerRef', 'inputReadOnly', 'mode', 'renderExtraFooter', 'onChange', 'onOpenChange', 'onPanelChange', 'onCalendarChange', 'onFocus', 'onBlur', 'onMousedown', 'onMouseup', 'onMouseenter', 'onMouseleave', 'onClick', 'onOk', 'onKeydown', 'components', 'order', 'direction', 'activePickerIndex', 'autocomplete', 'minuteStep', 'hourStep', 'secondStep', 'hideDisabledOptions', 'disabledMinutes', 'presets'],\n    setup(props, _ref) {\n      let {\n        attrs,\n        expose\n      } = _ref;\n      const needConfirmButton = computed(() => props.picker === 'date' && !!props.showTime || props.picker === 'time');\n      const presets = computed(() => props.presets);\n      const ranges = computed(() => props.ranges);\n      const presetList = usePresets(presets, ranges);\n      // We record oqqpened status here in case repeat open with picker\n      const openRecordsRef = ref({});\n      const containerRef = ref(null);\n      const panelDivRef = ref(null);\n      const startInputDivRef = ref(null);\n      const endInputDivRef = ref(null);\n      const separatorRef = ref(null);\n      const startInputRef = ref(null);\n      const endInputRef = ref(null);\n      const arrowRef = ref(null);\n      // ============================ Warning ============================\n      if (process.env.NODE_ENV !== 'production') {\n        legacyPropsWarning(props);\n      }\n      // ============================= Misc ==============================\n      const formatList = computed(() => toArray(getDefaultFormat(props.format, props.picker, props.showTime, props.use12Hours)));\n      // Active picker\n      const [mergedActivePickerIndex, setMergedActivePickerIndex] = useMergedState(0, {\n        value: toRef(props, 'activePickerIndex')\n      });\n      // Operation ref\n      const operationRef = ref(null);\n      const mergedDisabled = computed(() => {\n        const {\n          disabled\n        } = props;\n        if (Array.isArray(disabled)) {\n          return disabled;\n        }\n        return [disabled || false, disabled || false];\n      });\n      // ============================= Value =============================\n      const [mergedValue, setInnerValue] = useMergedState(null, {\n        value: toRef(props, 'value'),\n        defaultValue: props.defaultValue,\n        postState: values => props.picker === 'time' && !props.order ? values : reorderValues(values, props.generateConfig)\n      });\n      // =========================== View Date ===========================\n      // Config view panel\n      const [startViewDate, endViewDate, setViewDate] = useRangeViewDates({\n        values: mergedValue,\n        picker: toRef(props, 'picker'),\n        defaultDates: props.defaultPickerValue,\n        generateConfig: toRef(props, 'generateConfig')\n      });\n      // ========================= Select Values =========================\n      const [selectedValue, setSelectedValue] = useMergedState(mergedValue.value, {\n        postState: values => {\n          let postValues = values;\n          if (mergedDisabled.value[0] && mergedDisabled.value[1]) {\n            return postValues;\n          }\n          // Fill disabled unit\n          for (let i = 0; i < 2; i += 1) {\n            if (mergedDisabled.value[i] && !getValue(postValues, i) && !getValue(props.allowEmpty, i)) {\n              postValues = updateValues(postValues, props.generateConfig.getNow(), i);\n            }\n          }\n          return postValues;\n        }\n      });\n      // ============================= Modes =============================\n      const [mergedModes, setInnerModes] = useMergedState([props.picker, props.picker], {\n        value: toRef(props, 'mode')\n      });\n      watch(() => props.picker, () => {\n        setInnerModes([props.picker, props.picker]);\n      });\n      const triggerModesChange = (modes, values) => {\n        var _a;\n        setInnerModes(modes);\n        (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, values, modes);\n      };\n      // ========================= Disable Date ==========================\n      const [disabledStartDate, disabledEndDate] = useRangeDisabled({\n        picker: toRef(props, 'picker'),\n        selectedValue,\n        locale: toRef(props, 'locale'),\n        disabled: mergedDisabled,\n        disabledDate: toRef(props, 'disabledDate'),\n        generateConfig: toRef(props, 'generateConfig')\n      }, openRecordsRef);\n      // ============================= Open ==============================\n      const [mergedOpen, triggerInnerOpen] = useMergedState(false, {\n        value: toRef(props, 'open'),\n        defaultValue: props.defaultOpen,\n        postState: postOpen => mergedDisabled.value[mergedActivePickerIndex.value] ? false : postOpen,\n        onChange: newOpen => {\n          var _a;\n          (_a = props.onOpenChange) === null || _a === void 0 ? void 0 : _a.call(props, newOpen);\n          if (!newOpen && operationRef.value && operationRef.value.onClose) {\n            operationRef.value.onClose();\n          }\n        }\n      });\n      const startOpen = computed(() => mergedOpen.value && mergedActivePickerIndex.value === 0);\n      const endOpen = computed(() => mergedOpen.value && mergedActivePickerIndex.value === 1);\n      const panelLeft = ref(0);\n      const arrowLeft = ref(0);\n      // ============================= Popup =============================\n      // Popup min width\n      const popupMinWidth = ref(0);\n      const {\n        width: containerWidth\n      } = useElementSize(containerRef);\n      watch([mergedOpen, containerWidth], () => {\n        if (!mergedOpen.value && containerRef.value) {\n          popupMinWidth.value = containerWidth.value;\n        }\n      });\n      const {\n        width: panelDivWidth\n      } = useElementSize(panelDivRef);\n      const {\n        width: arrowWidth\n      } = useElementSize(arrowRef);\n      const {\n        width: startInputDivWidth\n      } = useElementSize(startInputDivRef);\n      const {\n        width: separatorWidth\n      } = useElementSize(separatorRef);\n      watch([mergedActivePickerIndex, mergedOpen, panelDivWidth, arrowWidth, startInputDivWidth, separatorWidth, () => props.direction], () => {\n        arrowLeft.value = 0;\n        if (mergedOpen.value && mergedActivePickerIndex.value) {\n          if (startInputDivRef.value && separatorRef.value && panelDivRef.value) {\n            arrowLeft.value = startInputDivWidth.value + separatorWidth.value;\n            if (panelDivWidth.value && arrowWidth.value && arrowLeft.value > panelDivWidth.value - arrowWidth.value - (props.direction === 'rtl' || arrowRef.value.offsetLeft > arrowLeft.value ? 0 : arrowRef.value.offsetLeft)) {\n              panelLeft.value = arrowLeft.value;\n            }\n          }\n        } else if (mergedActivePickerIndex.value === 0) {\n          panelLeft.value = 0;\n        }\n      }, {\n        immediate: true\n      });\n      // ============================ Trigger ============================\n      const triggerRef = ref();\n      function triggerOpen(newOpen, index) {\n        if (newOpen) {\n          clearTimeout(triggerRef.value);\n          openRecordsRef.value[index] = true;\n          setMergedActivePickerIndex(index);\n          triggerInnerOpen(newOpen);\n          // Open to reset view date\n          if (!mergedOpen.value) {\n            setViewDate(null, index);\n          }\n        } else if (mergedActivePickerIndex.value === index) {\n          triggerInnerOpen(newOpen);\n          // Clean up async\n          // This makes ref not quick refresh in case user open another input with blur trigger\n          const openRecords = openRecordsRef.value;\n          triggerRef.value = setTimeout(() => {\n            if (openRecords === openRecordsRef.value) {\n              openRecordsRef.value = {};\n            }\n          });\n        }\n      }\n      function triggerOpenAndFocus(index) {\n        triggerOpen(true, index);\n        // Use setTimeout to make sure panel DOM exists\n        setTimeout(() => {\n          const inputRef = [startInputRef, endInputRef][index];\n          if (inputRef.value) {\n            inputRef.value.focus();\n          }\n        }, 0);\n      }\n      function triggerChange(newValue, sourceIndex) {\n        let values = newValue;\n        let startValue = getValue(values, 0);\n        let endValue = getValue(values, 1);\n        const {\n          generateConfig,\n          locale,\n          picker,\n          order,\n          onCalendarChange,\n          allowEmpty,\n          onChange,\n          showTime\n        } = props;\n        // >>>>> Format start & end values\n        if (startValue && endValue && generateConfig.isAfter(startValue, endValue)) {\n          if (\n          // WeekPicker only compare week\n          picker === 'week' && !isSameWeek(generateConfig, locale.locale, startValue, endValue) ||\n          // QuotaPicker only compare week\n          picker === 'quarter' && !isSameQuarter(generateConfig, startValue, endValue) ||\n          // Other non-TimePicker compare date\n          picker !== 'week' && picker !== 'quarter' && picker !== 'time' && !(showTime ? isEqual(generateConfig, startValue, endValue) : isSameDate(generateConfig, startValue, endValue))) {\n            // Clean up end date when start date is after end date\n            if (sourceIndex === 0) {\n              values = [startValue, null];\n              endValue = null;\n            } else {\n              startValue = null;\n              values = [null, endValue];\n            }\n            // Clean up cache since invalidate\n            openRecordsRef.value = {\n              [sourceIndex]: true\n            };\n          } else if (picker !== 'time' || order !== false) {\n            // Reorder when in same date\n            values = reorderValues(values, generateConfig);\n          }\n        }\n        setSelectedValue(values);\n        const startStr = values && values[0] ? formatValue(values[0], {\n          generateConfig,\n          locale,\n          format: formatList.value[0]\n        }) : '';\n        const endStr = values && values[1] ? formatValue(values[1], {\n          generateConfig,\n          locale,\n          format: formatList.value[0]\n        }) : '';\n        if (onCalendarChange) {\n          const info = {\n            range: sourceIndex === 0 ? 'start' : 'end'\n          };\n          onCalendarChange(values, [startStr, endStr], info);\n        }\n        // >>>>> Trigger `onChange` event\n        const canStartValueTrigger = canValueTrigger(startValue, 0, mergedDisabled.value, allowEmpty);\n        const canEndValueTrigger = canValueTrigger(endValue, 1, mergedDisabled.value, allowEmpty);\n        const canTrigger = values === null || canStartValueTrigger && canEndValueTrigger;\n        if (canTrigger) {\n          // Trigger onChange only when value is validate\n          setInnerValue(values);\n          if (onChange && (!isEqual(generateConfig, getValue(mergedValue.value, 0), startValue) || !isEqual(generateConfig, getValue(mergedValue.value, 1), endValue))) {\n            onChange(values, [startStr, endStr]);\n          }\n        }\n        // >>>>> Open picker when\n        // Always open another picker if possible\n        let nextOpenIndex = null;\n        if (sourceIndex === 0 && !mergedDisabled.value[1]) {\n          nextOpenIndex = 1;\n        } else if (sourceIndex === 1 && !mergedDisabled.value[0]) {\n          nextOpenIndex = 0;\n        }\n        if (nextOpenIndex !== null && nextOpenIndex !== mergedActivePickerIndex.value && (!openRecordsRef.value[nextOpenIndex] || !getValue(values, nextOpenIndex)) && getValue(values, sourceIndex)) {\n          // Delay to focus to avoid input blur trigger expired selectedValues\n          triggerOpenAndFocus(nextOpenIndex);\n        } else {\n          triggerOpen(false, sourceIndex);\n        }\n      }\n      const forwardKeydown = e => {\n        if (mergedOpen && operationRef.value && operationRef.value.onKeydown) {\n          // Let popup panel handle keyboard\n          return operationRef.value.onKeydown(e);\n        }\n        /* istanbul ignore next */\n        /* eslint-disable no-lone-blocks */\n        {\n          warning(false, 'Picker not correct forward Keydown operation. Please help to fire issue about this.');\n          return false;\n        }\n      };\n      // ============================= Text ==============================\n      const sharedTextHooksProps = {\n        formatList,\n        generateConfig: toRef(props, 'generateConfig'),\n        locale: toRef(props, 'locale')\n      };\n      const [startValueTexts, firstStartValueText] = useValueTexts(computed(() => getValue(selectedValue.value, 0)), sharedTextHooksProps);\n      const [endValueTexts, firstEndValueText] = useValueTexts(computed(() => getValue(selectedValue.value, 1)), sharedTextHooksProps);\n      const onTextChange = (newText, index) => {\n        const inputDate = parseValue(newText, {\n          locale: props.locale,\n          formatList: formatList.value,\n          generateConfig: props.generateConfig\n        });\n        const disabledFunc = index === 0 ? disabledStartDate : disabledEndDate;\n        if (inputDate && !disabledFunc(inputDate)) {\n          setSelectedValue(updateValues(selectedValue.value, inputDate, index));\n          setViewDate(inputDate, index);\n        }\n      };\n      const [startText, triggerStartTextChange, resetStartText] = useTextValueMapping({\n        valueTexts: startValueTexts,\n        onTextChange: newText => onTextChange(newText, 0)\n      });\n      const [endText, triggerEndTextChange, resetEndText] = useTextValueMapping({\n        valueTexts: endValueTexts,\n        onTextChange: newText => onTextChange(newText, 1)\n      });\n      const [rangeHoverValue, setRangeHoverValue] = useState(null);\n      // ========================== Hover Range ==========================\n      const [hoverRangedValue, setHoverRangedValue] = useState(null);\n      const [startHoverValue, onStartEnter, onStartLeave] = useHoverValue(startText, sharedTextHooksProps);\n      const [endHoverValue, onEndEnter, onEndLeave] = useHoverValue(endText, sharedTextHooksProps);\n      const onDateMouseenter = date => {\n        setHoverRangedValue(updateValues(selectedValue.value, date, mergedActivePickerIndex.value));\n        if (mergedActivePickerIndex.value === 0) {\n          onStartEnter(date);\n        } else {\n          onEndEnter(date);\n        }\n      };\n      const onDateMouseleave = () => {\n        setHoverRangedValue(updateValues(selectedValue.value, null, mergedActivePickerIndex.value));\n        if (mergedActivePickerIndex.value === 0) {\n          onStartLeave();\n        } else {\n          onEndLeave();\n        }\n      };\n      // ============================= Input =============================\n      const getSharedInputHookProps = (index, resetText) => ({\n        forwardKeydown,\n        onBlur: e => {\n          var _a;\n          (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);\n        },\n        isClickOutside: target => !elementsContains([panelDivRef.value, startInputDivRef.value, endInputDivRef.value, containerRef.value], target),\n        onFocus: e => {\n          var _a;\n          setMergedActivePickerIndex(index);\n          (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);\n        },\n        triggerOpen: newOpen => {\n          triggerOpen(newOpen, index);\n        },\n        onSubmit: () => {\n          if (\n          // When user typing disabledDate with keyboard and enter, this value will be empty\n          !selectedValue.value ||\n          // Normal disabled check\n          props.disabledDate && props.disabledDate(selectedValue.value[index])) {\n            return false;\n          }\n          triggerChange(selectedValue.value, index);\n          resetText();\n        },\n        onCancel: () => {\n          triggerOpen(false, index);\n          setSelectedValue(mergedValue.value);\n          resetText();\n        }\n      });\n      const [startInputProps, {\n        focused: startFocused,\n        typing: startTyping\n      }] = usePickerInput(_extends(_extends({}, getSharedInputHookProps(0, resetStartText)), {\n        blurToCancel: needConfirmButton,\n        open: startOpen,\n        value: startText,\n        onKeydown: (e, preventDefault) => {\n          var _a;\n          (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e, preventDefault);\n        }\n      }));\n      const [endInputProps, {\n        focused: endFocused,\n        typing: endTyping\n      }] = usePickerInput(_extends(_extends({}, getSharedInputHookProps(1, resetEndText)), {\n        blurToCancel: needConfirmButton,\n        open: endOpen,\n        value: endText,\n        onKeydown: (e, preventDefault) => {\n          var _a;\n          (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e, preventDefault);\n        }\n      }));\n      // ========================== Click Picker ==========================\n      const onPickerClick = e => {\n        var _a;\n        // When click inside the picker & outside the picker's input elements\n        // the panel should still be opened\n        (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);\n        if (!mergedOpen.value && !startInputRef.value.contains(e.target) && !endInputRef.value.contains(e.target)) {\n          if (!mergedDisabled.value[0]) {\n            triggerOpenAndFocus(0);\n          } else if (!mergedDisabled.value[1]) {\n            triggerOpenAndFocus(1);\n          }\n        }\n      };\n      const onPickerMousedown = e => {\n        var _a;\n        // shouldn't affect input elements if picker is active\n        (_a = props.onMousedown) === null || _a === void 0 ? void 0 : _a.call(props, e);\n        if (mergedOpen.value && (startFocused.value || endFocused.value) && !startInputRef.value.contains(e.target) && !endInputRef.value.contains(e.target)) {\n          e.preventDefault();\n        }\n      };\n      // ============================= Sync ==============================\n      // Close should sync back with text value\n      const startStr = computed(() => {\n        var _a;\n        return ((_a = mergedValue.value) === null || _a === void 0 ? void 0 : _a[0]) ? formatValue(mergedValue.value[0], {\n          locale: props.locale,\n          format: 'YYYYMMDDHHmmss',\n          generateConfig: props.generateConfig\n        }) : '';\n      });\n      const endStr = computed(() => {\n        var _a;\n        return ((_a = mergedValue.value) === null || _a === void 0 ? void 0 : _a[1]) ? formatValue(mergedValue.value[1], {\n          locale: props.locale,\n          format: 'YYYYMMDDHHmmss',\n          generateConfig: props.generateConfig\n        }) : '';\n      });\n      watch([mergedOpen, startValueTexts, endValueTexts], () => {\n        if (!mergedOpen.value) {\n          setSelectedValue(mergedValue.value);\n          if (!startValueTexts.value.length || startValueTexts.value[0] === '') {\n            triggerStartTextChange('');\n          } else if (firstStartValueText.value !== startText.value) {\n            resetStartText();\n          }\n          if (!endValueTexts.value.length || endValueTexts.value[0] === '') {\n            triggerEndTextChange('');\n          } else if (firstEndValueText.value !== endText.value) {\n            resetEndText();\n          }\n        }\n      });\n      // Sync innerValue with control mode\n      watch([startStr, endStr], () => {\n        setSelectedValue(mergedValue.value);\n      });\n      // ============================ Warning ============================\n      if (process.env.NODE_ENV !== 'production') {\n        watchEffect(() => {\n          const {\n            value,\n            disabled\n          } = props;\n          if (value && Array.isArray(disabled) && (getValue(disabled, 0) && !getValue(value, 0) || getValue(disabled, 1) && !getValue(value, 1))) {\n            warning(false, '`disabled` should not set with empty `value`. You should set `allowEmpty` or `value` instead.');\n          }\n        });\n      }\n      expose({\n        focus: () => {\n          if (startInputRef.value) {\n            startInputRef.value.focus();\n          }\n        },\n        blur: () => {\n          if (startInputRef.value) {\n            startInputRef.value.blur();\n          }\n          if (endInputRef.value) {\n            endInputRef.value.blur();\n          }\n        }\n      });\n      // ============================= Panel =============================\n      const panelHoverRangedValue = computed(() => {\n        if (mergedOpen.value && hoverRangedValue.value && hoverRangedValue.value[0] && hoverRangedValue.value[1] && props.generateConfig.isAfter(hoverRangedValue.value[1], hoverRangedValue.value[0])) {\n          return hoverRangedValue.value;\n        } else {\n          return null;\n        }\n      });\n      function renderPanel() {\n        let panelPosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        let panelProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const {\n          generateConfig,\n          showTime,\n          dateRender,\n          direction,\n          disabledTime,\n          prefixCls,\n          locale\n        } = props;\n        let panelShowTime = showTime;\n        if (showTime && typeof showTime === 'object' && showTime.defaultValue) {\n          const timeDefaultValues = showTime.defaultValue;\n          panelShowTime = _extends(_extends({}, showTime), {\n            defaultValue: getValue(timeDefaultValues, mergedActivePickerIndex.value) || undefined\n          });\n        }\n        let panelDateRender = null;\n        if (dateRender) {\n          panelDateRender = _ref2 => {\n            let {\n              current: date,\n              today\n            } = _ref2;\n            return dateRender({\n              current: date,\n              today,\n              info: {\n                range: mergedActivePickerIndex.value ? 'end' : 'start'\n              }\n            });\n          };\n        }\n        return _createVNode(RangeContextProvider, {\n          \"value\": {\n            inRange: true,\n            panelPosition,\n            rangedValue: rangeHoverValue.value || selectedValue.value,\n            hoverRangedValue: panelHoverRangedValue.value\n          }\n        }, {\n          default: () => [_createVNode(PickerPanel, _objectSpread(_objectSpread(_objectSpread({}, props), panelProps), {}, {\n            \"dateRender\": panelDateRender,\n            \"showTime\": panelShowTime,\n            \"mode\": mergedModes.value[mergedActivePickerIndex.value],\n            \"generateConfig\": generateConfig,\n            \"style\": undefined,\n            \"direction\": direction,\n            \"disabledDate\": mergedActivePickerIndex.value === 0 ? disabledStartDate : disabledEndDate,\n            \"disabledTime\": date => {\n              if (disabledTime) {\n                return disabledTime(date, mergedActivePickerIndex.value === 0 ? 'start' : 'end');\n              }\n              return false;\n            },\n            \"class\": classNames({\n              [`${prefixCls}-panel-focused`]: mergedActivePickerIndex.value === 0 ? !startTyping.value : !endTyping.value\n            }),\n            \"value\": getValue(selectedValue.value, mergedActivePickerIndex.value),\n            \"locale\": locale,\n            \"tabIndex\": -1,\n            \"onPanelChange\": (date, newMode) => {\n              // clear hover value when panel change\n              if (mergedActivePickerIndex.value === 0) {\n                onStartLeave(true);\n              }\n              if (mergedActivePickerIndex.value === 1) {\n                onEndLeave(true);\n              }\n              triggerModesChange(updateValues(mergedModes.value, newMode, mergedActivePickerIndex.value), updateValues(selectedValue.value, date, mergedActivePickerIndex.value));\n              let viewDate = date;\n              if (panelPosition === 'right' && mergedModes.value[mergedActivePickerIndex.value] === newMode) {\n                viewDate = getClosingViewDate(viewDate, newMode, generateConfig, -1);\n              }\n              setViewDate(viewDate, mergedActivePickerIndex.value);\n            },\n            \"onOk\": null,\n            \"onSelect\": undefined,\n            \"onChange\": undefined,\n            \"defaultValue\": mergedActivePickerIndex.value === 0 ? getValue(selectedValue.value, 1) : getValue(selectedValue.value, 0)\n          }), null)]\n        });\n      }\n      const onContextSelect = (date, type) => {\n        const values = updateValues(selectedValue.value, date, mergedActivePickerIndex.value);\n        if (type === 'submit' || type !== 'key' && !needConfirmButton.value) {\n          // triggerChange will also update selected values\n          triggerChange(values, mergedActivePickerIndex.value);\n          // clear hover value style\n          if (mergedActivePickerIndex.value === 0) {\n            onStartLeave();\n          } else {\n            onEndLeave();\n          }\n        } else {\n          setSelectedValue(values);\n        }\n      };\n      useProvidePanel({\n        operationRef,\n        hideHeader: computed(() => props.picker === 'time'),\n        onDateMouseenter,\n        onDateMouseleave,\n        hideRanges: computed(() => true),\n        onSelect: onContextSelect,\n        open: mergedOpen\n      });\n      return () => {\n        const {\n          prefixCls = 'rc-picker',\n          id,\n          popupStyle,\n          dropdownClassName,\n          transitionName,\n          dropdownAlign,\n          getPopupContainer,\n          generateConfig,\n          locale,\n          placeholder,\n          autofocus,\n          picker = 'date',\n          showTime,\n          separator = '~',\n          disabledDate,\n          panelRender,\n          allowClear,\n          suffixIcon,\n          clearIcon,\n          inputReadOnly,\n          renderExtraFooter,\n          onMouseenter,\n          onMouseleave,\n          onMouseup,\n          onOk,\n          components,\n          direction,\n          autocomplete = 'off'\n        } = props;\n        const arrowPositionStyle = direction === 'rtl' ? {\n          right: `${arrowLeft.value}px`\n        } : {\n          left: `${arrowLeft.value}px`\n        };\n        function renderPanels() {\n          let panels;\n          const extraNode = getExtraFooter(prefixCls, mergedModes.value[mergedActivePickerIndex.value], renderExtraFooter);\n          const rangesNode = getRanges({\n            prefixCls,\n            components,\n            needConfirmButton: needConfirmButton.value,\n            okDisabled: !getValue(selectedValue.value, mergedActivePickerIndex.value) || disabledDate && disabledDate(selectedValue.value[mergedActivePickerIndex.value]),\n            locale,\n            onOk: () => {\n              if (getValue(selectedValue.value, mergedActivePickerIndex.value)) {\n                // triggerChangeOld(selectedValue.value);\n                triggerChange(selectedValue.value, mergedActivePickerIndex.value);\n                if (onOk) {\n                  onOk(selectedValue.value);\n                }\n              }\n            }\n          });\n          if (picker !== 'time' && !showTime) {\n            const viewDate = mergedActivePickerIndex.value === 0 ? startViewDate.value : endViewDate.value;\n            const nextViewDate = getClosingViewDate(viewDate, picker, generateConfig);\n            const currentMode = mergedModes.value[mergedActivePickerIndex.value];\n            const showDoublePanel = currentMode === picker;\n            const leftPanel = renderPanel(showDoublePanel ? 'left' : false, {\n              pickerValue: viewDate,\n              onPickerValueChange: newViewDate => {\n                setViewDate(newViewDate, mergedActivePickerIndex.value);\n              }\n            });\n            const rightPanel = renderPanel('right', {\n              pickerValue: nextViewDate,\n              onPickerValueChange: newViewDate => {\n                setViewDate(getClosingViewDate(newViewDate, picker, generateConfig, -1), mergedActivePickerIndex.value);\n              }\n            });\n            if (direction === 'rtl') {\n              panels = _createVNode(_Fragment, null, [rightPanel, showDoublePanel && leftPanel]);\n            } else {\n              panels = _createVNode(_Fragment, null, [leftPanel, showDoublePanel && rightPanel]);\n            }\n          } else {\n            panels = renderPanel();\n          }\n          let mergedNodes = _createVNode(\"div\", {\n            \"class\": `${prefixCls}-panel-layout`\n          }, [_createVNode(PresetPanel, {\n            \"prefixCls\": prefixCls,\n            \"presets\": presetList.value,\n            \"onClick\": nextValue => {\n              triggerChange(nextValue, null);\n              triggerOpen(false, mergedActivePickerIndex.value);\n            },\n            \"onHover\": hoverValue => {\n              setRangeHoverValue(hoverValue);\n            }\n          }, null), _createVNode(\"div\", null, [_createVNode(\"div\", {\n            \"class\": `${prefixCls}-panels`\n          }, [panels]), (extraNode || rangesNode) && _createVNode(\"div\", {\n            \"class\": `${prefixCls}-footer`\n          }, [extraNode, rangesNode])])]);\n          if (panelRender) {\n            mergedNodes = panelRender(mergedNodes);\n          }\n          return _createVNode(\"div\", {\n            \"class\": `${prefixCls}-panel-container`,\n            \"style\": {\n              marginLeft: `${panelLeft.value}px`\n            },\n            \"ref\": panelDivRef,\n            \"onMousedown\": e => {\n              e.preventDefault();\n            }\n          }, [mergedNodes]);\n        }\n        const rangePanel = _createVNode(\"div\", {\n          \"class\": classNames(`${prefixCls}-range-wrapper`, `${prefixCls}-${picker}-range-wrapper`),\n          \"style\": {\n            minWidth: `${popupMinWidth.value}px`\n          }\n        }, [_createVNode(\"div\", {\n          \"ref\": arrowRef,\n          \"class\": `${prefixCls}-range-arrow`,\n          \"style\": arrowPositionStyle\n        }, null), renderPanels()]);\n        // ============================= Icons =============================\n        let suffixNode;\n        if (suffixIcon) {\n          suffixNode = _createVNode(\"span\", {\n            \"class\": `${prefixCls}-suffix`\n          }, [suffixIcon]);\n        }\n        let clearNode;\n        if (allowClear && (getValue(mergedValue.value, 0) && !mergedDisabled.value[0] || getValue(mergedValue.value, 1) && !mergedDisabled.value[1])) {\n          clearNode = _createVNode(\"span\", {\n            \"onMousedown\": e => {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            \"onMouseup\": e => {\n              e.preventDefault();\n              e.stopPropagation();\n              let values = mergedValue.value;\n              if (!mergedDisabled.value[0]) {\n                values = updateValues(values, null, 0);\n              }\n              if (!mergedDisabled.value[1]) {\n                values = updateValues(values, null, 1);\n              }\n              triggerChange(values, null);\n              triggerOpen(false, mergedActivePickerIndex.value);\n            },\n            \"class\": `${prefixCls}-clear`\n          }, [clearIcon || _createVNode(\"span\", {\n            \"class\": `${prefixCls}-clear-btn`\n          }, null)]);\n        }\n        const inputSharedProps = {\n          size: getInputSize(picker, formatList.value[0], generateConfig)\n        };\n        let activeBarLeft = 0;\n        let activeBarWidth = 0;\n        if (startInputDivRef.value && endInputDivRef.value && separatorRef.value) {\n          if (mergedActivePickerIndex.value === 0) {\n            activeBarWidth = startInputDivRef.value.offsetWidth;\n          } else {\n            activeBarLeft = arrowLeft.value;\n            activeBarWidth = endInputDivRef.value.offsetWidth;\n          }\n        }\n        const activeBarPositionStyle = direction === 'rtl' ? {\n          right: `${activeBarLeft}px`\n        } : {\n          left: `${activeBarLeft}px`\n        };\n        // ============================ Return =============================\n        return _createVNode(\"div\", _objectSpread({\n          \"ref\": containerRef,\n          \"class\": classNames(prefixCls, `${prefixCls}-range`, attrs.class, {\n            [`${prefixCls}-disabled`]: mergedDisabled.value[0] && mergedDisabled.value[1],\n            [`${prefixCls}-focused`]: mergedActivePickerIndex.value === 0 ? startFocused.value : endFocused.value,\n            [`${prefixCls}-rtl`]: direction === 'rtl'\n          }),\n          \"style\": attrs.style,\n          \"onClick\": onPickerClick,\n          \"onMouseenter\": onMouseenter,\n          \"onMouseleave\": onMouseleave,\n          \"onMousedown\": onPickerMousedown,\n          \"onMouseup\": onMouseup\n        }, getDataOrAriaProps(props)), [_createVNode(\"div\", {\n          \"class\": classNames(`${prefixCls}-input`, {\n            [`${prefixCls}-input-active`]: mergedActivePickerIndex.value === 0,\n            [`${prefixCls}-input-placeholder`]: !!startHoverValue.value\n          }),\n          \"ref\": startInputDivRef\n        }, [_createVNode(\"input\", _objectSpread(_objectSpread(_objectSpread({\n          \"id\": id,\n          \"disabled\": mergedDisabled.value[0],\n          \"readonly\": inputReadOnly || typeof formatList.value[0] === 'function' || !startTyping.value,\n          \"value\": startHoverValue.value || startText.value,\n          \"onInput\": e => {\n            triggerStartTextChange(e.target.value);\n          },\n          \"autofocus\": autofocus,\n          \"placeholder\": getValue(placeholder, 0) || '',\n          \"ref\": startInputRef\n        }, startInputProps.value), inputSharedProps), {}, {\n          \"autocomplete\": autocomplete\n        }), null)]), _createVNode(\"div\", {\n          \"class\": `${prefixCls}-range-separator`,\n          \"ref\": separatorRef\n        }, [separator]), _createVNode(\"div\", {\n          \"class\": classNames(`${prefixCls}-input`, {\n            [`${prefixCls}-input-active`]: mergedActivePickerIndex.value === 1,\n            [`${prefixCls}-input-placeholder`]: !!endHoverValue.value\n          }),\n          \"ref\": endInputDivRef\n        }, [_createVNode(\"input\", _objectSpread(_objectSpread(_objectSpread({\n          \"disabled\": mergedDisabled.value[1],\n          \"readonly\": inputReadOnly || typeof formatList.value[0] === 'function' || !endTyping.value,\n          \"value\": endHoverValue.value || endText.value,\n          \"onInput\": e => {\n            triggerEndTextChange(e.target.value);\n          },\n          \"placeholder\": getValue(placeholder, 1) || '',\n          \"ref\": endInputRef\n        }, endInputProps.value), inputSharedProps), {}, {\n          \"autocomplete\": autocomplete\n        }), null)]), _createVNode(\"div\", {\n          \"class\": `${prefixCls}-active-bar`,\n          \"style\": _extends(_extends({}, activeBarPositionStyle), {\n            width: `${activeBarWidth}px`,\n            position: 'absolute'\n          })\n        }, null), suffixNode, clearNode, _createVNode(PickerTrigger, {\n          \"visible\": mergedOpen.value,\n          \"popupStyle\": popupStyle,\n          \"prefixCls\": prefixCls,\n          \"dropdownClassName\": dropdownClassName,\n          \"dropdownAlign\": dropdownAlign,\n          \"getPopupContainer\": getPopupContainer,\n          \"transitionName\": transitionName,\n          \"range\": true,\n          \"direction\": direction\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"style\": {\n              pointerEvents: 'none',\n              position: 'absolute',\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0\n            }\n          }, null)],\n          popupElement: () => rangePanel\n        })]);\n      };\n    }\n  });\n}\nconst InterRangerPicker = RangerPicker();\nexport default InterRangerPicker;","map":{"version":3,"names":["_objectSpread","_extends","resolveDirective","_resolveDirective","Fragment","_Fragment","createVNode","_createVNode","PickerTrigger","PickerPanel","usePickerInput","PresetPanel","getDataOrAriaProps","toArray","getValue","updateValues","getDefaultFormat","getInputSize","elementsContains","useProvidePanel","isEqual","getClosingViewDate","isSameDate","isSameWeek","isSameQuarter","formatValue","parseValue","useValueTexts","useTextValueMapping","usePresets","RangeContextProvider","useRangeDisabled","getExtraFooter","getRanges","useRangeViewDates","useHoverValue","computed","defineComponent","ref","toRef","watch","watchEffect","useMergedState","warning","useState","classNames","legacyPropsWarning","useElementSize","reorderValues","values","generateConfig","isAfter","canValueTrigger","value","index","disabled","allowEmpty","RangerPicker","name","inheritAttrs","props","setup","_ref","attrs","expose","needConfirmButton","picker","showTime","presets","ranges","presetList","openRecordsRef","containerRef","panelDivRef","startInputDivRef","endInputDivRef","separatorRef","startInputRef","endInputRef","arrowRef","process","env","NODE_ENV","formatList","format","use12Hours","mergedActivePickerIndex","setMergedActivePickerIndex","operationRef","mergedDisabled","Array","isArray","mergedValue","setInnerValue","defaultValue","postState","order","startViewDate","endViewDate","setViewDate","defaultDates","defaultPickerValue","selectedValue","setSelectedValue","postValues","i","getNow","mergedModes","setInnerModes","triggerModesChange","modes","_a","onPanelChange","call","disabledStartDate","disabledEndDate","locale","disabledDate","mergedOpen","triggerInnerOpen","defaultOpen","postOpen","onChange","newOpen","onOpenChange","onClose","startOpen","endOpen","panelLeft","arrowLeft","popupMinWidth","width","containerWidth","panelDivWidth","arrowWidth","startInputDivWidth","separatorWidth","direction","offsetLeft","immediate","triggerRef","triggerOpen","clearTimeout","openRecords","setTimeout","triggerOpenAndFocus","inputRef","focus","triggerChange","newValue","sourceIndex","startValue","endValue","onCalendarChange","startStr","endStr","info","range","canStartValueTrigger","canEndValueTrigger","canTrigger","nextOpenIndex","forwardKeydown","e","onKeydown","sharedTextHooksProps","startValueTexts","firstStartValueText","endValueTexts","firstEndValueText","onTextChange","newText","inputDate","disabledFunc","startText","triggerStartTextChange","resetStartText","valueTexts","endText","triggerEndTextChange","resetEndText","rangeHoverValue","setRangeHoverValue","hoverRangedValue","setHoverRangedValue","startHoverValue","onStartEnter","onStartLeave","endHoverValue","onEndEnter","onEndLeave","onDateMouseenter","date","onDateMouseleave","getSharedInputHookProps","resetText","onBlur","isClickOutside","target","onFocus","onSubmit","onCancel","startInputProps","focused","startFocused","typing","startTyping","blurToCancel","open","preventDefault","endInputProps","endFocused","endTyping","onPickerClick","onClick","contains","onPickerMousedown","onMousedown","length","blur","panelHoverRangedValue","renderPanel","panelPosition","arguments","undefined","panelProps","dateRender","disabledTime","prefixCls","panelShowTime","timeDefaultValues","panelDateRender","_ref2","current","today","inRange","rangedValue","default","newMode","viewDate","onContextSelect","type","hideHeader","hideRanges","onSelect","id","popupStyle","dropdownClassName","transitionName","dropdownAlign","getPopupContainer","placeholder","autofocus","separator","panelRender","allowClear","suffixIcon","clearIcon","inputReadOnly","renderExtraFooter","onMouseenter","onMouseleave","onMouseup","onOk","components","autocomplete","arrowPositionStyle","right","left","renderPanels","panels","extraNode","rangesNode","okDisabled","nextViewDate","currentMode","showDoublePanel","leftPanel","pickerValue","onPickerValueChange","newViewDate","rightPanel","mergedNodes","nextValue","hoverValue","marginLeft","rangePanel","minWidth","suffixNode","clearNode","stopPropagation","inputSharedProps","size","activeBarLeft","activeBarWidth","offsetWidth","activeBarPositionStyle","class","style","position","pointerEvents","top","bottom","popupElement","InterRangerPicker"],"sources":["C:/GitHubWarehouse/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/vc-picker/RangePicker.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\r\nimport PickerTrigger from './PickerTrigger';\r\nimport PickerPanel from './PickerPanel';\r\nimport usePickerInput from './hooks/usePickerInput';\r\nimport PresetPanel from './PresetPanel';\r\nimport getDataOrAriaProps, { toArray, getValue, updateValues } from './utils/miscUtil';\r\nimport { getDefaultFormat, getInputSize, elementsContains } from './utils/uiUtil';\r\nimport { useProvidePanel } from './PanelContext';\r\nimport { isEqual, getClosingViewDate, isSameDate, isSameWeek, isSameQuarter, formatValue, parseValue } from './utils/dateUtil';\r\nimport useValueTexts from './hooks/useValueTexts';\r\nimport useTextValueMapping from './hooks/useTextValueMapping';\r\nimport usePresets from './hooks/usePresets';\r\nimport { RangeContextProvider } from './RangeContext';\r\nimport useRangeDisabled from './hooks/useRangeDisabled';\r\nimport getExtraFooter from './utils/getExtraFooter';\r\nimport getRanges from './utils/getRanges';\r\nimport useRangeViewDates from './hooks/useRangeViewDates';\r\nimport useHoverValue from './hooks/useHoverValue';\r\nimport { computed, defineComponent, ref, toRef, watch, watchEffect } from 'vue';\r\nimport useMergedState from '../_util/hooks/useMergedState';\r\nimport { warning } from '../vc-util/warning';\r\nimport useState from '../_util/hooks/useState';\r\nimport classNames from '../_util/classNames';\r\nimport { legacyPropsWarning } from './utils/warnUtil';\r\nimport { useElementSize } from '../_util/hooks/_vueuse/useElementSize';\r\nfunction reorderValues(values, generateConfig) {\r\n  if (values && values[0] && values[1] && generateConfig.isAfter(values[0], values[1])) {\r\n    return [values[1], values[0]];\r\n  }\r\n  return values;\r\n}\r\nfunction canValueTrigger(value, index, disabled, allowEmpty) {\r\n  if (value) {\r\n    return true;\r\n  }\r\n  if (allowEmpty && allowEmpty[index]) {\r\n    return true;\r\n  }\r\n  if (disabled[(index + 1) % 2]) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction RangerPicker() {\r\n  return defineComponent({\r\n    name: 'RangerPicker',\r\n    inheritAttrs: false,\r\n    props: ['prefixCls', 'id', 'popupStyle', 'dropdownClassName', 'transitionName', 'dropdownAlign', 'getPopupContainer', 'generateConfig', 'locale', 'placeholder', 'autofocus', 'disabled', 'format', 'picker', 'showTime', 'showNow', 'showHour', 'showMinute', 'showSecond', 'use12Hours', 'separator', 'value', 'defaultValue', 'defaultPickerValue', 'open', 'defaultOpen', 'disabledDate', 'disabledTime', 'dateRender', 'panelRender', 'ranges', 'allowEmpty', 'allowClear', 'suffixIcon', 'clearIcon', 'pickerRef', 'inputReadOnly', 'mode', 'renderExtraFooter', 'onChange', 'onOpenChange', 'onPanelChange', 'onCalendarChange', 'onFocus', 'onBlur', 'onMousedown', 'onMouseup', 'onMouseenter', 'onMouseleave', 'onClick', 'onOk', 'onKeydown', 'components', 'order', 'direction', 'activePickerIndex', 'autocomplete', 'minuteStep', 'hourStep', 'secondStep', 'hideDisabledOptions', 'disabledMinutes', 'presets'],\r\n    setup(props, _ref) {\r\n      let {\r\n        attrs,\r\n        expose\r\n      } = _ref;\r\n      const needConfirmButton = computed(() => props.picker === 'date' && !!props.showTime || props.picker === 'time');\r\n      const presets = computed(() => props.presets);\r\n      const ranges = computed(() => props.ranges);\r\n      const presetList = usePresets(presets, ranges);\r\n      // We record oqqpened status here in case repeat open with picker\r\n      const openRecordsRef = ref({});\r\n      const containerRef = ref(null);\r\n      const panelDivRef = ref(null);\r\n      const startInputDivRef = ref(null);\r\n      const endInputDivRef = ref(null);\r\n      const separatorRef = ref(null);\r\n      const startInputRef = ref(null);\r\n      const endInputRef = ref(null);\r\n      const arrowRef = ref(null);\r\n      // ============================ Warning ============================\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        legacyPropsWarning(props);\r\n      }\r\n      // ============================= Misc ==============================\r\n      const formatList = computed(() => toArray(getDefaultFormat(props.format, props.picker, props.showTime, props.use12Hours)));\r\n      // Active picker\r\n      const [mergedActivePickerIndex, setMergedActivePickerIndex] = useMergedState(0, {\r\n        value: toRef(props, 'activePickerIndex')\r\n      });\r\n      // Operation ref\r\n      const operationRef = ref(null);\r\n      const mergedDisabled = computed(() => {\r\n        const {\r\n          disabled\r\n        } = props;\r\n        if (Array.isArray(disabled)) {\r\n          return disabled;\r\n        }\r\n        return [disabled || false, disabled || false];\r\n      });\r\n      // ============================= Value =============================\r\n      const [mergedValue, setInnerValue] = useMergedState(null, {\r\n        value: toRef(props, 'value'),\r\n        defaultValue: props.defaultValue,\r\n        postState: values => props.picker === 'time' && !props.order ? values : reorderValues(values, props.generateConfig)\r\n      });\r\n      // =========================== View Date ===========================\r\n      // Config view panel\r\n      const [startViewDate, endViewDate, setViewDate] = useRangeViewDates({\r\n        values: mergedValue,\r\n        picker: toRef(props, 'picker'),\r\n        defaultDates: props.defaultPickerValue,\r\n        generateConfig: toRef(props, 'generateConfig')\r\n      });\r\n      // ========================= Select Values =========================\r\n      const [selectedValue, setSelectedValue] = useMergedState(mergedValue.value, {\r\n        postState: values => {\r\n          let postValues = values;\r\n          if (mergedDisabled.value[0] && mergedDisabled.value[1]) {\r\n            return postValues;\r\n          }\r\n          // Fill disabled unit\r\n          for (let i = 0; i < 2; i += 1) {\r\n            if (mergedDisabled.value[i] && !getValue(postValues, i) && !getValue(props.allowEmpty, i)) {\r\n              postValues = updateValues(postValues, props.generateConfig.getNow(), i);\r\n            }\r\n          }\r\n          return postValues;\r\n        }\r\n      });\r\n      // ============================= Modes =============================\r\n      const [mergedModes, setInnerModes] = useMergedState([props.picker, props.picker], {\r\n        value: toRef(props, 'mode')\r\n      });\r\n      watch(() => props.picker, () => {\r\n        setInnerModes([props.picker, props.picker]);\r\n      });\r\n      const triggerModesChange = (modes, values) => {\r\n        var _a;\r\n        setInnerModes(modes);\r\n        (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, values, modes);\r\n      };\r\n      // ========================= Disable Date ==========================\r\n      const [disabledStartDate, disabledEndDate] = useRangeDisabled({\r\n        picker: toRef(props, 'picker'),\r\n        selectedValue,\r\n        locale: toRef(props, 'locale'),\r\n        disabled: mergedDisabled,\r\n        disabledDate: toRef(props, 'disabledDate'),\r\n        generateConfig: toRef(props, 'generateConfig')\r\n      }, openRecordsRef);\r\n      // ============================= Open ==============================\r\n      const [mergedOpen, triggerInnerOpen] = useMergedState(false, {\r\n        value: toRef(props, 'open'),\r\n        defaultValue: props.defaultOpen,\r\n        postState: postOpen => mergedDisabled.value[mergedActivePickerIndex.value] ? false : postOpen,\r\n        onChange: newOpen => {\r\n          var _a;\r\n          (_a = props.onOpenChange) === null || _a === void 0 ? void 0 : _a.call(props, newOpen);\r\n          if (!newOpen && operationRef.value && operationRef.value.onClose) {\r\n            operationRef.value.onClose();\r\n          }\r\n        }\r\n      });\r\n      const startOpen = computed(() => mergedOpen.value && mergedActivePickerIndex.value === 0);\r\n      const endOpen = computed(() => mergedOpen.value && mergedActivePickerIndex.value === 1);\r\n      const panelLeft = ref(0);\r\n      const arrowLeft = ref(0);\r\n      // ============================= Popup =============================\r\n      // Popup min width\r\n      const popupMinWidth = ref(0);\r\n      const {\r\n        width: containerWidth\r\n      } = useElementSize(containerRef);\r\n      watch([mergedOpen, containerWidth], () => {\r\n        if (!mergedOpen.value && containerRef.value) {\r\n          popupMinWidth.value = containerWidth.value;\r\n        }\r\n      });\r\n      const {\r\n        width: panelDivWidth\r\n      } = useElementSize(panelDivRef);\r\n      const {\r\n        width: arrowWidth\r\n      } = useElementSize(arrowRef);\r\n      const {\r\n        width: startInputDivWidth\r\n      } = useElementSize(startInputDivRef);\r\n      const {\r\n        width: separatorWidth\r\n      } = useElementSize(separatorRef);\r\n      watch([mergedActivePickerIndex, mergedOpen, panelDivWidth, arrowWidth, startInputDivWidth, separatorWidth, () => props.direction], () => {\r\n        arrowLeft.value = 0;\r\n        if (mergedOpen.value && mergedActivePickerIndex.value) {\r\n          if (startInputDivRef.value && separatorRef.value && panelDivRef.value) {\r\n            arrowLeft.value = startInputDivWidth.value + separatorWidth.value;\r\n            if (panelDivWidth.value && arrowWidth.value && arrowLeft.value > panelDivWidth.value - arrowWidth.value - (props.direction === 'rtl' || arrowRef.value.offsetLeft > arrowLeft.value ? 0 : arrowRef.value.offsetLeft)) {\r\n              panelLeft.value = arrowLeft.value;\r\n            }\r\n          }\r\n        } else if (mergedActivePickerIndex.value === 0) {\r\n          panelLeft.value = 0;\r\n        }\r\n      }, {\r\n        immediate: true\r\n      });\r\n      // ============================ Trigger ============================\r\n      const triggerRef = ref();\r\n      function triggerOpen(newOpen, index) {\r\n        if (newOpen) {\r\n          clearTimeout(triggerRef.value);\r\n          openRecordsRef.value[index] = true;\r\n          setMergedActivePickerIndex(index);\r\n          triggerInnerOpen(newOpen);\r\n          // Open to reset view date\r\n          if (!mergedOpen.value) {\r\n            setViewDate(null, index);\r\n          }\r\n        } else if (mergedActivePickerIndex.value === index) {\r\n          triggerInnerOpen(newOpen);\r\n          // Clean up async\r\n          // This makes ref not quick refresh in case user open another input with blur trigger\r\n          const openRecords = openRecordsRef.value;\r\n          triggerRef.value = setTimeout(() => {\r\n            if (openRecords === openRecordsRef.value) {\r\n              openRecordsRef.value = {};\r\n            }\r\n          });\r\n        }\r\n      }\r\n      function triggerOpenAndFocus(index) {\r\n        triggerOpen(true, index);\r\n        // Use setTimeout to make sure panel DOM exists\r\n        setTimeout(() => {\r\n          const inputRef = [startInputRef, endInputRef][index];\r\n          if (inputRef.value) {\r\n            inputRef.value.focus();\r\n          }\r\n        }, 0);\r\n      }\r\n      function triggerChange(newValue, sourceIndex) {\r\n        let values = newValue;\r\n        let startValue = getValue(values, 0);\r\n        let endValue = getValue(values, 1);\r\n        const {\r\n          generateConfig,\r\n          locale,\r\n          picker,\r\n          order,\r\n          onCalendarChange,\r\n          allowEmpty,\r\n          onChange,\r\n          showTime\r\n        } = props;\r\n        // >>>>> Format start & end values\r\n        if (startValue && endValue && generateConfig.isAfter(startValue, endValue)) {\r\n          if (\r\n          // WeekPicker only compare week\r\n          picker === 'week' && !isSameWeek(generateConfig, locale.locale, startValue, endValue) ||\r\n          // QuotaPicker only compare week\r\n          picker === 'quarter' && !isSameQuarter(generateConfig, startValue, endValue) ||\r\n          // Other non-TimePicker compare date\r\n          picker !== 'week' && picker !== 'quarter' && picker !== 'time' && !(showTime ? isEqual(generateConfig, startValue, endValue) : isSameDate(generateConfig, startValue, endValue))) {\r\n            // Clean up end date when start date is after end date\r\n            if (sourceIndex === 0) {\r\n              values = [startValue, null];\r\n              endValue = null;\r\n            } else {\r\n              startValue = null;\r\n              values = [null, endValue];\r\n            }\r\n            // Clean up cache since invalidate\r\n            openRecordsRef.value = {\r\n              [sourceIndex]: true\r\n            };\r\n          } else if (picker !== 'time' || order !== false) {\r\n            // Reorder when in same date\r\n            values = reorderValues(values, generateConfig);\r\n          }\r\n        }\r\n        setSelectedValue(values);\r\n        const startStr = values && values[0] ? formatValue(values[0], {\r\n          generateConfig,\r\n          locale,\r\n          format: formatList.value[0]\r\n        }) : '';\r\n        const endStr = values && values[1] ? formatValue(values[1], {\r\n          generateConfig,\r\n          locale,\r\n          format: formatList.value[0]\r\n        }) : '';\r\n        if (onCalendarChange) {\r\n          const info = {\r\n            range: sourceIndex === 0 ? 'start' : 'end'\r\n          };\r\n          onCalendarChange(values, [startStr, endStr], info);\r\n        }\r\n        // >>>>> Trigger `onChange` event\r\n        const canStartValueTrigger = canValueTrigger(startValue, 0, mergedDisabled.value, allowEmpty);\r\n        const canEndValueTrigger = canValueTrigger(endValue, 1, mergedDisabled.value, allowEmpty);\r\n        const canTrigger = values === null || canStartValueTrigger && canEndValueTrigger;\r\n        if (canTrigger) {\r\n          // Trigger onChange only when value is validate\r\n          setInnerValue(values);\r\n          if (onChange && (!isEqual(generateConfig, getValue(mergedValue.value, 0), startValue) || !isEqual(generateConfig, getValue(mergedValue.value, 1), endValue))) {\r\n            onChange(values, [startStr, endStr]);\r\n          }\r\n        }\r\n        // >>>>> Open picker when\r\n        // Always open another picker if possible\r\n        let nextOpenIndex = null;\r\n        if (sourceIndex === 0 && !mergedDisabled.value[1]) {\r\n          nextOpenIndex = 1;\r\n        } else if (sourceIndex === 1 && !mergedDisabled.value[0]) {\r\n          nextOpenIndex = 0;\r\n        }\r\n        if (nextOpenIndex !== null && nextOpenIndex !== mergedActivePickerIndex.value && (!openRecordsRef.value[nextOpenIndex] || !getValue(values, nextOpenIndex)) && getValue(values, sourceIndex)) {\r\n          // Delay to focus to avoid input blur trigger expired selectedValues\r\n          triggerOpenAndFocus(nextOpenIndex);\r\n        } else {\r\n          triggerOpen(false, sourceIndex);\r\n        }\r\n      }\r\n      const forwardKeydown = e => {\r\n        if (mergedOpen && operationRef.value && operationRef.value.onKeydown) {\r\n          // Let popup panel handle keyboard\r\n          return operationRef.value.onKeydown(e);\r\n        }\r\n        /* istanbul ignore next */\r\n        /* eslint-disable no-lone-blocks */\r\n        {\r\n          warning(false, 'Picker not correct forward Keydown operation. Please help to fire issue about this.');\r\n          return false;\r\n        }\r\n      };\r\n      // ============================= Text ==============================\r\n      const sharedTextHooksProps = {\r\n        formatList,\r\n        generateConfig: toRef(props, 'generateConfig'),\r\n        locale: toRef(props, 'locale')\r\n      };\r\n      const [startValueTexts, firstStartValueText] = useValueTexts(computed(() => getValue(selectedValue.value, 0)), sharedTextHooksProps);\r\n      const [endValueTexts, firstEndValueText] = useValueTexts(computed(() => getValue(selectedValue.value, 1)), sharedTextHooksProps);\r\n      const onTextChange = (newText, index) => {\r\n        const inputDate = parseValue(newText, {\r\n          locale: props.locale,\r\n          formatList: formatList.value,\r\n          generateConfig: props.generateConfig\r\n        });\r\n        const disabledFunc = index === 0 ? disabledStartDate : disabledEndDate;\r\n        if (inputDate && !disabledFunc(inputDate)) {\r\n          setSelectedValue(updateValues(selectedValue.value, inputDate, index));\r\n          setViewDate(inputDate, index);\r\n        }\r\n      };\r\n      const [startText, triggerStartTextChange, resetStartText] = useTextValueMapping({\r\n        valueTexts: startValueTexts,\r\n        onTextChange: newText => onTextChange(newText, 0)\r\n      });\r\n      const [endText, triggerEndTextChange, resetEndText] = useTextValueMapping({\r\n        valueTexts: endValueTexts,\r\n        onTextChange: newText => onTextChange(newText, 1)\r\n      });\r\n      const [rangeHoverValue, setRangeHoverValue] = useState(null);\r\n      // ========================== Hover Range ==========================\r\n      const [hoverRangedValue, setHoverRangedValue] = useState(null);\r\n      const [startHoverValue, onStartEnter, onStartLeave] = useHoverValue(startText, sharedTextHooksProps);\r\n      const [endHoverValue, onEndEnter, onEndLeave] = useHoverValue(endText, sharedTextHooksProps);\r\n      const onDateMouseenter = date => {\r\n        setHoverRangedValue(updateValues(selectedValue.value, date, mergedActivePickerIndex.value));\r\n        if (mergedActivePickerIndex.value === 0) {\r\n          onStartEnter(date);\r\n        } else {\r\n          onEndEnter(date);\r\n        }\r\n      };\r\n      const onDateMouseleave = () => {\r\n        setHoverRangedValue(updateValues(selectedValue.value, null, mergedActivePickerIndex.value));\r\n        if (mergedActivePickerIndex.value === 0) {\r\n          onStartLeave();\r\n        } else {\r\n          onEndLeave();\r\n        }\r\n      };\r\n      // ============================= Input =============================\r\n      const getSharedInputHookProps = (index, resetText) => ({\r\n        forwardKeydown,\r\n        onBlur: e => {\r\n          var _a;\r\n          (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);\r\n        },\r\n        isClickOutside: target => !elementsContains([panelDivRef.value, startInputDivRef.value, endInputDivRef.value, containerRef.value], target),\r\n        onFocus: e => {\r\n          var _a;\r\n          setMergedActivePickerIndex(index);\r\n          (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);\r\n        },\r\n        triggerOpen: newOpen => {\r\n          triggerOpen(newOpen, index);\r\n        },\r\n        onSubmit: () => {\r\n          if (\r\n          // When user typing disabledDate with keyboard and enter, this value will be empty\r\n          !selectedValue.value ||\r\n          // Normal disabled check\r\n          props.disabledDate && props.disabledDate(selectedValue.value[index])) {\r\n            return false;\r\n          }\r\n          triggerChange(selectedValue.value, index);\r\n          resetText();\r\n        },\r\n        onCancel: () => {\r\n          triggerOpen(false, index);\r\n          setSelectedValue(mergedValue.value);\r\n          resetText();\r\n        }\r\n      });\r\n      const [startInputProps, {\r\n        focused: startFocused,\r\n        typing: startTyping\r\n      }] = usePickerInput(_extends(_extends({}, getSharedInputHookProps(0, resetStartText)), {\r\n        blurToCancel: needConfirmButton,\r\n        open: startOpen,\r\n        value: startText,\r\n        onKeydown: (e, preventDefault) => {\r\n          var _a;\r\n          (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e, preventDefault);\r\n        }\r\n      }));\r\n      const [endInputProps, {\r\n        focused: endFocused,\r\n        typing: endTyping\r\n      }] = usePickerInput(_extends(_extends({}, getSharedInputHookProps(1, resetEndText)), {\r\n        blurToCancel: needConfirmButton,\r\n        open: endOpen,\r\n        value: endText,\r\n        onKeydown: (e, preventDefault) => {\r\n          var _a;\r\n          (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e, preventDefault);\r\n        }\r\n      }));\r\n      // ========================== Click Picker ==========================\r\n      const onPickerClick = e => {\r\n        var _a;\r\n        // When click inside the picker & outside the picker's input elements\r\n        // the panel should still be opened\r\n        (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);\r\n        if (!mergedOpen.value && !startInputRef.value.contains(e.target) && !endInputRef.value.contains(e.target)) {\r\n          if (!mergedDisabled.value[0]) {\r\n            triggerOpenAndFocus(0);\r\n          } else if (!mergedDisabled.value[1]) {\r\n            triggerOpenAndFocus(1);\r\n          }\r\n        }\r\n      };\r\n      const onPickerMousedown = e => {\r\n        var _a;\r\n        // shouldn't affect input elements if picker is active\r\n        (_a = props.onMousedown) === null || _a === void 0 ? void 0 : _a.call(props, e);\r\n        if (mergedOpen.value && (startFocused.value || endFocused.value) && !startInputRef.value.contains(e.target) && !endInputRef.value.contains(e.target)) {\r\n          e.preventDefault();\r\n        }\r\n      };\r\n      // ============================= Sync ==============================\r\n      // Close should sync back with text value\r\n      const startStr = computed(() => {\r\n        var _a;\r\n        return ((_a = mergedValue.value) === null || _a === void 0 ? void 0 : _a[0]) ? formatValue(mergedValue.value[0], {\r\n          locale: props.locale,\r\n          format: 'YYYYMMDDHHmmss',\r\n          generateConfig: props.generateConfig\r\n        }) : '';\r\n      });\r\n      const endStr = computed(() => {\r\n        var _a;\r\n        return ((_a = mergedValue.value) === null || _a === void 0 ? void 0 : _a[1]) ? formatValue(mergedValue.value[1], {\r\n          locale: props.locale,\r\n          format: 'YYYYMMDDHHmmss',\r\n          generateConfig: props.generateConfig\r\n        }) : '';\r\n      });\r\n      watch([mergedOpen, startValueTexts, endValueTexts], () => {\r\n        if (!mergedOpen.value) {\r\n          setSelectedValue(mergedValue.value);\r\n          if (!startValueTexts.value.length || startValueTexts.value[0] === '') {\r\n            triggerStartTextChange('');\r\n          } else if (firstStartValueText.value !== startText.value) {\r\n            resetStartText();\r\n          }\r\n          if (!endValueTexts.value.length || endValueTexts.value[0] === '') {\r\n            triggerEndTextChange('');\r\n          } else if (firstEndValueText.value !== endText.value) {\r\n            resetEndText();\r\n          }\r\n        }\r\n      });\r\n      // Sync innerValue with control mode\r\n      watch([startStr, endStr], () => {\r\n        setSelectedValue(mergedValue.value);\r\n      });\r\n      // ============================ Warning ============================\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        watchEffect(() => {\r\n          const {\r\n            value,\r\n            disabled\r\n          } = props;\r\n          if (value && Array.isArray(disabled) && (getValue(disabled, 0) && !getValue(value, 0) || getValue(disabled, 1) && !getValue(value, 1))) {\r\n            warning(false, '`disabled` should not set with empty `value`. You should set `allowEmpty` or `value` instead.');\r\n          }\r\n        });\r\n      }\r\n      expose({\r\n        focus: () => {\r\n          if (startInputRef.value) {\r\n            startInputRef.value.focus();\r\n          }\r\n        },\r\n        blur: () => {\r\n          if (startInputRef.value) {\r\n            startInputRef.value.blur();\r\n          }\r\n          if (endInputRef.value) {\r\n            endInputRef.value.blur();\r\n          }\r\n        }\r\n      });\r\n      // ============================= Panel =============================\r\n      const panelHoverRangedValue = computed(() => {\r\n        if (mergedOpen.value && hoverRangedValue.value && hoverRangedValue.value[0] && hoverRangedValue.value[1] && props.generateConfig.isAfter(hoverRangedValue.value[1], hoverRangedValue.value[0])) {\r\n          return hoverRangedValue.value;\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n      function renderPanel() {\r\n        let panelPosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n        let panelProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n        const {\r\n          generateConfig,\r\n          showTime,\r\n          dateRender,\r\n          direction,\r\n          disabledTime,\r\n          prefixCls,\r\n          locale\r\n        } = props;\r\n        let panelShowTime = showTime;\r\n        if (showTime && typeof showTime === 'object' && showTime.defaultValue) {\r\n          const timeDefaultValues = showTime.defaultValue;\r\n          panelShowTime = _extends(_extends({}, showTime), {\r\n            defaultValue: getValue(timeDefaultValues, mergedActivePickerIndex.value) || undefined\r\n          });\r\n        }\r\n        let panelDateRender = null;\r\n        if (dateRender) {\r\n          panelDateRender = _ref2 => {\r\n            let {\r\n              current: date,\r\n              today\r\n            } = _ref2;\r\n            return dateRender({\r\n              current: date,\r\n              today,\r\n              info: {\r\n                range: mergedActivePickerIndex.value ? 'end' : 'start'\r\n              }\r\n            });\r\n          };\r\n        }\r\n        return _createVNode(RangeContextProvider, {\r\n          \"value\": {\r\n            inRange: true,\r\n            panelPosition,\r\n            rangedValue: rangeHoverValue.value || selectedValue.value,\r\n            hoverRangedValue: panelHoverRangedValue.value\r\n          }\r\n        }, {\r\n          default: () => [_createVNode(PickerPanel, _objectSpread(_objectSpread(_objectSpread({}, props), panelProps), {}, {\r\n            \"dateRender\": panelDateRender,\r\n            \"showTime\": panelShowTime,\r\n            \"mode\": mergedModes.value[mergedActivePickerIndex.value],\r\n            \"generateConfig\": generateConfig,\r\n            \"style\": undefined,\r\n            \"direction\": direction,\r\n            \"disabledDate\": mergedActivePickerIndex.value === 0 ? disabledStartDate : disabledEndDate,\r\n            \"disabledTime\": date => {\r\n              if (disabledTime) {\r\n                return disabledTime(date, mergedActivePickerIndex.value === 0 ? 'start' : 'end');\r\n              }\r\n              return false;\r\n            },\r\n            \"class\": classNames({\r\n              [`${prefixCls}-panel-focused`]: mergedActivePickerIndex.value === 0 ? !startTyping.value : !endTyping.value\r\n            }),\r\n            \"value\": getValue(selectedValue.value, mergedActivePickerIndex.value),\r\n            \"locale\": locale,\r\n            \"tabIndex\": -1,\r\n            \"onPanelChange\": (date, newMode) => {\r\n              // clear hover value when panel change\r\n              if (mergedActivePickerIndex.value === 0) {\r\n                onStartLeave(true);\r\n              }\r\n              if (mergedActivePickerIndex.value === 1) {\r\n                onEndLeave(true);\r\n              }\r\n              triggerModesChange(updateValues(mergedModes.value, newMode, mergedActivePickerIndex.value), updateValues(selectedValue.value, date, mergedActivePickerIndex.value));\r\n              let viewDate = date;\r\n              if (panelPosition === 'right' && mergedModes.value[mergedActivePickerIndex.value] === newMode) {\r\n                viewDate = getClosingViewDate(viewDate, newMode, generateConfig, -1);\r\n              }\r\n              setViewDate(viewDate, mergedActivePickerIndex.value);\r\n            },\r\n            \"onOk\": null,\r\n            \"onSelect\": undefined,\r\n            \"onChange\": undefined,\r\n            \"defaultValue\": mergedActivePickerIndex.value === 0 ? getValue(selectedValue.value, 1) : getValue(selectedValue.value, 0)\r\n          }), null)]\r\n        });\r\n      }\r\n      const onContextSelect = (date, type) => {\r\n        const values = updateValues(selectedValue.value, date, mergedActivePickerIndex.value);\r\n        if (type === 'submit' || type !== 'key' && !needConfirmButton.value) {\r\n          // triggerChange will also update selected values\r\n          triggerChange(values, mergedActivePickerIndex.value);\r\n          // clear hover value style\r\n          if (mergedActivePickerIndex.value === 0) {\r\n            onStartLeave();\r\n          } else {\r\n            onEndLeave();\r\n          }\r\n        } else {\r\n          setSelectedValue(values);\r\n        }\r\n      };\r\n      useProvidePanel({\r\n        operationRef,\r\n        hideHeader: computed(() => props.picker === 'time'),\r\n        onDateMouseenter,\r\n        onDateMouseleave,\r\n        hideRanges: computed(() => true),\r\n        onSelect: onContextSelect,\r\n        open: mergedOpen\r\n      });\r\n      return () => {\r\n        const {\r\n          prefixCls = 'rc-picker',\r\n          id,\r\n          popupStyle,\r\n          dropdownClassName,\r\n          transitionName,\r\n          dropdownAlign,\r\n          getPopupContainer,\r\n          generateConfig,\r\n          locale,\r\n          placeholder,\r\n          autofocus,\r\n          picker = 'date',\r\n          showTime,\r\n          separator = '~',\r\n          disabledDate,\r\n          panelRender,\r\n          allowClear,\r\n          suffixIcon,\r\n          clearIcon,\r\n          inputReadOnly,\r\n          renderExtraFooter,\r\n          onMouseenter,\r\n          onMouseleave,\r\n          onMouseup,\r\n          onOk,\r\n          components,\r\n          direction,\r\n          autocomplete = 'off'\r\n        } = props;\r\n        const arrowPositionStyle = direction === 'rtl' ? {\r\n          right: `${arrowLeft.value}px`\r\n        } : {\r\n          left: `${arrowLeft.value}px`\r\n        };\r\n        function renderPanels() {\r\n          let panels;\r\n          const extraNode = getExtraFooter(prefixCls, mergedModes.value[mergedActivePickerIndex.value], renderExtraFooter);\r\n          const rangesNode = getRanges({\r\n            prefixCls,\r\n            components,\r\n            needConfirmButton: needConfirmButton.value,\r\n            okDisabled: !getValue(selectedValue.value, mergedActivePickerIndex.value) || disabledDate && disabledDate(selectedValue.value[mergedActivePickerIndex.value]),\r\n            locale,\r\n            onOk: () => {\r\n              if (getValue(selectedValue.value, mergedActivePickerIndex.value)) {\r\n                // triggerChangeOld(selectedValue.value);\r\n                triggerChange(selectedValue.value, mergedActivePickerIndex.value);\r\n                if (onOk) {\r\n                  onOk(selectedValue.value);\r\n                }\r\n              }\r\n            }\r\n          });\r\n          if (picker !== 'time' && !showTime) {\r\n            const viewDate = mergedActivePickerIndex.value === 0 ? startViewDate.value : endViewDate.value;\r\n            const nextViewDate = getClosingViewDate(viewDate, picker, generateConfig);\r\n            const currentMode = mergedModes.value[mergedActivePickerIndex.value];\r\n            const showDoublePanel = currentMode === picker;\r\n            const leftPanel = renderPanel(showDoublePanel ? 'left' : false, {\r\n              pickerValue: viewDate,\r\n              onPickerValueChange: newViewDate => {\r\n                setViewDate(newViewDate, mergedActivePickerIndex.value);\r\n              }\r\n            });\r\n            const rightPanel = renderPanel('right', {\r\n              pickerValue: nextViewDate,\r\n              onPickerValueChange: newViewDate => {\r\n                setViewDate(getClosingViewDate(newViewDate, picker, generateConfig, -1), mergedActivePickerIndex.value);\r\n              }\r\n            });\r\n            if (direction === 'rtl') {\r\n              panels = _createVNode(_Fragment, null, [rightPanel, showDoublePanel && leftPanel]);\r\n            } else {\r\n              panels = _createVNode(_Fragment, null, [leftPanel, showDoublePanel && rightPanel]);\r\n            }\r\n          } else {\r\n            panels = renderPanel();\r\n          }\r\n          let mergedNodes = _createVNode(\"div\", {\r\n            \"class\": `${prefixCls}-panel-layout`\r\n          }, [_createVNode(PresetPanel, {\r\n            \"prefixCls\": prefixCls,\r\n            \"presets\": presetList.value,\r\n            \"onClick\": nextValue => {\r\n              triggerChange(nextValue, null);\r\n              triggerOpen(false, mergedActivePickerIndex.value);\r\n            },\r\n            \"onHover\": hoverValue => {\r\n              setRangeHoverValue(hoverValue);\r\n            }\r\n          }, null), _createVNode(\"div\", null, [_createVNode(\"div\", {\r\n            \"class\": `${prefixCls}-panels`\r\n          }, [panels]), (extraNode || rangesNode) && _createVNode(\"div\", {\r\n            \"class\": `${prefixCls}-footer`\r\n          }, [extraNode, rangesNode])])]);\r\n          if (panelRender) {\r\n            mergedNodes = panelRender(mergedNodes);\r\n          }\r\n          return _createVNode(\"div\", {\r\n            \"class\": `${prefixCls}-panel-container`,\r\n            \"style\": {\r\n              marginLeft: `${panelLeft.value}px`\r\n            },\r\n            \"ref\": panelDivRef,\r\n            \"onMousedown\": e => {\r\n              e.preventDefault();\r\n            }\r\n          }, [mergedNodes]);\r\n        }\r\n        const rangePanel = _createVNode(\"div\", {\r\n          \"class\": classNames(`${prefixCls}-range-wrapper`, `${prefixCls}-${picker}-range-wrapper`),\r\n          \"style\": {\r\n            minWidth: `${popupMinWidth.value}px`\r\n          }\r\n        }, [_createVNode(\"div\", {\r\n          \"ref\": arrowRef,\r\n          \"class\": `${prefixCls}-range-arrow`,\r\n          \"style\": arrowPositionStyle\r\n        }, null), renderPanels()]);\r\n        // ============================= Icons =============================\r\n        let suffixNode;\r\n        if (suffixIcon) {\r\n          suffixNode = _createVNode(\"span\", {\r\n            \"class\": `${prefixCls}-suffix`\r\n          }, [suffixIcon]);\r\n        }\r\n        let clearNode;\r\n        if (allowClear && (getValue(mergedValue.value, 0) && !mergedDisabled.value[0] || getValue(mergedValue.value, 1) && !mergedDisabled.value[1])) {\r\n          clearNode = _createVNode(\"span\", {\r\n            \"onMousedown\": e => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n            },\r\n            \"onMouseup\": e => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              let values = mergedValue.value;\r\n              if (!mergedDisabled.value[0]) {\r\n                values = updateValues(values, null, 0);\r\n              }\r\n              if (!mergedDisabled.value[1]) {\r\n                values = updateValues(values, null, 1);\r\n              }\r\n              triggerChange(values, null);\r\n              triggerOpen(false, mergedActivePickerIndex.value);\r\n            },\r\n            \"class\": `${prefixCls}-clear`\r\n          }, [clearIcon || _createVNode(\"span\", {\r\n            \"class\": `${prefixCls}-clear-btn`\r\n          }, null)]);\r\n        }\r\n        const inputSharedProps = {\r\n          size: getInputSize(picker, formatList.value[0], generateConfig)\r\n        };\r\n        let activeBarLeft = 0;\r\n        let activeBarWidth = 0;\r\n        if (startInputDivRef.value && endInputDivRef.value && separatorRef.value) {\r\n          if (mergedActivePickerIndex.value === 0) {\r\n            activeBarWidth = startInputDivRef.value.offsetWidth;\r\n          } else {\r\n            activeBarLeft = arrowLeft.value;\r\n            activeBarWidth = endInputDivRef.value.offsetWidth;\r\n          }\r\n        }\r\n        const activeBarPositionStyle = direction === 'rtl' ? {\r\n          right: `${activeBarLeft}px`\r\n        } : {\r\n          left: `${activeBarLeft}px`\r\n        };\r\n        // ============================ Return =============================\r\n        return _createVNode(\"div\", _objectSpread({\r\n          \"ref\": containerRef,\r\n          \"class\": classNames(prefixCls, `${prefixCls}-range`, attrs.class, {\r\n            [`${prefixCls}-disabled`]: mergedDisabled.value[0] && mergedDisabled.value[1],\r\n            [`${prefixCls}-focused`]: mergedActivePickerIndex.value === 0 ? startFocused.value : endFocused.value,\r\n            [`${prefixCls}-rtl`]: direction === 'rtl'\r\n          }),\r\n          \"style\": attrs.style,\r\n          \"onClick\": onPickerClick,\r\n          \"onMouseenter\": onMouseenter,\r\n          \"onMouseleave\": onMouseleave,\r\n          \"onMousedown\": onPickerMousedown,\r\n          \"onMouseup\": onMouseup\r\n        }, getDataOrAriaProps(props)), [_createVNode(\"div\", {\r\n          \"class\": classNames(`${prefixCls}-input`, {\r\n            [`${prefixCls}-input-active`]: mergedActivePickerIndex.value === 0,\r\n            [`${prefixCls}-input-placeholder`]: !!startHoverValue.value\r\n          }),\r\n          \"ref\": startInputDivRef\r\n        }, [_createVNode(\"input\", _objectSpread(_objectSpread(_objectSpread({\r\n          \"id\": id,\r\n          \"disabled\": mergedDisabled.value[0],\r\n          \"readonly\": inputReadOnly || typeof formatList.value[0] === 'function' || !startTyping.value,\r\n          \"value\": startHoverValue.value || startText.value,\r\n          \"onInput\": e => {\r\n            triggerStartTextChange(e.target.value);\r\n          },\r\n          \"autofocus\": autofocus,\r\n          \"placeholder\": getValue(placeholder, 0) || '',\r\n          \"ref\": startInputRef\r\n        }, startInputProps.value), inputSharedProps), {}, {\r\n          \"autocomplete\": autocomplete\r\n        }), null)]), _createVNode(\"div\", {\r\n          \"class\": `${prefixCls}-range-separator`,\r\n          \"ref\": separatorRef\r\n        }, [separator]), _createVNode(\"div\", {\r\n          \"class\": classNames(`${prefixCls}-input`, {\r\n            [`${prefixCls}-input-active`]: mergedActivePickerIndex.value === 1,\r\n            [`${prefixCls}-input-placeholder`]: !!endHoverValue.value\r\n          }),\r\n          \"ref\": endInputDivRef\r\n        }, [_createVNode(\"input\", _objectSpread(_objectSpread(_objectSpread({\r\n          \"disabled\": mergedDisabled.value[1],\r\n          \"readonly\": inputReadOnly || typeof formatList.value[0] === 'function' || !endTyping.value,\r\n          \"value\": endHoverValue.value || endText.value,\r\n          \"onInput\": e => {\r\n            triggerEndTextChange(e.target.value);\r\n          },\r\n          \"placeholder\": getValue(placeholder, 1) || '',\r\n          \"ref\": endInputRef\r\n        }, endInputProps.value), inputSharedProps), {}, {\r\n          \"autocomplete\": autocomplete\r\n        }), null)]), _createVNode(\"div\", {\r\n          \"class\": `${prefixCls}-active-bar`,\r\n          \"style\": _extends(_extends({}, activeBarPositionStyle), {\r\n            width: `${activeBarWidth}px`,\r\n            position: 'absolute'\r\n          })\r\n        }, null), suffixNode, clearNode, _createVNode(PickerTrigger, {\r\n          \"visible\": mergedOpen.value,\r\n          \"popupStyle\": popupStyle,\r\n          \"prefixCls\": prefixCls,\r\n          \"dropdownClassName\": dropdownClassName,\r\n          \"dropdownAlign\": dropdownAlign,\r\n          \"getPopupContainer\": getPopupContainer,\r\n          \"transitionName\": transitionName,\r\n          \"range\": true,\r\n          \"direction\": direction\r\n        }, {\r\n          default: () => [_createVNode(\"div\", {\r\n            \"style\": {\r\n              pointerEvents: 'none',\r\n              position: 'absolute',\r\n              top: 0,\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0\r\n            }\r\n          }, null)],\r\n          popupElement: () => rangePanel\r\n        })]);\r\n      };\r\n    }\r\n  });\r\n}\r\nconst InterRangerPicker = RangerPicker();\r\nexport default InterRangerPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}