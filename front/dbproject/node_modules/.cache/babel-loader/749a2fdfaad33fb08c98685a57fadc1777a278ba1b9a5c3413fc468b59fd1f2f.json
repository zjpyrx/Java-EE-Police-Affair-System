{"ast":null,"code":"import axios from \"axios\";\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      numCases: 0,\n      statusStatistics: \"默认\",\n      typeStatistics: \"默认\",\n      cityStatistics: \"默认\",\n      cityName: \"默认\",\n      selectedCity1: \"全部\",\n      selectedYear1: \"全部\",\n      selectedMonth1: \"全部\",\n      selectedCity2: \"全部\",\n      selectedYear2: \"全部\",\n      selectedMonth2: \"全部\",\n      selectedCity3: \"全部\",\n      selectedYear3: \"全部\",\n      cityDateStatistics: \"默认\",\n      years: [],\n      selectedMethod: \"年份\"\n    };\n  },\n  methods: {\n    async getCityStatistics() {\n      try {\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/caseCityStatistics\");\n        this.cityStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getCityStatistics出错！\");\n      }\n    },\n    async getCityDateStatistics() {\n      try {\n        const response = await axios.get(\"http://localhost:7078/api/crimeDataStatistics/cityDateStatistics\", {\n          params: {\n            city: this.selectedCity3\n          }\n        });\n        this.cityDateStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getCityDateStatistics出错！\");\n      }\n    },\n    async getStatusCityDateStatistics() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/statusCityDateStatistics?city=${encodeURIComponent(this.selectedCity1)}&year=${encodeURIComponent(this.selectedYear1)}&month=${encodeURIComponent(this.selectedMonth1)}`);\n        this.statusStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getStatusCityDateStatistics出错！\");\n      }\n    },\n    async getTypeCityDateStatistics() {\n      try {\n        const response = await axios.get(`http://localhost:7078/api/crimeDataStatistics/typeCityDateStatistics?city=${encodeURIComponent(this.selectedCity2)}&year=${encodeURIComponent(this.selectedYear2)}&month=${encodeURIComponent(this.selectedMonth2)}`);\n        this.typeStatistics = response.data;\n      } catch (error) {\n        // 请求失败时的处理逻辑\n        alert(error);\n        console.log(\"getTypeCityDateStatistics出错！\");\n      }\n    },\n    drawStatusPieChart() {\n      const pieChart = echarts.init(document.getElementById(\"statusPieChart\"));\n      const option = {\n        tooltip: {\n          trigger: \"item\"\n        },\n        legend: {\n          top: \"5%\",\n          left: \"center\"\n        },\n        series: [{\n          name: \"Access From\",\n          type: \"pie\",\n          radius: [\"40%\", \"70%\"],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: \"#fff\",\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: \"center\"\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [{\n            value: this.statusStatistics[\"立案\"],\n            name: \"立案\"\n          }, {\n            value: this.statusStatistics[\"调查\"],\n            name: \"调查\"\n          }, {\n            value: this.statusStatistics[\"结案\"],\n            name: \"结案\"\n          }]\n        }]\n      };\n      option && pieChart.setOption(option);\n    },\n    drawTypePieChart() {\n      const pieChart = echarts.init(document.getElementById(\"typePieChart\"));\n      const option = {\n        tooltip: {\n          trigger: \"item\"\n        },\n        legend: {\n          top: \"5%\",\n          left: \"center\"\n        },\n        series: [{\n          name: \"Access From\",\n          type: \"pie\",\n          radius: [\"40%\", \"70%\"],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: \"#fff\",\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: \"center\"\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [{\n            value: this.typeStatistics[\"强奸\"],\n            name: \"强奸\"\n          }, {\n            value: this.typeStatistics[\"抢劫\"],\n            name: \"抢劫\"\n          }, {\n            value: this.typeStatistics[\"故意伤害\"],\n            name: \"故意伤害\"\n          }, {\n            value: this.typeStatistics[\"盗窃\"],\n            name: \"盗窃\"\n          }, {\n            value: this.typeStatistics[\"诈骗\"],\n            name: \"诈骗\"\n          }, {\n            value: this.typeStatistics[\"谋杀\"],\n            name: \"谋杀\"\n          }]\n        }]\n      };\n      option && pieChart.setOption(option);\n    },\n    drawYearZheChart() {\n      var result = {}; // 保存结果的对象\n      for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\n        let sum = 0;\n        for (const value of Object.values(yearData)) {\n          sum += value;\n        }\n        result[year] = sum;\n      }\n      result = Object.values(result); // result: [6, 6, 7, 4, 5, 4, 78]\n\n      const zheChart = echarts.init(document.getElementById(\"zheChart\"));\n      const option = {\n        xAxis: {\n          type: \"category\",\n          data: this.years\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [{\n          data: result,\n          type: \"line\"\n        }]\n      };\n      option && zheChart.setOption(option);\n    },\n    drawMonthZheChart() {\n      const zheChart = echarts.init(document.getElementById(\"zheChart\"));\n      var option;\n      if (this.selectedYear3 !== \"全部\") {\n        option = {\n          xAxis: {\n            type: \"category\",\n            data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n          },\n          yAxis: {\n            type: \"value\"\n          },\n          series: [{\n            data: [this.cityDateStatistics[this.selectedYear3][\"1\"], this.cityDateStatistics[this.selectedYear3][\"2\"], this.cityDateStatistics[this.selectedYear3][\"3\"], this.cityDateStatistics[this.selectedYear3][\"4\"], this.cityDateStatistics[this.selectedYear3][\"5\"], this.cityDateStatistics[this.selectedYear3][\"6\"], this.cityDateStatistics[this.selectedYear3][\"7\"], this.cityDateStatistics[this.selectedYear3][\"8\"], this.cityDateStatistics[this.selectedYear3][\"9\"], this.cityDateStatistics[this.selectedYear3][\"10\"], this.cityDateStatistics[this.selectedYear3][\"11\"], this.cityDateStatistics[this.selectedYear3][\"12\"]],\n            type: \"line\"\n          }]\n        };\n      } else {\n        var result = {}; // 保存结果的对象\n\n        for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\n          year; // 为了取消year未使用的报错\n          for (const [month, value] of Object.entries(yearData)) {\n            if (!result[month]) {\n              result[month] = value;\n            } else {\n              result[month] += value;\n            }\n          }\n        }\n        result = Object.values(result);\n        option = {\n          xAxis: {\n            type: \"category\",\n            data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n          },\n          yAxis: {\n            type: \"value\"\n          },\n          series: [{\n            data: [result[\"1\"], result[\"2\"], result[\"3\"], result[\"4\"], result[\"5\"], result[\"6\"], result[\"7\"], result[\"8\"], result[\"9\"], result[\"10\"], result[\"11\"], result[\"12\"]],\n            type: \"line\"\n          }]\n        };\n      }\n      option && zheChart.setOption(option);\n    },\n    drawZheChart() {\n      if (this.selectedMethod === \"年份\") {\n        this.drawYearZheChart();\n      } else {\n        this.drawMonthZheChart();\n      }\n    }\n  },\n  watch: {\n    async selectedCity1() {\n      await this.getStatusCityDateStatistics();\n      this.drawStatusPieChart();\n    },\n    async selectedYear1() {\n      await this.getStatusCityDateStatistics();\n      this.drawStatusPieChart();\n    },\n    async selectedMonth1() {\n      await this.getStatusCityDateStatistics();\n      this.drawStatusPieChart();\n    },\n    async selectedCity2() {\n      await this.getTypeCityDateStatistics();\n      this.drawTypePieChart();\n    },\n    async selectedYear2() {\n      await this.getTypeCityDateStatistics();\n      this.drawTypePieChart();\n    },\n    async selectedMonth2() {\n      await this.getTypeCityDateStatistics();\n      this.drawTypePieChart();\n    },\n    selectedYear3() {\n      this.drawZheChart();\n    },\n    async selectedCity3() {\n      await this.getCityDateStatistics();\n      this.drawZheChart();\n    },\n    async selectedMethod() {\n      if (this.selectedMethod === \"年份\") {\n        this.drawZheChart();\n      } else {\n        await this.getCityDateStatistics();\n        this.drawZheChart();\n      }\n    }\n  },\n  async created() {\n    await this.getCityStatistics(); // 获取城市及其总的案件数，其内接口返回数据形如{\"西安\":10,\"上海\":20,...}\n    await this.getStatusCityDateStatistics(); // 获取指定城市指定年月的案件状态，其内接口返回数据形如{\"立案\":10,\"状态\":20,...}\n    await this.getTypeCityDateStatistics(); // 获取指定城市指定年月的案件类型，其内接口返回数据形如{\"抢劫\":10,\"谋杀\":20,...}\n    await this.getCityDateStatistics(); // 获取指定城市指定年月的案件数目，其内接口返回数据形如{\"2017\":{\"1\":3,\"2\":5,...},...}\n    this.years = Object.keys(this.cityDateStatistics); // 获取年份范围,形如[\"2017\",\"2018\",...]\n    this.cityName = Object.keys(this.cityStatistics); // 获取年份范围,形如[\"西安\",\"上海\",...]\n\n    // 获取案件总数\n    this.numCases = this.statusStatistics[\"立案\"] + this.statusStatistics[\"调查\"] + this.statusStatistics[\"结案\"];\n    this.drawStatusPieChart(); // 画总案件状态圆饼图\n    this.drawTypePieChart(); // 画总案件类型圆饼图\n    this.drawZheChart(); // 画折线图\n  }\n};","map":{"version":3,"names":["axios","echarts","data","numCases","statusStatistics","typeStatistics","cityStatistics","cityName","selectedCity1","selectedYear1","selectedMonth1","selectedCity2","selectedYear2","selectedMonth2","selectedCity3","selectedYear3","cityDateStatistics","years","selectedMethod","methods","getCityStatistics","response","get","error","alert","console","log","getCityDateStatistics","params","city","getStatusCityDateStatistics","encodeURIComponent","getTypeCityDateStatistics","drawStatusPieChart","pieChart","init","document","getElementById","option","tooltip","trigger","legend","top","left","series","name","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontSize","fontWeight","labelLine","value","setOption","drawTypePieChart","drawYearZheChart","result","year","yearData","Object","entries","sum","values","zheChart","xAxis","yAxis","drawMonthZheChart","month","drawZheChart","watch","created","keys"],"sources":["C:\\GitHubWarehouse\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\CaseManagement\\CrimeDataStatistics.vue"],"sourcesContent":["<!-- zyh -->\r\n<template>\r\n<el-header class=\"sub-header\"  @mousemove=\"handleMouseMove\">\r\n    <div>&nbsp;&nbsp;案件管理&nbsp;>&nbsp;犯罪数据统计</div>\r\n  </el-header>\r\n\r\n  <div class=\"main\">\r\n    <h4>案件总数：{{ numCases }}</h4>\r\n\r\n    <h2 style=\"text-align: center\">案件状态统计</h2>\r\n    <select v-model=\"selectedCity1\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">\r\n        {{ city }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"selectedYear1\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <select v-model=\"selectedMonth1\">\r\n      <option selected value=\"全部\">全部月份</option>\r\n      <option\r\n        v-for=\"i in [\r\n          '1',\r\n          '2',\r\n          '3',\r\n          '4',\r\n          '5',\r\n          '6',\r\n          '7',\r\n          '8',\r\n          '9',\r\n          '10',\r\n          '11',\r\n          '12',\r\n        ]\"\r\n        :value=\"i\"\r\n        :key=\"i\"\r\n      >\r\n        {{ i }}\r\n      </option>\r\n    </select>\r\n    <div\r\n      id=\"statusPieChart\"\r\n      style=\"width: 400px; height: 400px; margin-left: auto; margin-right: auto\"\r\n    ></div>\r\n\r\n    <h2 style=\"text-align: center\">案件类型统计</h2>\r\n    <select v-model=\"selectedCity2\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">\r\n        {{ city }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"selectedYear2\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <select v-model=\"selectedMonth2\">\r\n      <option selected value=\"全部\">全部月份</option>\r\n      <option\r\n        v-for=\"i in [\r\n          '1',\r\n          '2',\r\n          '3',\r\n          '4',\r\n          '5',\r\n          '6',\r\n          '7',\r\n          '8',\r\n          '9',\r\n          '10',\r\n          '11',\r\n          '12',\r\n        ]\"\r\n        :value=\"i\"\r\n        :key=\"i\"\r\n      >\r\n        {{ i }}\r\n      </option>\r\n    </select>\r\n    <div\r\n      id=\"typePieChart\"\r\n      style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"\r\n    ></div>\r\n\r\n    <h2 style=\"text-align: center\">城市案件统计</h2>\r\n    <table\r\n      border=\"1px solid black\"\r\n      style=\"margin-left: auto; margin-right: auto; text-align: center\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>城市</th>\r\n          <th>数量</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(count_, city_) in cityStatistics\" :key=\"city_\">\r\n          <td>{{ city_ }}</td>\r\n          <td>{{ count_ }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <h2 style=\"text-align: center\">分时间和城市的案件统计</h2>\r\n    <select v-model=\"selectedCity3\">\r\n      <option value=\"全部\" selected>全部城市</option>\r\n      <option v-for=\"city in cityName\" :value=\"city\" :key=\"city\">\r\n        {{ city }}\r\n      </option>\r\n    </select>\r\n    <select v-model=\"selectedMethod\">\r\n      <option selected value=\"年份\">年份统计</option>\r\n      <option selected value=\"月份\">月份统计</option>\r\n    </select>\r\n    <select v-if=\"selectedMethod === '月份'\" v-model=\"selectedYear3\">\r\n      <option selected value=\"全部\">全部年份</option>\r\n      <option v-for=\"i in years\" :value=\"i\" :key=\"i\">{{ i }}</option>\r\n    </select>\r\n    <div\r\n      id=\"zheChart\"\r\n      style=\"width: 600px; height: 400px; margin-left: auto; margin-right: auto\"\r\n    ></div>\r\n\r\n    <!-- <button @click=\"getCityDateStatistics\">基于城市的时间统计</button> -->\r\n    <!-- <div>{{ cityDateStatistics }}</div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      numCases: 0,\r\n      statusStatistics: \"默认\",\r\n      typeStatistics: \"默认\",\r\n      cityStatistics: \"默认\",\r\n      cityName: \"默认\",\r\n      selectedCity1: \"全部\",\r\n      selectedYear1: \"全部\",\r\n      selectedMonth1: \"全部\",\r\n      selectedCity2: \"全部\",\r\n      selectedYear2: \"全部\",\r\n      selectedMonth2: \"全部\",\r\n      selectedCity3: \"全部\",\r\n      selectedYear3: \"全部\",\r\n      cityDateStatistics: \"默认\",\r\n      years: [],\r\n      selectedMethod: \"年份\",\r\n    };\r\n  },\r\n  methods: {\r\n    async getCityStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:7078/api/crimeDataStatistics/caseCityStatistics\"\r\n        );\r\n        this.cityStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityStatistics出错！\");\r\n      }\r\n    },\r\n    async getCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:7078/api/crimeDataStatistics/cityDateStatistics\",\r\n          { params: { city: this.selectedCity3 } }\r\n        );\r\n        this.cityDateStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getStatusCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:7078/api/crimeDataStatistics/statusCityDateStatistics?city=${encodeURIComponent(\r\n            this.selectedCity1\r\n          )}&year=${encodeURIComponent(\r\n            this.selectedYear1\r\n          )}&month=${encodeURIComponent(this.selectedMonth1)}`\r\n        );\r\n        this.statusStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getStatusCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    async getTypeCityDateStatistics() {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:7078/api/crimeDataStatistics/typeCityDateStatistics?city=${encodeURIComponent(\r\n            this.selectedCity2\r\n          )}&year=${encodeURIComponent(\r\n            this.selectedYear2\r\n          )}&month=${encodeURIComponent(this.selectedMonth2)}`\r\n        );\r\n        this.typeStatistics = response.data;\r\n      } catch (error) {\r\n        // 请求失败时的处理逻辑\r\n        alert(error);\r\n        console.log(\"getTypeCityDateStatistics出错！\");\r\n      }\r\n    },\r\n    drawStatusPieChart() {\r\n      const pieChart = echarts.init(document.getElementById(\"statusPieChart\"));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        legend: {\r\n          top: \"5%\",\r\n          left: \"center\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Access From\",\r\n            type: \"pie\",\r\n            radius: [\"40%\", \"70%\"],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 2,\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: \"center\",\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n            labelLine: {\r\n              show: false,\r\n            },\r\n            data: [\r\n              { value: this.statusStatistics[\"立案\"], name: \"立案\" },\r\n              { value: this.statusStatistics[\"调查\"], name: \"调查\" },\r\n              { value: this.statusStatistics[\"结案\"], name: \"结案\" },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawTypePieChart() {\r\n      const pieChart = echarts.init(document.getElementById(\"typePieChart\"));\r\n\r\n      const option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        legend: {\r\n          top: \"5%\",\r\n          left: \"center\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Access From\",\r\n            type: \"pie\",\r\n            radius: [\"40%\", \"70%\"],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: \"#fff\",\r\n              borderWidth: 2,\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: \"center\",\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 20,\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n            labelLine: {\r\n              show: false,\r\n            },\r\n            data: [\r\n              { value: this.typeStatistics[\"强奸\"], name: \"强奸\" },\r\n              { value: this.typeStatistics[\"抢劫\"], name: \"抢劫\" },\r\n              { value: this.typeStatistics[\"故意伤害\"], name: \"故意伤害\" },\r\n              { value: this.typeStatistics[\"盗窃\"], name: \"盗窃\" },\r\n              { value: this.typeStatistics[\"诈骗\"], name: \"诈骗\" },\r\n              { value: this.typeStatistics[\"谋杀\"], name: \"谋杀\" },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && pieChart.setOption(option);\r\n    },\r\n    drawYearZheChart() {\r\n      var result = {}; // 保存结果的对象\r\n      for (const [year, yearData] of Object.entries(this.cityDateStatistics)) {\r\n        let sum = 0;\r\n        for (const value of Object.values(yearData)) {\r\n          sum += value;\r\n        }\r\n        result[year] = sum;\r\n      }\r\n      result = Object.values(result); // result: [6, 6, 7, 4, 5, 4, 78]\r\n\r\n      const zheChart = echarts.init(document.getElementById(\"zheChart\"));\r\n\r\n      const option = {\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: this.years,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            data: result,\r\n            type: \"line\",\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawMonthZheChart() {\r\n      const zheChart = echarts.init(document.getElementById(\"zheChart\"));\r\n      var option;\r\n\r\n      if (this.selectedYear3 !== \"全部\") {\r\n        option = {\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: [\r\n              \"Jan\",\r\n              \"Feb\",\r\n              \"Mar\",\r\n              \"Apr\",\r\n              \"May\",\r\n              \"Jun\",\r\n              \"Jul\",\r\n              \"Aug\",\r\n              \"Sep\",\r\n              \"Oct\",\r\n              \"Nov\",\r\n              \"Dec\",\r\n            ],\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n          },\r\n          series: [\r\n            {\r\n              data: [\r\n                this.cityDateStatistics[this.selectedYear3][\"1\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"2\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"3\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"4\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"5\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"6\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"7\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"8\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"9\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"10\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"11\"],\r\n                this.cityDateStatistics[this.selectedYear3][\"12\"],\r\n              ],\r\n              type: \"line\",\r\n            },\r\n          ],\r\n        };\r\n      } else {\r\n        var result = {}; // 保存结果的对象\r\n\r\n        for (const [year, yearData] of Object.entries(\r\n          this.cityDateStatistics\r\n        )) {\r\n          year; // 为了取消year未使用的报错\r\n          for (const [month, value] of Object.entries(yearData)) {\r\n            if (!result[month]) {\r\n              result[month] = value;\r\n            } else {\r\n              result[month] += value;\r\n            }\r\n          }\r\n        }\r\n        result = Object.values(result);\r\n\r\n        option = {\r\n          xAxis: {\r\n            type: \"category\",\r\n            data: [\r\n              \"Jan\",\r\n              \"Feb\",\r\n              \"Mar\",\r\n              \"Apr\",\r\n              \"May\",\r\n              \"Jun\",\r\n              \"Jul\",\r\n              \"Aug\",\r\n              \"Sep\",\r\n              \"Oct\",\r\n              \"Nov\",\r\n              \"Dec\",\r\n            ],\r\n          },\r\n          yAxis: {\r\n            type: \"value\",\r\n          },\r\n          series: [\r\n            {\r\n              data: [\r\n                result[\"1\"],\r\n                result[\"2\"],\r\n                result[\"3\"],\r\n                result[\"4\"],\r\n                result[\"5\"],\r\n                result[\"6\"],\r\n                result[\"7\"],\r\n                result[\"8\"],\r\n                result[\"9\"],\r\n                result[\"10\"],\r\n                result[\"11\"],\r\n                result[\"12\"],\r\n              ],\r\n              type: \"line\",\r\n            },\r\n          ],\r\n        };\r\n      }\r\n\r\n      option && zheChart.setOption(option);\r\n    },\r\n    drawZheChart() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawYearZheChart();\r\n      } else {\r\n        this.drawMonthZheChart();\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    async selectedCity1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedYear1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedMonth1() {\r\n      await this.getStatusCityDateStatistics();\r\n      this.drawStatusPieChart();\r\n    },\r\n    async selectedCity2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedYear2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    async selectedMonth2() {\r\n      await this.getTypeCityDateStatistics();\r\n      this.drawTypePieChart();\r\n    },\r\n    selectedYear3() {\r\n      this.drawZheChart();\r\n    },\r\n    async selectedCity3() {\r\n      await this.getCityDateStatistics();\r\n      this.drawZheChart();\r\n    },\r\n    async selectedMethod() {\r\n      if (this.selectedMethod === \"年份\") {\r\n        this.drawZheChart();\r\n      } else {\r\n        await this.getCityDateStatistics();\r\n        this.drawZheChart();\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    await this.getCityStatistics(); // 获取城市及其总的案件数，其内接口返回数据形如{\"西安\":10,\"上海\":20,...}\r\n    await this.getStatusCityDateStatistics(); // 获取指定城市指定年月的案件状态，其内接口返回数据形如{\"立案\":10,\"状态\":20,...}\r\n    await this.getTypeCityDateStatistics(); // 获取指定城市指定年月的案件类型，其内接口返回数据形如{\"抢劫\":10,\"谋杀\":20,...}\r\n    await this.getCityDateStatistics(); // 获取指定城市指定年月的案件数目，其内接口返回数据形如{\"2017\":{\"1\":3,\"2\":5,...},...}\r\n    this.years = Object.keys(this.cityDateStatistics); // 获取年份范围,形如[\"2017\",\"2018\",...]\r\n    this.cityName = Object.keys(this.cityStatistics); // 获取年份范围,形如[\"西安\",\"上海\",...]\r\n\r\n    // 获取案件总数\r\n    this.numCases =\r\n      this.statusStatistics[\"立案\"] +\r\n      this.statusStatistics[\"调查\"] +\r\n      this.statusStatistics[\"结案\"];\r\n\r\n    this.drawStatusPieChart(); // 画总案件状态圆饼图\r\n    this.drawTypePieChart(); // 画总案件类型圆饼图\r\n    this.drawZheChart(); // 画折线图\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sub-header {\r\n  overflow: hidden;\r\n  display: flex;\r\n  position: absolute;\r\n  top: 70px;\r\n  left: 199px;\r\n  width: calc(100% - 199px);\r\n  height: 7vh;\r\n  min-height: 40px;\r\n  align-items: center; /* 文字竖直方向居中对齐 */\r\n background-color: #f2dccacf;\r\n  color: #000;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n}\r\n.main\r\n{\r\n  margin-top: 10vh;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}