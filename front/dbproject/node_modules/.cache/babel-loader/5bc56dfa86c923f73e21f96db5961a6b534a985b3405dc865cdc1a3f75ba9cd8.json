{"ast":null,"code":"import { warning } from '../vc-util/warning';\nexport default ((file, acceptedFiles) => {\n  if (file && acceptedFiles) {\n    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    const fileName = file.name || '';\n    const mimeType = file.type || '';\n    const baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(type => {\n      const validType = type.trim();\n      // This is something like */*,*  allow all files\n      if (/^\\*(\\/\\*)?$/.test(type)) {\n        return true;\n      }\n      // like .jpg, .png\n      if (validType.charAt(0) === '.') {\n        const lowerFileName = fileName.toLowerCase();\n        const lowerType = validType.toLowerCase();\n        let affixList = [lowerType];\n        if (lowerType === '.jpg' || lowerType === '.jpeg') {\n          affixList = ['.jpg', '.jpeg'];\n        }\n        return affixList.some(affix => lowerFileName.endsWith(affix));\n      }\n      // This is something like a image/* mime type\n      if (/\\/\\*$/.test(validType)) {\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n      // Full match\n      if (mimeType === validType) {\n        return true;\n      }\n      // Invalidate type should skip\n      if (/^\\w+$/.test(validType)) {\n        warning(false, `Upload takes an invalidate 'accept' type '${validType}'.Skip for check.`);\n        return true;\n      }\n      return false;\n    });\n  }\n  return true;\n});","map":{"version":3,"names":["warning","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","test","charAt","lowerFileName","toLowerCase","lowerType","affixList","affix","endsWith"],"sources":["C:/GitHubWarehouse/2023-TJU-DBD-Police-Affair-System/My-front/dbproject/node_modules/ant-design-vue/es/vc-upload/attr-accept.js"],"sourcesContent":["import { warning } from '../vc-util/warning';\r\nexport default ((file, acceptedFiles) => {\r\n  if (file && acceptedFiles) {\r\n    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\r\n    const fileName = file.name || '';\r\n    const mimeType = file.type || '';\r\n    const baseMimeType = mimeType.replace(/\\/.*$/, '');\r\n    return acceptedFilesArray.some(type => {\r\n      const validType = type.trim();\r\n      // This is something like */*,*  allow all files\r\n      if (/^\\*(\\/\\*)?$/.test(type)) {\r\n        return true;\r\n      }\r\n      // like .jpg, .png\r\n      if (validType.charAt(0) === '.') {\r\n        const lowerFileName = fileName.toLowerCase();\r\n        const lowerType = validType.toLowerCase();\r\n        let affixList = [lowerType];\r\n        if (lowerType === '.jpg' || lowerType === '.jpeg') {\r\n          affixList = ['.jpg', '.jpeg'];\r\n        }\r\n        return affixList.some(affix => lowerFileName.endsWith(affix));\r\n      }\r\n      // This is something like a image/* mime type\r\n      if (/\\/\\*$/.test(validType)) {\r\n        return baseMimeType === validType.replace(/\\/.*$/, '');\r\n      }\r\n      // Full match\r\n      if (mimeType === validType) {\r\n        return true;\r\n      }\r\n      // Invalidate type should skip\r\n      if (/^\\w+$/.test(validType)) {\r\n        warning(false, `Upload takes an invalidate 'accept' type '${validType}'.Skip for check.`);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  return true;\r\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,gBAAgB,CAACC,IAAI,EAAEC,aAAa,KAAK;EACvC,IAAID,IAAI,IAAIC,aAAa,EAAE;IACzB,MAAMC,kBAAkB,GAAGC,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,GAAGA,aAAa,GAAGA,aAAa,CAACI,KAAK,CAAC,GAAG,CAAC;IAClG,MAAMC,QAAQ,GAAGN,IAAI,CAACO,IAAI,IAAI,EAAE;IAChC,MAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAI,IAAI,EAAE;IAChC,MAAMC,YAAY,GAAGF,QAAQ,CAACG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAClD,OAAOT,kBAAkB,CAACU,IAAI,CAACH,IAAI,IAAI;MACrC,MAAMI,SAAS,GAAGJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAC7B;MACA,IAAI,aAAa,CAACC,IAAI,CAACN,IAAI,CAAC,EAAE;QAC5B,OAAO,IAAI;MACb;MACA;MACA,IAAII,SAAS,CAACG,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC/B,MAAMC,aAAa,GAAGX,QAAQ,CAACY,WAAW,CAAC,CAAC;QAC5C,MAAMC,SAAS,GAAGN,SAAS,CAACK,WAAW,CAAC,CAAC;QACzC,IAAIE,SAAS,GAAG,CAACD,SAAS,CAAC;QAC3B,IAAIA,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,OAAO,EAAE;UACjDC,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;QAC/B;QACA,OAAOA,SAAS,CAACR,IAAI,CAACS,KAAK,IAAIJ,aAAa,CAACK,QAAQ,CAACD,KAAK,CAAC,CAAC;MAC/D;MACA;MACA,IAAI,OAAO,CAACN,IAAI,CAACF,SAAS,CAAC,EAAE;QAC3B,OAAOH,YAAY,KAAKG,SAAS,CAACF,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MACxD;MACA;MACA,IAAIH,QAAQ,KAAKK,SAAS,EAAE;QAC1B,OAAO,IAAI;MACb;MACA;MACA,IAAI,OAAO,CAACE,IAAI,CAACF,SAAS,CAAC,EAAE;QAC3Bd,OAAO,CAAC,KAAK,EAAG,6CAA4Cc,SAAU,mBAAkB,CAAC;QACzF,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC;EACJ;EACA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}